* INVENTORY
* POSTPROC.PRG
* AMJAD IZHAR
* DADA INDUSTRIES
* THIS UPDATE: 08-10-2015



**********************
PROCEDURE POST
**********************

CLEAR
CLOSE DATA


DO top IN tbl_proc.PRG
DO bot IN tbl_proc.PRG

SET DATE brit
SET CENT ON
SET EXCLUSIVE ON

IF _DOS
 SET COLOR TO 7/1
ENDIF

         IF _WINDOWS
         	SET COLOR TO
         ENDIF


		IF _DOS
			@ 22,65 SAY "Inventory"
		ENDIF


		IF _WINDOWS
			@ 37,141 SAY "Inventory" FONT "Times New Roman", 14 STYLE "BIT"
		ENDIF

SELECT 1
USE st-tran
SORT ON DOC_TYPE, DOC_NO, SR_NO TO abc
USE

SELECT 2
USE abc
COPY TO st-tran
USE


SELECT 1
USE st-tran
INDEX ON DATE TAG stdate
SET ORDER TO stdate

SELECT 2
USE p-order
INDEX ON STR(ORDER_NO,5)+STR(C1,2)+STR(C2,2)+STR(C3,3)+STR(I1,2)+STR(I2,2)+STR(I3,4) TAG ordidx
SET ORDER TO ordidx

SELECT 3
USE item-bal
INDEX ON STR(LOC_CODE,4)+STR(I1,2)+STR(I2,2)+STR(I3,4) TAG itm_bal
SET ORDER TO itm_bal

SELECT 4
USE stock
INDEX ON STR(I1,2)+STR(I2,2)+STR(I3,4) TAG itemidx
INDEX ON DTOC(DATE)+STR(DOC_NO,7) TAG itemidx1
INDEX ON DOC_NO TAG itemidx2
INDEX ON DATE TAG stk_idx
USE


SELECT 4
USE stock

SELECT 5
USE s-order
INDEX ON STR(ORDER_NO,5)+STR(C1,2)+STR(C2,2)+STR(C3,3)+STR(I1,2)+STR(I2,2)+STR(I3,4) TAG sordidx
SET ORDER TO sordidx

SELECT 1  && st-tran
GOTO BOTTOM
STORE DATE TO MDATE, MPDATE

IF _DOS
@ 6, 2 SAY 'Post Transactions To Ledger:'
@ 8, 2 SAY 'This option will post all un-posted transactions to their respective'
@ 10, 2 SAY 'ledger heads Upto Given Date....'
@ 14, 14 SAY 'Transactions upto            exist in file '
ENDIF

R = 16
C = 35

IF _WINDOWS
	@ R-4, 58 SAY 'I N V E N T O R Y   P O S T I N G' FONT 'FoxFont',11
ENDIF

IF _WINDOWS
	@ R, C SAY 'Post Transactions To Ledger:' FONT 'FoxFont', 11
	@ R+1, C SAY 'This option will post all un-posted transactions to their respective' FONT 'FoxFont',11
	@ R+2, C SAY 'ledger heads Upto Given Date....' FONT 'FoxFont',11
ENDIF


IF _DOS
 SET COLOR TO *+g
ENDIF

IF _DOS
	@ 13, 32 SAY MDATE
ENDIF

IF _WINDOWS
	@ R+4, C SAY 'Data already posted to date :  ' FONT 'FoxFont',11
	@ R+4, C+71 SAY MDATE FONT 'FoxFont',11
ENDIF


IF _DOS
 SET COLOR TO 7/1     
ENDIF

IF _DOS
@ 14, 14 SAY 'Date upto which you want transactions to be posted ' GET MPDATE
READ
ENDIF

IF _WINDOWS
	@ R+6, C SAY 'Date upto which you want transactions to be posted' FONT 'FoxFont',11
	@ R+6, C+71 GET MPDATE FONT 'FoxFont',11
READ

ENDIF


		IF _DOS
			@ 22,65 SAY "Inventory"
		ENDIF


		IF _WINDOWS
			@ 37,141 SAY "Inventory" FONT "Times New Roman", 14 STYLE "BIT"
		ENDIF

P= ' '

IF _DOS
DO WHILE .not. P$'CQ'
   @ 23, 50 SAY 'Continue/Quit  -  C/Q  ' GET P FUNCTION '!'
   READ
ENDDO
ENDIF

IF _WINDOWS
DO WHILE .not. P$'CQ'
   @ 28, 97 SAY 'Continue/Quit  -  C/Q  ' FONT 'FoxFont',11 
   @ 28, 127 GET P FUNCTION '!' FONT 'FoxFont',11
   READ
ENDDO
ENDIF


IF P='Q'
   CLOSE ALL
   *CLEAR


         IF _WINDOWS
         SET COLOR TO
         ENDIF

   RETURN
ENDIF

*CLEAR

IF _DOS
@ 12, 23 SAY 'Press any key to start posting'
WAIT ''
ENDIF

IF _WINDOWS
	@ 30, 97 SAY 'Press any key to start posting' FONT 'FoxFont',11
	WAIT ''
ENDIF

*CLEAR


IF _DOS
@ 13, 23 SAY 'Please wait data is being posted....'
ENDIF

IF _WINDOWS
	@ 31, 97 SAY 'Please wait data is being posted....' FONT 'FoxFont',11
ENDIF


SELECT 1  && st-tran
CNT= 0

GOTO TOP
SET FILTER TO FLAG=' '.and.DATE<=MPDATE

GOTO TOP

MSR_NO= 0


DO WHILE .not. EOF()



   MDATE= DATE
   MDOC_NO= DOC_NO
   MDOC_TYPE= DOC_TYPE
   MLOC_CODE= LOC_CODE
   MORDER_NO= ORDER_NO
   MDEPT_CODE= DEPT_CODE
   MCITY_CODE= CITY_CODE
   MZONE_CODE= ZONE_CODE

   MI1= I1
   MI2= I2
   MI3= I3
   MC1= C_C1
   MC2= C_C2
   MC3= C_C3
   MD1= D_D1
   MD2= D_D2
   MD3= D_D3
   MQTY= T_QTY
   MRATE= RATE
   MAMOUNT= T_AMOUNT
   MPSR_UPRIC= PSR_UPRICE
   MPSR_TPRIC= PSR_TPRICE
   MF_T= F_T

   IF MDOC_TYPE=1
      STORE STR(MLOC_CODE,4)+STR(MI1,2)+STR(MI2,2)+STR(MI3,4) TO XYZ

      SELECT 3
      SEEK XYZ

      IF FOUND()
         VAL_TOT= 0
         VAL_TOT= QTY*AVG_PRICE
         MTOT_QTY= 0
         MTOT_QTY= QTY+MQTY
         MVAL_TOT= 0
         MVAL_TOT= VAL_TOT+MAMOUNT
         MAVG= 0
         IF MTOT_QTY<>0
            MAVG= MVAL_TOT/MTOT_QTY
         ENDIF
         REPLACE QTY WITH MTOT_QTY
         REPLACE AVG_PRICE WITH MAVG
         MSR_NO= SR_NO+1
         REPLACE SR_NO WITH MSR_NO
      ENDIF


      SELECT 4
      APPEND BLANK
      MAVG= 0
      REPLACE DOC_NO WITH MDOC_NO, DOC_TYPE WITH 1, DATE WITH MDATE, LOC_CODE WITH MLOC_CODE
      REPLACE C_C1 WITH MC1, C_C2 WITH MC2, C_C3 WITH MC3, T_QTY WITH MQTY
      REPLACE I1 WITH MI1, I2 WITH MI2, I3 WITH MI3, RATE WITH MRATE, T_AMOUNT WITH MAMOUNT
      REPLACE AVG_PRICE WITH MAVG, SR_NO WITH MSR_NO, QTY_BAL WITH MTOT_QTY
      REPLACE PSR_UPRICE WITH MPSR_UPRIC, PSR_TPRICE WITH MPSR_TPRIC

      SELECT 2
      STORE STR(MORDER_NO,5)+STR(MC1,2)+STR(MC2,2)+STR(MC3,3)+STR(MI1,2)+STR(MI2,2)+STR(MI3,4) TO ORD
      SEEK ORD
      IF FOUND()
         MORD_DEL= 0
         MORD_DEL= QTY_DEL+MQTY
         MORDBAL= 0
         MORDBAL= QTY_ORD-MORD_DEL
         REPLACE QTY_BAL WITH MORDBAL, QTY_DEL WITH MORD_DEL
      ENDIF
   ENDIF

   IF MDOC_TYPE=2
      STORE STR(MLOC_CODE,4)+STR(MI1,2)+STR(MI2,2)+STR(MI3,4) TO XYZ
      SELECT 3
      SEEK XYZ
      IF FOUND()
         MTOT_QTY= 0
         MTOT_QTY= QTY-MQTY
         MAVG= AVG_PRICE
         REPLACE QTY WITH MTOT_QTY
         MSR_NO= SR_NO+1
         REPLACE SR_NO WITH MSR_NO
      ENDIF

      SELECT 4
      APPEND BLANK
      REPLACE DOC_NO WITH MDOC_NO, DOC_TYPE WITH 2, DATE WITH MDATE, LOC_CODE WITH MLOC_CODE
      REPLACE D_D1 WITH MD1, D_D2 WITH MD2, D_D3 WITH MD3, T_QTY WITH MQTY
      REPLACE I1 WITH MI1, I2 WITH MI2, I3 WITH MI3, RATE WITH MAVG, T_AMOUNT WITH MQTY*MAVG
      REPLACE AVG_PRICE WITH MAVG, SR_NO WITH MSR_NO, QTY_BAL WITH MTOT_QTY
      REPLACE PSR_UPRICE WITH MPSR_UPRIC, PSR_TPRICE WITH MPSR_TPRIC
      SELECT 2
      STORE STR(MORDER_NO,5)+STR(MC1,2)+STR(MC2,2)+STR(MC3,3)+STR(MI1,2)+STR(MI2,2)+STR(MI3,4) TO ORD
      SEEK ORD

      IF FOUND()
         MORD_DEL= 0
         MORD_DEL= QTY_DEL+MQTY
         MORDBAL= 0
         MORDBAL= QTY_ORD-MORD_DEL
         REPLACE QTY_BAL WITH MORDBAL, QTY_DEL WITH MORD_DEL
      ENDIF

   ENDIF


   IF MDOC_TYPE=3
      STORE STR(MLOC_CODE,4)+STR(MI1,2)+STR(MI2,2)+STR(MI3,4) TO XYZ
      SELECT 3
      SEEK XYZ

      IF FOUND()
         MTOT_QTY= 0
         MTOT_QTY= QTY-MQTY
         MAVG= AVG_PRICE
         REPLACE QTY WITH MTOT_QTY
         MSR_NO= SR_NO+1
         REPLACE SR_NO WITH MSR_NO
      ENDIF
         MAVG= AVG_PRICE
         MTOT_QTY= QTY-MQTY
      SELECT 4
      APPEND BLANK
      REPLACE DOC_NO WITH MDOC_NO, DOC_TYPE WITH 3, DATE WITH MDATE
      REPLACE LOC_CODE WITH MLOC_CODE, T_QTY WITH MQTY
      REPLACE I1 WITH MI1, I2 WITH MI2, I3 WITH MI3, SR_NO WITH MSR_NO
      REPLACE DEPT_CODE WITH MDEPT_CODE, RATE WITH MAVG, T_AMOUNT WITH MQTY*MAVG
      REPLACE AVG_PRICE WITH MAVG, QTY_BAL WITH MTOT_QTY

   ENDIF


   IF MDOC_TYPE=4
      STORE STR(MLOC_CODE,4)+STR(MI1,2)+STR(MI2,2)+STR(MI3,4) TO XYZ
      SELECT 3
      SEEK XYZ

      IF FOUND()
         MTOT_QTY= 0
         MTOT_QTY= QTY+MQTY
         MAVG= AVG_PRICE
         REPLACE QTY WITH MTOT_QTY
         MSR_NO= SR_NO+1
         REPLACE SR_NO WITH MSR_NO
      ENDIF

      SELECT 4
      APPEND BLANK
      REPLACE DOC_NO WITH MDOC_NO, DOC_TYPE WITH 4, DATE WITH MDATE
      REPLACE LOC_CODE WITH MLOC_CODE, T_QTY WITH MQTY
      REPLACE I1 WITH MI1, I2 WITH MI2, I3 WITH MI3, SR_NO WITH MSR_NO
      REPLACE DEPT_CODE WITH MDEPT_CODE, RATE WITH MAVG, T_AMOUNT WITH MQTY*MAVG
      REPLACE AVG_PRICE WITH MAVG, QTY_BAL WITH MTOT_QTY

   ENDIF


   IF MDOC_TYPE=5
      STORE STR(MLOC_CODE,4)+STR(MI1,2)+STR(MI2,2)+STR(MI3,4) TO XYZ
      SELECT 3
      SEEK XYZ

      IF FOUND()
         MTOT_QTY= 0
         MTOT_QTY= QTY+MQTY
         MAVG= AVG_PRICE
         REPLACE QTY WITH MTOT_QTY
         MSR_NO= SR_NO+1
         REPLACE SR_NO WITH MSR_NO
      ENDIF

      SELECT 4
      APPEND BLANK
      REPLACE DOC_NO WITH MDOC_NO, DOC_TYPE WITH 5, DATE WITH MDATE
      REPLACE LOC_CODE WITH MLOC_CODE, T_QTY WITH MQTY, SR_NO WITH MSR_NO
      REPLACE I1 WITH MI1, I2 WITH MI2, I3 WITH MI3, DEPT_CODE WITH MDEPT_CODE
      REPLACE AVG_PRICE WITH MAVG, QTY_BAL WITH MTOT_QTY

   ENDIF


   IF MDOC_TYPE=6
      STORE STR(MLOC_CODE,4)+STR(MI1,2)+STR(MI2,2)+STR(MI3,4) TO XYZ
      SELECT 3
      SEEK XYZ

      IF FOUND()
         MTOT_QTY= 0
         MTOT_QTY= QTY-MQTY
         MAVG= AVG_PRICE
         REPLACE QTY WITH MTOT_QTY
         MSR_NO= SR_NO+1
         REPLACE SR_NO WITH MSR_NO
      ENDIF

      SELECT 4
      APPEND BLANK
      REPLACE DOC_NO WITH MDOC_NO, DOC_TYPE WITH 6, DATE WITH MDATE, LOC_CODE WITH MLOC_CODE
      REPLACE D_D1 WITH MD1, D_D2 WITH MD2, D_D3 WITH MD3, T_QTY WITH MQTY
      REPLACE I1 WITH MI1, I2 WITH MI2, I3 WITH MI3, RATE WITH MAVG, T_AMOUNT WITH MQTY*MAVG
      REPLACE AVG_PRICE WITH MAVG, SR_NO WITH MSR_NO, QTY_BAL WITH MTOT_QTY
      REPLACE PSR_UPRICE WITH MPSR_UPRIC, PSR_TPRICE WITH MPSR_TPRIC
      REPLACE CITY_CODE WITH MCITY_CODE, ZONE_CODE WITH MZONE_CODE
      SELECT 5
      STORE STR(MORDER_NO,5)+STR(MC1,2)+STR(MC2,2)+STR(MC3,3)+STR(MI1,2)+STR(MI2,2)+STR(MI3,4) TO ORD
      SEEK ORD

      IF FOUND()
         MORD_DEL= 0
         MORD_DEL= QTY_DEL+MQTY
         MORDBAL= 0
         MORDBAL= QTY_ORD-MORD_DEL
         REPLACE QTY_BAL WITH MORDBAL, QTY_DEL WITH MORD_DEL
      ENDIF

   ENDIF


   IF MDOC_TYPE=7
      STORE STR(MLOC_CODE,4)+STR(MI1,2)+STR(MI2,2)+STR(MI3,4) TO XYZ
      SELECT 3
      SEEK XYZ

      IF FOUND()
         MTOT_QTY= 0
         MTOT_QTY= QTY+MQTY
         MAVG= AVG_PRICE
         REPLACE QTY WITH MTOT_QTY
         MSR_NO= SR_NO+1
         REPLACE SR_NO WITH MSR_NO
      ENDIF

      SELECT 4
      APPEND BLANK
      REPLACE DOC_NO WITH MDOC_NO, DOC_TYPE WITH 7, DATE WITH MDATE, LOC_CODE WITH MLOC_CODE
      REPLACE C_C1 WITH MC1, C_C2 WITH MC2, C_C3 WITH MC3, T_QTY WITH MQTY
      REPLACE I1 WITH MI1, I2 WITH MI2, I3 WITH MI3, RATE WITH MAVG, T_AMOUNT WITH MQTY*MAVG
      REPLACE AVG_PRICE WITH MAVG, SR_NO WITH MSR_NO, QTY_BAL WITH MTOT_QTY
      REPLACE PSR_UPRICE WITH MPSR_UPRIC, PSR_TPRICE WITH MPSR_TPRIC

      SELECT 5
      STORE STR(MORDER_NO,5)+STR(MC1,2)+STR(MC2,2)+STR(MC3,3)+STR(MI1,2)+STR(MI2,2)+STR(MI3,4) TO ORD
      SEEK ORD

      IF FOUND()
         MORD_DEL= 0
         MORD_DEL= QTY_DEL+MQTY
         MORDBAL= 0
         MORDBAL= QTY_ORD+MORD_DEL
         REPLACE QTY_BAL WITH MORDBAL, QTY_DEL WITH MORD_DEL
      ENDIF

   ENDIF


   IF MDOC_TYPE=8

      IF MF_T='F'
         STORE STR(MLOC_CODE,4)+STR(MI1,2)+STR(MI2,2)+STR(MI3,4) TO XYZ
         SELECT 3
         SEEK XYZ

         IF FOUND()
            MTOT_QTY= 0
            MTOT_QTY= QTY-MQTY
            MAVG= AVG_PRICE
            REPLACE QTY WITH MTOT_QTY
            MSR_NO= SR_NO+1
            REPLACE SR_NO WITH MSR_NO
            SELECT 4
            APPEND BLANK
            REPLACE DOC_NO WITH MDOC_NO, DOC_TYPE WITH 8, DATE WITH MDATE
            REPLACE LOC_CODE WITH MLOC_CODE, T_QTY WITH MQTY, SR_NO WITH MSR_NO
            REPLACE I1 WITH MI1, I2 WITH MI2, I3 WITH MI3, F_T WITH 'F'
            REPLACE QTY_BAL WITH MTOT_QTY, AVG_PRICE WITH MAVG
         ENDIF

      ENDIF

      IF MF_T='T'
         STORE STR(MLOC_CODE,4)+STR(MI1,2)+STR(MI2,2)+STR(MI3,4) TO XYZ
         SELECT 3
         SEEK XYZ

         IF FOUND()
            MTOT_QTY= 0
            MTOT_QTY= QTY+MQTY
            MAVG= AVG_PRICE
            REPLACE QTY WITH MTOT_QTY
            MSR_NO= SR_NO+1
            REPLACE SR_NO WITH MSR_NO
            SELECT 4
            APPEND BLANK
            REPLACE DOC_NO WITH MDOC_NO, DOC_TYPE WITH 8, DATE WITH MDATE
            REPLACE LOC_CODE WITH MLOC_CODE, T_QTY WITH MQTY, SR_NO WITH MSR_NO
            REPLACE I1 WITH MI1, I2 WITH MI2, I3 WITH MI3, F_T WITH 'T'
            REPLACE QTY_BAL WITH MTOT_QTY, AVG_PRICE WITH MAVG
         ENDIF

      ENDIF

   ENDIF

   SELECT 1
   REPLACE FLAG WITH 'Y'

   IF .not. EOF()
      SKIP
   ENDIF

ENDDO


*CLEAR
CLOSE DATA

         IF _WINDOWS
         SET COLOR TO
         ENDIF




USE stock
INDEX ON STR(I1,2)+STR(I2,2)+STR(I3,4) TAG itemidx
INDEX ON DTOC(DATE)+STR(DOC_NO,7) TAG itemidx1
INDEX ON DOC_NO TAG itemidx2
INDEX ON DATE TAG stk_idx
CLOSE ALL



RETURN
**********
