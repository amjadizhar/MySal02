* C-FILE.FXP    û 
* C-PASS.FXP    û 
* DTYPE.FXP     û 
* ITEM.FXP      û 
* ITRAN.FXP     û 
* LDGRCOD.FXP   û 
* M-ITRAN.FXP   û 
* M-TRAN.FXP    û 
* MAIN.FXP      û 
* PASS.FXP      û 
* PROC1.FXP     û 
* REINDEX.FXP   û 
* TRAN.FXP      û 
* R-LDCOD.FXP   û 
* R-ITMCOD.FXP  û 
* R-LSTAT.FXP   û 
* R-LED.FXP     û 
* RD-INVO.FXP   û 
* RD-TRAN.FXP   û 
* RN-INVO.FXP   û 
* RN-TRAN.FXP   û 
* UPDBAL.FXP    û 
* R-ZONE.FXP    û 
* CITY.FXP      û 
* R-CITY.FXP    û 
* =========================== 
* 
* 
* C-FILE.FXP 
* ---------- 
*
DEFINE WINDOW CFILE FROM INT((SROWS()-15)/1), INT((SCOLS()-68)/1) TO INT((SROWS()-15)/1)+6, INT((SCOLS()-68)/1)+50 NOFLOAT NOCLOSE SHADOW NOMINIMIZE PANEL COLOR R/G 
ACTIVATE WINDOW SAME CFILE
CLEAR
@ 1, 10 SAY 'Checking The Database Files'
@ 3, 13 SAY "Please Don't Distrub"
IF FILE('Ldgrcod.Dbf')=.F.
   CREATE DBF Ldgrcod ( C1 N ( 2 ), C2 N ( 2 ), C3 N ( 3 ), TITLE C ( 30 ), LDGR_BAL N ( 12, 2 ), STATUS C ( 2 ), C_CODE C ( 4 ) )
ENDIF
IF FILE('Ldgrcod.Cdx')=.F.
   USE EXCLUSIVE Ldgrcod
   INDEX ON STR(C1,2)+STR(C2,2)+STR(C3,3) TAG C123
   INDEX ON TITLE TAG TITLE
   INDEX ON C_CODE TAG C_CODE
ENDIF
IF FILE('Tran.Dbf')=.F.
   CREATE DBF Tran ( C1 N ( 2 ), C2 N ( 2 ), C3 N ( 3 ), DATE D ( 8 ), DOC_TYPE N ( 1 ), DOC_NO C ( 6 ), CR_DR C ( 2 ), AMOUNT N ( 12, 2 ), DISC C ( 30 ) )
ENDIF
IF FILE('Tran.Cdx')=.F.
   USE EXCLUSIVE Tran
   INDEX ON DATE TAG DATE
   INDEX ON STR(C1,2)+STR(C2,2)+STR(C3,3) TAG C123
   INDEX ON VAL(DOC_NO) TAG DOC_NO
   INDEX ON DOC_NO+STR(C1,2)+STR(C2,2)+STR(C3,3) TAG DC123
   INDEX ON DOC_TYPE TAG DOC_TYPE
   INDEX ON STR(DOC_TYPE,1)+DOC_NO TAG TYPE_NO
   INDEX ON DTOC(DATE)+STR(DOC_TYPE,1)+DOC_NO TAG DDD_NO
ENDIF
IF FILE('Pass.Dbf')=.F.
   CREATE DBF Pass ( SR_NO N ( 1 ), PASS C ( 6 ) )
   USE EXCLUSIVE Pass
   APPEND BLANK
   REPLACE SR_NO WITH 1
   REPLACE PASS WITH ':>=53-'
   APPEND BLANK
   REPLACE SR_NO WITH 2
   REPLACE PASS WITH ':>=53-'
   APPEND BLANK
   REPLACE SR_NO WITH 3
   REPLACE PASS WITH ':>=53-'
   APPEND BLANK
   REPLACE SR_NO WITH 4
   REPLACE PASS WITH ':>=53-'
   APPEND BLANK
   REPLACE SR_NO WITH 5
   REPLACE PASS WITH ':>=53-'
   FLUSH
ENDIF
IF FILE('Pass.Cdx')=.F.
   USE EXCLUSIVE Pass
   INDEX ON SR_NO TAG SR_NO
ENDIF
IF FILE('Item.Dbf')=.F.
   CREATE DBF Item ( I1 N ( 2 ), I2 N ( 2 ), I3 N ( 4 ), ITEM C ( 30 ), RATE N ( 6, 2 ), STAX N ( 5, 2 ) )
ENDIF
IF FILE('Item.Cdx')=.F.
   USE EXCLUSIVE Item
   INDEX ON STR(I1,2)+STR(I2,2)+STR(I3,4) TAG I123
   INDEX ON ITEM TAG ITEM
ENDIF
IF FILE('ITran.Dbf')=.F.
   CREATE DBF ITran ( I1 N ( 2 ), I2 N ( 2 ), I3 N ( 3 ), QTY N ( 4 ), SR_NO N ( 2 ), C1 N ( 2 ), C2 N ( 2 ), C3 N ( 3 ), DATE D ( 8 ), DOC_TYPE N ( 1 ), DOC_NO C ( 6 ), AMOUNT N ( 12, 2 ), NAMOUNT N ( 12, 2 ) )
ENDIF
IF FILE('ITran.Cdx')=.F.
   USE EXCLUSIVE ITran
   INDEX ON DATE TAG DATE
   INDEX ON STR(C1,2)+STR(C2,2)+STR(C3,3) TAG C123
   INDEX ON STR(I1,2)+STR(I2,2)+STR(I3,4) TAG I123
   INDEX ON VAL(DOC_NO) TAG DOC_NO
   INDEX ON DOC_TYPE TAG DOC_TYPE
   INDEX ON STR(DOC_TYPE,1)+DOC_NO TAG TYPE_NO
   INDEX ON DTOC(DATE)+STR(DOC_TYPE,1)+DOC_NO TAG DDD_NO
ENDIF
IF FILE('DType.Dbf')=.F.
   CREATE DBF DType ( DOC_TYPE N ( 1 ), TYPE1 C ( 2 ), TYPE2 C ( 15 ) )
ENDIF
IF FILE('DType.Cdx')=.F.
   USE EXCLUSIVE DType
   INDEX ON DOC_TYPE TAG DOC_TYPE
   INDEX ON TYPE1 TAG TYPE1
ENDIF
IF FILE('City.Dbf')=.F.
   CREATE DBF City ( C_CODE C ( 4 ), NAME C ( 30 ) )
ENDIF
IF FILE('City.Cdx')=.F.
   USE EXCLUSIVE City
   INDEX ON C_CODE TAG C_CODE
   INDEX ON NAME TAG NAME
ENDIF
RELEASE WINDOW CFILE
CLOSE ALL
RETURN
* 
* 
* C-PASS.FXP 
* ---------- 
*
CLOSE DATABASES
SELECT 1
USE SHARED Pass ALIAS PASS
STORE SPACE(6) TO MPASS1, MPASS2, MPASS3, MPASS4, MPASS5
STORE 0 TO MSR_NO1, MSR_NO2, MSR_NO3, MSR_NO4, MSR_NO5
DEFINE WINDOW CPASS FROM INT((SROWS()-15)/2), INT((SCOLS()-40)/2) TO INT((SROWS()-15)/2)+15, INT((SCOLS()-40)/2)+40 NOFLOAT NOCLOSE SHADOW TITLE 'CHANGE PASSWORD PROGRAMME' NOMINIMIZE PANEL COLOR SCHEME 5
ACTIVATE WINDOW SAME CPASS
@ 2, 6 SAY 'Password'
SELECT PASS
SET ORDER TO Sr_No
GOTO TOP
MSR_NO1 = SR_NO
MPASS1 = PASS
SKIP
MSR_NO2 = SR_NO
MPASS2 = PASS
SKIP
MSR_NO3 = SR_NO
MPASS3 = PASS
SKIP
MSR_NO4 = SR_NO
MPASS4 = PASS
SKIP
MSR_NO5 = SR_NO
MPASS5 = PASS
NCODE1 = SUBSTR(MPASS1,1,1)
NCODE2 = SUBSTR(MPASS1,2,1)
NCODE3 = SUBSTR(MPASS1,3,1)
NCODE4 = SUBSTR(MPASS1,4,1)
NCODE5 = SUBSTR(MPASS1,5,1)
NCODE6 = SUBSTR(MPASS1,6,1)
Mpass1 = chr(asc("&ncode1")-26)+chr(asc("&ncode2")-30)+chr(asc("&ncode3")-29)+chr(asc("&ncode4")-21)+chr(asc("&ncode5")-19)+chr(asc("&ncode6")-13)
NCODE1 = SUBSTR(MPASS2,1,1)
NCODE2 = SUBSTR(MPASS2,2,1)
NCODE3 = SUBSTR(MPASS2,3,1)
NCODE4 = SUBSTR(MPASS2,4,1)
NCODE5 = SUBSTR(MPASS2,5,1)
NCODE6 = SUBSTR(MPASS2,6,1)
Mpass2 = chr(asc("&ncode1")-26)+chr(asc("&ncode2")-30)+chr(asc("&ncode3")-29)+chr(asc("&ncode4")-21)+chr(asc("&ncode5")-19)+chr(asc("&ncode6")-13)
NCODE1 = SUBSTR(MPASS3,1,1)
NCODE2 = SUBSTR(MPASS3,2,1)
NCODE3 = SUBSTR(MPASS3,3,1)
NCODE4 = SUBSTR(MPASS3,4,1)
NCODE5 = SUBSTR(MPASS3,5,1)
NCODE6 = SUBSTR(MPASS3,6,1)
Mpass3 = chr(asc("&ncode1")-26)+chr(asc("&ncode2")-30)+chr(asc("&ncode3")-29)+chr(asc("&ncode4")-21)+chr(asc("&ncode5")-19)+chr(asc("&ncode6")-13)
NCODE1 = SUBSTR(MPASS4,1,1)
NCODE2 = SUBSTR(MPASS4,2,1)
NCODE3 = SUBSTR(MPASS4,3,1)
NCODE4 = SUBSTR(MPASS4,4,1)
NCODE5 = SUBSTR(MPASS4,5,1)
NCODE6 = SUBSTR(MPASS4,6,1)
Mpass4 = chr(asc("&ncode1")-26)+chr(asc("&ncode2")-30)+chr(asc("&ncode3")-29)+chr(asc("&ncode4")-21)+chr(asc("&ncode5")-19)+chr(asc("&ncode6")-13)
NCODE1 = SUBSTR(MPASS5,1,1)
NCODE2 = SUBSTR(MPASS5,2,1)
NCODE3 = SUBSTR(MPASS5,3,1)
NCODE4 = SUBSTR(MPASS5,4,1)
NCODE5 = SUBSTR(MPASS5,5,1)
NCODE6 = SUBSTR(MPASS5,6,1)
Mpass5 = chr(asc("&ncode1")-26)+chr(asc("&ncode2")-30)+chr(asc("&ncode3")-29)+chr(asc("&ncode4")-21)+chr(asc("&ncode5")-19)+chr(asc("&ncode6")-13)
@ 2, 20 SAY MSR_NO1 PICTURE '9'
@ 2, 30 GET MPASS1 PICTURE '@!X6'
@ 4, 20 SAY MSR_NO2 PICTURE '9'
@ 4, 30 GET MPASS2 PICTURE '@!X6'
@ 6, 20 SAY MSR_NO3 PICTURE '9'
@ 6, 30 GET MPASS3 PICTURE '@!X6'
@ 8, 20 SAY MSR_NO4 PICTURE '9'
@ 8, 30 GET MPASS4 PICTURE '@!X6'
@ 10, 20 SAY MSR_NO5 PICTURE '9'
@ 10, 30 GET MPASS5 PICTURE '@!X6'
READ
NCODE1 = SUBSTR(MPASS1,1,1)
NCODE2 = SUBSTR(MPASS1,2,1)
NCODE3 = SUBSTR(MPASS1,3,1)
NCODE4 = SUBSTR(MPASS1,4,1)
NCODE5 = SUBSTR(MPASS1,5,1)
NCODE6 = SUBSTR(MPASS1,6,1)
Mpass1 = chr(asc("&ncode1")+26)+chr(asc("&ncode2")+30)+chr(asc("&ncode3")+29)+chr(asc("&ncode4")+21)+chr(asc("&ncode5")+19)+chr(asc("&ncode6")+13)
NCODE1 = SUBSTR(MPASS2,1,1)
NCODE2 = SUBSTR(MPASS2,2,1)
NCODE3 = SUBSTR(MPASS2,3,1)
NCODE4 = SUBSTR(MPASS2,4,1)
NCODE5 = SUBSTR(MPASS2,5,1)
NCODE6 = SUBSTR(MPASS2,6,1)
Mpass2 = chr(asc("&ncode1")+26)+chr(asc("&ncode2")+30)+chr(asc("&ncode3")+29)+chr(asc("&ncode4")+21)+chr(asc("&ncode5")+19)+chr(asc("&ncode6")+13)
NCODE1 = SUBSTR(MPASS3,1,1)
NCODE2 = SUBSTR(MPASS3,2,1)
NCODE3 = SUBSTR(MPASS3,3,1)
NCODE4 = SUBSTR(MPASS3,4,1)
NCODE5 = SUBSTR(MPASS3,5,1)
NCODE6 = SUBSTR(MPASS3,6,1)
Mpass3 = chr(asc("&ncode1")+26)+chr(asc("&ncode2")+30)+chr(asc("&ncode3")+29)+chr(asc("&ncode4")+21)+chr(asc("&ncode5")+19)+chr(asc("&ncode6")+13)
NCODE1 = SUBSTR(MPASS4,1,1)
NCODE2 = SUBSTR(MPASS4,2,1)
NCODE3 = SUBSTR(MPASS4,3,1)
NCODE4 = SUBSTR(MPASS4,4,1)
NCODE5 = SUBSTR(MPASS4,5,1)
NCODE6 = SUBSTR(MPASS4,6,1)
Mpass4 = chr(asc("&ncode1")+26)+chr(asc("&ncode2")+30)+chr(asc("&ncode3")+29)+chr(asc("&ncode4")+21)+chr(asc("&ncode5")+19)+chr(asc("&ncode6")+13)
NCODE1 = SUBSTR(MPASS5,1,1)
NCODE2 = SUBSTR(MPASS5,2,1)
NCODE3 = SUBSTR(MPASS5,3,1)
NCODE4 = SUBSTR(MPASS5,4,1)
NCODE5 = SUBSTR(MPASS5,5,1)
NCODE6 = SUBSTR(MPASS5,6,1)
Mpass5 = chr(asc("&ncode1")+26)+chr(asc("&ncode2")+30)+chr(asc("&ncode3")+29)+chr(asc("&ncode4")+21)+chr(asc("&ncode5")+19)+chr(asc("&ncode6")+13)
GOTO TOP
REPLACE PASS WITH MPASS1
SKIP
REPLACE PASS WITH MPASS2
SKIP
REPLACE PASS WITH MPASS3
SKIP
REPLACE PASS WITH MPASS4
SKIP
REPLACE PASS WITH MPASS5
FLUSH
RELEASE WINDOW CPASS
RETURN
* 
* 
* DTYPE.FXP 
* --------- 
*
CLOSE DATABASES
SELECT 1
USE SHARED DType ALIAS DTYPE
SELECT 2
USE SHARED Tran ALIAS TRAN
MDOC_TYPE = 0
MTYPE1 = SPACE(2)
MTYPE2 = SPACE(15)
MOPT = 0
DEFINE WINDOW DTYPE FROM INT((SROWS()-16)/2), INT((SCOLS()-69)/2) TO INT((SROWS()-16)/2)+15, INT((SCOLS()-69)/2)+68 NOFLOAT NOCLOSE SHADOW TITLE ' DATA TYPE MAINTENANCE ' NOMINIMIZE PANEL COLOR SCHEME 1
ACTIVATE WINDOW SAME DTYPE
DO WHILE .T.
   CLEAR
   DO DSPHEDPRO
   @ 12, 18 SAY 'Press F1 to see Data Type List' COLOR GR+/N 
   ON KEY LABEL F1 DO ShwDtyPro In Proc1
   @ 2, 30 GET MDOC_TYPE PICTURE '@1K 9'
   READ
   IF READKEY()=12 .OR. READKEY()=268
      CLOSE DATABASES
      RELEASE WINDOW DTYPE
      RETURN
      EXIT
   ENDIF
   SELECT DTYPE
   SET ORDER TO Doc_Type
   SEEK MDOC_TYPE
   IF OPT='New'
      IF FOUND()
         WAIT WINDOW 'Data Type Code Already Exist'
         MDOC_TYPE = 0
         LOOP
      ENDIF
   ENDIF
   IF OPT='Modi'
      IF  .NOT. FOUND()
         WAIT WINDOW 'Data Type Code Not Exist'
         MDOC_TYPE = 0
         LOOP
      ENDIF
      @ 12, 1 CLEAR TO 12, 62
      DO WHILE .T.
         @ 12, 18 GET MOPT SIZE 1, 10 FUNCTION '*H \<Cancel;\<Modify;\<Delete' COLOR SCHEME 19
         READ
         IF READKEY()=15 .OR. READKEY()=271
            EXIT
         ENDIF
      ENDDO
      DO CASE
         CASE MOPT=1
            OPTFLAG = 'C'
         CASE MOPT=2
            OPTFLAG = 'M'
         CASE MOPT=3
            OPTFLAG = 'D'
      ENDCASE
      @ 12, 1 CLEAR TO 12, 62
      IF OPTFLAG='C'
         MDOC_TYPE = 0
         LOOP
      ENDIF
      IF OPTFLAG='M'
         SELECT DTYPE
         MTYPE1 = TYPE1
         MTYPE2 = TYPE2
      ENDIF
      IF OPTFLAG='D'
         SELECT TRAN
         SET ORDER TO Doc_Type
         SEEK MDOC_TYPE
         IF FOUND()
            WAIT WINDOW 'This Code Already Exist In Daily Transaction'
         ELSE
            SELECT DTYPE
            DELETE
         ENDIF
         MDOC_TYPE = 0
         LOOP
      ENDIF
   ENDIF
   @ 5, 30 GET MTYPE1 PICTURE '@!' VALID MTYPE1<>SPACE(2) ERROR 'Abbreviation Type Can Not Be Blank'
   @ 7, 30 GET MTYPE2 PICTURE '@!' VALID MTYPE2<>SPACE(15) ERROR 'Discription Can Not Be Blank'
   READ
   IF READKEY()=12 .OR. READKEY()=268
      LOOP
   ENDIF
   DO SAVDATPRO
   MDOC_TYPE = 0
   MTYPE1 = SPACE(2)
   MTYPE2 = SPACE(15)
ENDDO
RELEASE WINDOW DTYPE
RETURN

PROCEDURE DSPHEDPRO
@ 2, 5 SAY 'Data Type Code'
@ 5, 5 SAY 'Abbreviation Type'
@ 7, 5 SAY 'Discription'

PROCEDURE SAVDATPRO
SELECT DTYPE
SET ORDER TO Doc_Type
SEEK MDOC_TYPE
IF  .NOT. FOUND()
   APPEND BLANK
ENDIF
REPLACE DOC_TYPE WITH MDOC_TYPE
REPLACE TYPE1 WITH MTYPE1
REPLACE TYPE2 WITH MTYPE2
FLUSH
* 
* 
* ITEM.FXP 
* -------- 
*
CLOSE DATABASES
SELECT 1
USE SHARED Item ALIAS ITEM
SELECT 2
USE SHARED ITran ALIAS ITRAN
MI1 = 0
MI2 = 0
MI3 = 0
MITEM = SPACE(30)
MRATE = 0
MSTAX = 0
MOPT = 0
DEFINE WINDOW ITEM FROM INT((SROWS()-16)/2), INT((SCOLS()-69)/2) TO INT((SROWS()-16)/2)+15, INT((SCOLS()-69)/2)+68 NOFLOAT NOCLOSE SHADOW TITLE ' ITEM HEAD MAINTENANCE ' NOMINIMIZE PANEL COLOR SCHEME 1
ACTIVATE WINDOW SAME ITEM
DO WHILE .T.
   CLEAR
   DO DSPHEDPRO
   @ 13, 18 SAY 'Press F1 to see Items Code List' COLOR GR+/N 
   ON KEY LABEL F1 DO ShwItmPro In Proc1
   @ 2, 30 SAY '  -  -    '
   @ 2, 30 GET MI1 PICTURE '@2K 99' VALID MI1<>0 ERROR 'Item Code Can Not Be Blank - Press Esc To Exit'
   @ 2, 33 GET MI2 PICTURE '@2K 99' VALID MI2<>0 ERROR 'Item Code Can Not Be Blank - Press Esc To Exit'
   @ 2, 36 GET MI3 PICTURE '@4K 9999' VALID MI3<>0 ERROR 'Item Code Can Not Be Blank - Press Esc To Exit'
   READ
   IF READKEY()=12 .OR. READKEY()=268
      CLOSE DATABASES
      RELEASE WINDOW ITEM
      RETURN
      EXIT
   ENDIF
   SELECT ITEM
   SET ORDER TO I123
   SEEK STR(MI1,2)+STR(MI2,2)+STR(MI3,4)
   IF OPT='New'
      IF FOUND()
         WAIT WINDOW 'Item Code Already Exist'
         MI1 = 0
         MI2 = 0
         MI3 = 0
         LOOP
      ENDIF
   ENDIF
   IF OPT='Modi'
      IF  .NOT. FOUND()
         WAIT WINDOW 'Item Code Not Exist'
         MI1 = 0
         MI2 = 0
         MI3 = 0
         LOOP
      ENDIF
      @ 13, 1 CLEAR TO 13, 62
      DO WHILE .T.
         @ 13, 18 GET MOPT SIZE 1, 10 FUNCTION '*H \<Cancel;\<Modify;\<Delete' COLOR SCHEME 19
         READ
         IF READKEY()=15 .OR. READKEY()=271
            EXIT
         ENDIF
      ENDDO
      DO CASE
         CASE MOPT=1
            OPTFLAG = 'C'
         CASE MOPT=2
            OPTFLAG = 'M'
         CASE MOPT=3
            OPTFLAG = 'D'
      ENDCASE
      @ 13, 1 CLEAR TO 13, 62
      IF OPTFLAG='C'
         MI1 = 0
         MI2 = 0
         MI3 = 0
         LOOP
      ENDIF
      IF OPTFLAG='M'
         SELECT ITEM
         MITEM = ITEM
         MRATE = RATE
      ENDIF
      IF OPTFLAG='D'
         SELECT ITRAN
         SET ORDER TO I123
         SEEK STR(MI1,2)+STR(MI2,2)+STR(MI3,4)
         IF FOUND()
            WAIT WINDOW 'This Code Already Exist In Daily Transaction'
         ELSE
            SELECT ITEM
            DELETE
         ENDIF
         MI1 = 0
         MI2 = 0
         MI3 = 0
         LOOP
      ENDIF
   ENDIF
   @ 4, 30 GET MITEM PICTURE '@!' VALID MITEM<>SPACE(30) ERROR 'Item Name Can Not Be Blank'
   @ 6, 30 GET MRATE PICTURE '9999.99'
   @ 8, 30 GET MSTAX PICTURE '99.99'
   READ
   IF READKEY()=12 .OR. READKEY()=268
      LOOP
   ENDIF
   DO SAVDATPRO
   MI1 = 0
   MI2 = 0
   MI3 = 0
   MITEM = SPACE(30)
   MRATE = 0
ENDDO
RELEASE WINDOW ITEM
RETURN

PROCEDURE DSPHEDPRO
@ 2, 5 SAY 'Item Code'
@ 4, 5 SAY 'Item Description'
@ 6, 5 SAY 'Rate'
@ 8, 5 SAY 'Sales Tax %'

PROCEDURE SAVDATPRO
SELECT ITEM
SET ORDER TO I123
SEEK STR(MI1,2)+STR(MI2,2)+STR(MI3,4)
IF  .NOT. FOUND()
   APPEND BLANK
ENDIF
REPLACE I1 WITH MI1
REPLACE I2 WITH MI2
REPLACE I3 WITH MI3
REPLACE ITEM WITH MITEM
REPLACE RATE WITH MRATE
REPLACE STAX WITH MSTAX
FLUSH
* 
* 
* ITRAN.FXP 
* --------- 
*
SELECT 1
USE SHARED ITran ALIAS ITRAN
SELECT 2
USE SHARED Item ALIAS ITEM
SELECT 3
USE SHARED Tran ALIAS TRAN
SELECT 4
USE SHARED LdgrCod ALIAS LDGRCOD
SELECT 5
USE SHARED DType ALIAS DTYPE
DEFINE WINDOW ITRAN FROM INT((SROWS()-25)/1), INT((SCOLS()-80)/1) TO INT((SROWS()-25)/1)+24, INT((SCOLS()-80)/1)+79 NOFLOAT NOCLOSE SHADOW TITLE ' DAILY TRANSACTION ' NOMINIMIZE PANEL COLOR SCHEME 1
ACTIVATE WINDOW SAME ITRAN
MDATE = CTOD('  /  /    ')
MC1 = 0
MC2 = 0
MC3 = 0
MSAMOUNT = 0
MNAMOUNT = 0
MAMOUNT = 0
MDOC_NO = SPACE(6)
MDOC_TYPE = 0
MCR_DR = SPACE(1)
MLDGR_BAL = 0
MSTATUS = SPACE(2)
MI1 = 0
MI2 = 0
MI3 = 0
MQTY = 0
MTQTY = 0
MTAMOUNT = 0
MTNAMOUNT = 0
MSR_NO = 1
MLINE = 1
MANS = SPACE(1)
DO WHILE .T.
   DO DSPHEDPRO
   @ MLINE, 10 GET MDATE PICTURE ('99/99/9999')
   READ
   IF READKEY()=12 .OR. READKEY()=268
      CLOSE DATABASES
      RELEASE WINDOW ITRAN
      RETURN
      EXIT
   ENDIF
   @ 22, 1 CLEAR TO 22, 78
   @ 22, 22 SAY 'Press F1 to see Document Type Code List' COLOR GR+/N 
   ON KEY LABEL F1 DO ShwDtyPro In Proc1
   @ MLINE, 57 GET MDOC_TYPE PICTURE '9'
   READ
   IF READKEY()=12 .OR. READKEY()=268
      LOOP
   ENDIF
   SELECT DTYPE
   SET ORDER TO Doc_Type
   SEEK MDOC_TYPE
   IF  .NOT. FOUND()
      WAIT WINDOW 'Data Type Not Exist'
      MDOC_TYPE = 0
      LOOP
   ENDIF
   @ MLINE, 60 GET MDOC_NO PICTURE '@!' VALID MDOC_NO<>SPACE(6) ERROR 'Document Number Can Not Be Blank'
   READ
   IF READKEY()=12 .OR. READKEY()=268
      LOOP
   ENDIF
   SELECT TRAN
   SET ORDER TO Type_No
   SEEK STR(MDOC_TYPE,1)+MDOC_NO
   IF FOUND()
      WAIT WINDOW 'Document Number Already Exist'
      MDOC_TYPE = 0
      MDOC_NO = SPACE(6)
      LOOP
   ENDIF
   MLINE = MLINE+1
   DO WHILE .T.
      SELECT LDGRCOD
      SET ORDER TO Title
      @ 22, 1 CLEAR TO 22, 78
      @ 22, 27 SAY 'Press F1 to see Party Code List' COLOR GR+/N 
      ON KEY LABEL F1 DO ShwLdgPro In Proc1
      @ MLINE, 20 SAY '  -  -   '
      @ MLINE, 20 GET MC1 PICTURE '@2K 99' VALID MC1<>0 ERROR 'Ledger Head Code Can Not Be Blank'
      @ MLINE, 23 GET MC2 PICTURE '@2K 99' VALID MC2<>0 ERROR 'Ledger Head Code Can Not Be Blank'
      @ MLINE, 26 GET MC3 PICTURE '@3K 999' VALID MC3<>0 ERROR 'Ledger Head Code Can Not Be Blank'
      READ
      IF READKEY()=12 .OR. READKEY()=268
         EXIT
      ENDIF
      SET ORDER TO C123
      SEEK STR(MC1,2)+STR(MC2,2)+STR(MC3,3)
      IF  .NOT. FOUND()
         WAIT WINDOW 'Party Code Not Exist'
         MC1 = 0
         MC2 = 0
         MC3 = 0
         LOOP
      ELSE
         @ MLINE, 35 SAY TITLE
         EXIT
      ENDIF
   ENDDO
   MLINE = MLINE+4
   DO WHILE .T.
      SELECT ITEM
      SET ORDER TO Item
      @ 22, 1 CLEAR TO 22, 62
      @ 22, 26 SAY 'Press F1 to see Item Code List' COLOR GR+/N 
      ON KEY LABEL F1 DO ShwItmPro In Proc1
      @ MLINE, 2 SAY '  -  -    '
      @ MLINE, 2 GET MI1 PICTURE '@2K 99' VALID MI1<>0 ERROR 'Item Code Can Not Be Blank'
      @ MLINE, 5 GET MI2 PICTURE '@2K 99' VALID MI2<>0 ERROR 'Item Code Can Not Be Blank'
      @ MLINE, 8 GET MI3 PICTURE '@4K 9999' VALID MI3<>0 ERROR 'Item Code Can Not Be Blank'
      READ
      IF READKEY()=12 .OR. READKEY()=268
         EXIT
      ENDIF
      SET ORDER TO I123
      SEEK STR(MI1,2)+STR(MI2,2)+STR(MI3,4)
      IF  .NOT. FOUND()
         WAIT WINDOW 'Item Code Not Exist'
         MI1 = 0
         MI2 = 0
         MI3 = 0
         LOOP
      ELSE
         @ MLINE, 15 SAY ITEM
      ENDIF
      @ MLINE, 48 GET MQTY PICTURE '@4K 9999'
      READ
      MSAMOUNT = MQTY*ITEM.RATE
      MNAMOUNT = MQTY*ITEM.RATE
      MAMOUNT = MSAMOUNT+ROUND((MSAMOUNT*ITEM.STAX/100),2)
      @ MLINE, 53 SAY MNAMOUNT PICTURE '999999999.99'
      @ MLINE, 53 GET MNAMOUNT PICTURE '999999999.99'
      @ MLINE, 66 SAY MAMOUNT PICTURE '999999999.99'
      @ MLINE, 66 GET MAMOUNT PICTURE '999999999.99'
      READ
      MANS = 'N'
      @ MLINE, 0 GET MANS PICTURE '@!' VALID MANS='N' .OR. MANS='C' ERROR 'N=Next  C=Change'
      READ
      IF MANS='C'
         LOOP
      ELSE
         DO SAVDATPRO
         MTQTY = MTQTY+MQTY
         MTNAMOUNT = MTNAMOUNT+ROUND(MNAMOUNT,2)
         MTAMOUNT = MTAMOUNT+ROUND(MAMOUNT,2)
         MI1 = 0
         MI2 = 0
         MI3 = 0
         MQTY = 0
         MAMOUNT = 0
         MNAMOUNT = 0
         MSR_NO = MSR_NO+1
         SELECT ITRAN
      ENDIF
      MLINE = MLINE+1
      IF MLINE>19
         @ 6, 0 CLEAR TO 21, 78
         MLINE = 6
      ENDIF
   ENDDO
   @ 22, 1 CLEAR TO 22, 62
   @ 22, 30 SAY 'Total'
   @ 22, 48 SAY MTQTY PICTURE '9999'
   @ 22, 53 SAY MTNAMOUNT PICTURE '999999999.99'
   @ 22, 66 SAY MTAMOUNT PICTURE '999999999.99'
   WAIT WINDOW 'Press Enter To Continue'
   CLEAR
   DO SAV1DATPRO
   MDATE = CTOD('  /  /    ')
   MC1 = 0
   MC2 = 0
   MC3 = 0
   MSAMOUNT = 0
   MAMOUNT = 0
   MNAMOUNT = 0
   MDOC_NO = SPACE(6)
   MDOC_TYPE = 0
   MCR_DR = SPACE(1)
   MLDGR_BAL = 0
   MSTATUS = SPACE(2)
   MI1 = 0
   MI2 = 0
   MI3 = 0
   MQTY = 0
   MTQTY = 0
   MTAMOUNT = 0
   MTNAMOUNT = 0
   MSR_NO = 1
   MLINE = 1
   MANS = SPACE(1)
   LOOP
ENDDO

PROCEDURE DSPHEDPRO
@ 1, 2 SAY 'DATE'
@ 1, 50 SAY 'DOC #'
@ 2, 2 SAY 'PARTY CODE'
@ 3, 0 SAY REPLICATE('-',78)
@ 4, 2 SAY 'ITEM CODE'
@ 4, 48 SAY 'QTY'
@ 4, 53 SAY 'NET'
@ 4, 66 SAY 'AMOUNT'
@ 5, 0 SAY REPLICATE('-',78)

PROCEDURE SAVDATPRO
SELECT ITRAN
APPEND BLANK
REPLACE DATE WITH MDATE
REPLACE C1 WITH MC1
REPLACE C2 WITH MC2
REPLACE C3 WITH MC3
REPLACE AMOUNT WITH MAMOUNT
REPLACE DOC_TYPE WITH MDOC_TYPE
REPLACE DOC_NO WITH MDOC_NO
REPLACE I1 WITH MI1
REPLACE I2 WITH MI2
REPLACE I3 WITH MI3
REPLACE QTY WITH MQTY
REPLACE SR_NO WITH MSR_NO
REPLACE NAMOUNT WITH MNAMOUNT
FLUSH

PROCEDURE SAV1DATPRO
SELECT TRAN
APPEND BLANK
REPLACE DATE WITH MDATE
REPLACE C1 WITH MC1
REPLACE C2 WITH MC2
REPLACE C3 WITH MC3
REPLACE AMOUNT WITH MTAMOUNT
REPLACE DOC_TYPE WITH MDOC_TYPE
REPLACE DOC_NO WITH MDOC_NO
REPLACE CR_DR WITH 'DR'
REPLACE DISC WITH 'SALE INVOICE'
SELECT LDGRCOD
SET ORDER TO C123
SEEK STR(MC1,2)+STR(MC2,2)+STR(MC3,3)
IF STATUS='  '
   MLDGR_BAL = MTAMOUNT
   MSTATUS = 'DR'
ENDIF
IF STATUS='DR'
   MLDGR_BAL = LDGR_BAL+MTAMOUNT
   MSTATUS = 'DR'
ENDIF
IF STATUS='CR'
   MLDGR_BAL = LDGR_BAL-MTAMOUNT
   IF MLDGR_BAL>0
      MSTATUS = 'CR'
   ELSE
      MSTATUS = 'DR'
   ENDIF
ENDIF
REPLACE LDGR_BAL WITH ABS(MLDGR_BAL)
REPLACE STATUS WITH MSTATUS
* 
* 
* LDGRCOD.FXP 
* ----------- 
*
CLOSE DATABASES
SELECT 1
USE SHARED Ldgrcod ALIAS LDGRCOD
SELECT 2
USE SHARED Tran ALIAS TRAN
SELECT 3
USE SHARED City ALIAS CITY
MC1 = 0
MC2 = 0
MC3 = 0
MTITLE = SPACE(30)
MOPT = 0
MC_CODE = SPACE(4)
DEFINE WINDOW LDGRCOD FROM INT((SROWS()-16)/2), INT((SCOLS()-69)/2) TO INT((SROWS()-16)/2)+15, INT((SCOLS()-69)/2)+68 NOFLOAT NOCLOSE SHADOW TITLE ' LEDGER HEAD MAINTENANCE ' NOMINIMIZE PANEL COLOR SCHEME 1
ACTIVATE WINDOW SAME LDGRCOD
DO WHILE .T.
   CLEAR
   DO DSPHEDPRO
   @ 12, 18 SAY 'Press F1 to see Leadger Heads List' COLOR GR+/N 
   ON KEY LABEL F1 DO ShwLdgPro In Proc1
   @ 2, 30 SAY '  -  -   '
   @ 2, 30 GET MC1 PICTURE '@2K 99' VALID MC1<>0 ERROR 'Ledger Head Code Can Not Be Blank - Press Esc To Exit'
   @ 2, 33 GET MC2 PICTURE '@2K 99' VALID MC2<>0 ERROR 'Ledger Head Code Can Not Be Blank - Press Esc To Exit'
   @ 2, 36 GET MC3 PICTURE '@3K 999' VALID MC3<>0 ERROR 'Ledger Head Code Can Not Be Blank - Press Esc To Exit'
   READ
   IF READKEY()=12 .OR. READKEY()=268
      CLOSE DATABASES
      RELEASE WINDOW LDGRCOD
      RETURN
      EXIT
   ENDIF
   SELECT LDGRCOD
   SET ORDER TO C123
   SEEK STR(MC1,2)+STR(MC2,2)+STR(MC3,3)
   IF OPT='New'
      IF FOUND()
         WAIT WINDOW 'Ledger Head Code Already Exist'
         MC1 = 0
         MC2 = 0
         MC3 = 0
         LOOP
      ENDIF
   ENDIF
   IF OPT='Modi'
      IF  .NOT. FOUND()
         WAIT WINDOW 'Ledger Head Code Not Exist'
         MC1 = 0
         MC2 = 0
         MC3 = 0
         LOOP
      ENDIF
      @ 12, 1 CLEAR TO 12, 62
      DO WHILE .T.
         @ 12, 18 GET MOPT SIZE 1, 10 FUNCTION '*H \<Cancel;\<Modify;\<Delete' COLOR SCHEME 19
         READ
         IF READKEY()=15 .OR. READKEY()=271
            EXIT
         ENDIF
      ENDDO
      DO CASE
         CASE MOPT=1
            OPTFLAG = 'C'
         CASE MOPT=2
            OPTFLAG = 'M'
         CASE MOPT=3
            OPTFLAG = 'D'
      ENDCASE
      @ 12, 1 CLEAR TO 12, 62
      IF OPTFLAG='C'
         MC1 = 0
         MC2 = 0
         MC3 = 0
         LOOP
      ENDIF
      IF OPTFLAG='M'
         SELECT LDGRCOD
         MTITLE = TITLE
         MC_CODE = C_CODE
      ENDIF
      IF OPTFLAG='D'
         SELECT TRAN
         SET ORDER TO C123
         SEEK STR(MC1,2)+STR(MC2,2)+STR(MC3,3)
         IF FOUND()
            WAIT WINDOW 'This Code Already Exist In Daily Transaction'
         ELSE
            SELECT LDGRCOD
            DELETE
         ENDIF
         MC1 = 0
         MC2 = 0
         MC3 = 0
         LOOP
      ENDIF
   ENDIF
   @ 5, 30 GET MTITLE PICTURE '@!' VALID MTITLE<>SPACE(30) ERROR 'Ledger Head Title Can Not Be Blank'
   READ
   @ 12, 1 CLEAR TO 12, 62
   @ 12, 18 SAY 'Press F1 to see City Code List' COLOR GR+/N 
   ON KEY LABEL F1 DO ShwCtyPro In Proc1
   @ 8, 30 GET MC_CODE PICTURE '@!' VALID MC_CODE<>SPACE(4) ERROR 'City Code Can Not Be Blank'
   READ
   IF READKEY()=12 .OR. READKEY()=268
      LOOP
   ENDIF
   DO SAVDATPRO
   MC1 = 0
   MC2 = 0
   MC3 = 0
   MTITLE = SPACE(30)
   MC_CODE = SPACE(4)
ENDDO
RELEASE WINDOW LDGRCOD
RETURN

PROCEDURE DSPHEDPRO
@ 2, 5 SAY 'Ledger Head Code'
@ 5, 5 SAY 'Title of Ledger Head'
@ 8, 5 SAY 'City Code'

PROCEDURE SAVDATPRO
SELECT LDGRCOD
SET ORDER TO C123
SEEK STR(MC1,2)+STR(MC2,2)+STR(MC3,3)
IF  .NOT. FOUND()
   APPEND BLANK
ENDIF
REPLACE C1 WITH MC1
REPLACE C2 WITH MC2
REPLACE C3 WITH MC3
REPLACE TITLE WITH MTITLE
REPLACE C_CODE WITH MC_CODE
FLUSH
* 
* 
* M-ITRAN.FXP 
* ----------- 
*
SELECT 1
USE SHARED ITran ALIAS ITRAN
TMP = SYS(3)
COPY TO (TMP+'.Dbf') STRUCTURE
SELECT 2
USE SHARED Item ALIAS ITEM
SET ORDER TO I123
SELECT 3
USE SHARED Tran ALIAS TRAN
SELECT 4
USE SHARED LdgrCod ALIAS LDGRCOD
SELECT 5
USE SHARED DType ALIAS DTYPE
SELECT 6
USE EXCLUSIVE (TMP)
SET RELATION TO STR(I1,2)+STR(I2,2)+STR(I3,4) INTO ITEM ADDITIVE
DEFINE WINDOW MITRAN FROM INT((SROWS()-25)/1), INT((SCOLS()-80)/1) TO INT((SROWS()-25)/1)+24, INT((SCOLS()-80)/1)+79 NOFLOAT NOCLOSE SHADOW TITLE ' MODIFICATION DAILY TRANSACTION ' NOMINIMIZE PANEL COLOR SCHEME 1
ACTIVATE WINDOW SAME MITRAN
MDATE = CTOD('  /  /    ')
MC1 = 0
MC2 = 0
MC3 = 0
MSAMOUNT = 0
MNAMOUNT = 0
MAMOUNT = 0
MDOC_NO = SPACE(6)
MDOC_TYPE = 0
MCR_DR = SPACE(1)
MLDGR_BAL = 0
MSTATUS = SPACE(2)
MI1 = 0
MI2 = 0
MI3 = 0
MQTY = 0
MTQTY = 0
MTAMOUNT = 0
MTNAMOUNT = 0
MCAMOUNT = 0
MSR_NO = 1
MLINE = 1
MANS = SPACE(1)
MOPT = 0
DO WHILE .T.
   DO DSPHEDPRO
   @ 22, 1 CLEAR TO 22, 78
   @ 22, 22 SAY 'Press F1 to see Document Type Code List' COLOR GR+/N 
   ON KEY LABEL F1 DO ShwDtyPro In Proc1
   @ MLINE, 57 GET MDOC_TYPE PICTURE '9'
   READ
   IF READKEY()=12 .OR. READKEY()=268
      CLOSE DATABASES
      RELEASE WINDOW MITRAN
      DELETE FILE TMP+'.Dbf'
      DELETE FILE TMP+'.Cdx'
      RETURN
      EXIT
   ENDIF
   SELECT DTYPE
   SET ORDER TO Doc_Type
   SEEK MDOC_TYPE
   IF  .NOT. FOUND()
      WAIT WINDOW 'Data Type Not Exist'
      MDOC_TYPE = 0
      LOOP
   ENDIF
   @ MLINE, 60 GET MDOC_NO PICTURE '@!' VALID MDOC_NO<>SPACE(6) ERROR 'Document Number Can Not Be Blank'
   READ
   IF READKEY()=12 .OR. READKEY()=268
      MDOC_NO = SPACE(6)
      LOOP
   ENDIF
   SELECT ITRAN
   SET ORDER TO Type_No
   SEEK STR(MDOC_TYPE,1)+MDOC_NO
   IF  .NOT. FOUND()
      WAIT WINDOW 'Document Number Not Exist'
      MDOC_TYPE = 0
      MDOC_NO = SPACE(6)
      LOOP
   ENDIF
   DO WHILE .T.
      @ 22, 1 CLEAR TO 22, 78
      @ 22, 24 GET MOPT SIZE 1, 10 FUNCTION '*H \<Cancel;\<Modify;\<Delete' COLOR SCHEME 19
      READ
      IF READKEY()=15 .OR. READKEY()=271
         EXIT
      ENDIF
   ENDDO
   DO CASE
      CASE MOPT=1
         OPTFLAG = 'C'
      CASE MOPT=2
         OPTFLAG = 'M'
      CASE MOPT=3
         OPTFLAG = 'D'
   ENDCASE
   IF OPTFLAG='C'
      CLEAR
      MDOC_NO = SPACE(6)
      MDOC_TYPE = 0
      MLINE = 1
      MOPT = 0
      LOOP
   ENDIF
   SELECT TRAN
   SET ORDER TO Type_No
   SEEK STR(MDOC_TYPE,1)+MDOC_NO
   MC1 = C1
   MC2 = C2
   MC3 = C3
   MCAMOUNT = AMOUNT
   IF OPTFLAG='D'
      DO CURBALPRO
      SELECT ITRAN
      DELETE ALL FOR DOC_TYPE=MDOC_TYPE .AND. DOC_NO=MDOC_NO
      SELECT TRAN
      DELETE ALL FOR DOC_TYPE=MDOC_TYPE .AND. DOC_NO=MDOC_NO
   ENDIF
   IF OPTFLAG='M'
      SELECT 6
      APPEND FROM ITran FOR DOC_TYPE=MDOC_TYPE .AND. DOC_NO=MDOC_NO
      INDEX ON SR_NO TAG SR_NO
      SET ORDER TO Sr_No
      GOTO TOP
      MDATE = DATE
      MC1 = C1
      MC2 = C2
      MC3 = C3
      @ MLINE, 10 GET MDATE PICTURE ('99/99/9999')
      READ
      MLINE = MLINE+1
      DO WHILE .T.
         SELECT LDGRCOD
         SET ORDER TO Title
         @ 22, 1 CLEAR TO 22, 78
         @ 22, 27 SAY 'Press F1 to see Party Code List' COLOR GR+/N 
         ON KEY LABEL F1 DO ShwLdgPro In Proc1
         @ MLINE, 20 SAY '  -  -   '
         @ MLINE, 20 GET MC1 PICTURE '@2K 99' VALID MC1<>0 ERROR 'Ledger Head Code Can Not Be Blank'
         @ MLINE, 23 GET MC2 PICTURE '@2K 99' VALID MC2<>0 ERROR 'Ledger Head Code Can Not Be Blank'
         @ MLINE, 26 GET MC3 PICTURE '@3K 999' VALID MC3<>0 ERROR 'Ledger Head Code Can Not Be Blank'
         READ
         SET ORDER TO C123
         SEEK STR(MC1,2)+STR(MC2,2)+STR(MC3,3)
         IF  .NOT. FOUND()
            WAIT WINDOW 'Party Code Not Exist'
            MC1 = 0
            MC2 = 0
            MC3 = 0
            LOOP
         ELSE
            @ MLINE, 35 SAY TITLE
            EXIT
         ENDIF
      ENDDO
      SELECT 6
      SET ORDER TO Sr_No
      GOTO TOP
      @ 22, 1 CLEAR TO 22, 78
      MLINE = MLINE+4
      DO WHILE  .NOT. EOF()
         MI1 = I1
         MI2 = I2
         MI3 = I3
         MQTY = QTY
         MAMOUNT = AMOUNT
         MNAMOUNT = NAMOUNT
         MSR_NO = SR_NO
         @ MLINE, 2 SAY '  -  -    '
         @ MLINE, 2 SAY MI1 PICTURE '@2K 99'
         @ MLINE, 5 SAY MI2 PICTURE '@2K 99'
         @ MLINE, 8 SAY MI3 PICTURE '@4K 9999'
         @ MLINE, 15 SAY ITEM.ITEM
         @ MLINE, 48 SAY MQTY PICTURE '@4K 9999'
         @ MLINE, 53 SAY MNAMOUNT PICTURE '999999999.99'
         @ MLINE, 66 SAY MAMOUNT PICTURE '999999999.99'
         MANS = 'N'
         @ MLINE, 0 GET MANS PICTURE '@!' VALID MANS='N' .OR. MANS='C' .OR. MANS='D' ERROR 'N=Next  C=Change  D=Delete'
         READ
         IF MANS='N'
            SELECT 6
            SKIP
            MLINE = MLINE+1
            IF MLINE>19
               @ 6, 0 CLEAR TO 21, 78
               MLINE = 6
            ENDIF
            LOOP
         ENDIF
         IF MANS='C'
            DO EDTDATPRO
         ENDIF
         IF MANS='D'
            DELETE FOR SR_NO=MSR_NO
         ENDIF
         DO SAVDATPRO
         SKIP
         MLINE = MLINE+1
         IF MLINE>19
            @ 6, 0 CLEAR TO 21, 78
            MLINE = 6
         ENDIF
      ENDDO
      DO WHILE .T.
         MANS = SPACE(1)
         @ MLINE, 0 GET MANS PICTURE '@!' VALID MANS='A' ERROR 'A=Addition Or Escape Key For Exit'
         READ
         IF READKEY()=12 .OR. READKEY()=268
            EXIT
         ENDIF
         IF MANS='A'
            MSR_NO = MSR_NO+1
            MI1 = 0
            MI2 = 0
            MI3 = 0
            MQTY = 0
            DO EDTDATPRO
            DO SAVDATPRO
         ENDIF
         MLINE = MLINE+1
         IF MLINE>19
            @ 6, 0 CLEAR TO 21, 78
            MLINE = 6
         ENDIF
      ENDDO
      SELECT 6
      SUM QTY TO MTQTY
      SUM NAMOUNT TO MTNAMOUNT
      SUM AMOUNT TO MTAMOUNT
      @ 22, 1 CLEAR TO 22, 62
      @ 22, 30 SAY 'Total'
      @ 22, 48 SAY MTQTY PICTURE '9999'
      @ 22, 53 SAY MTNAMOUNT PICTURE '999999999.99'
      @ 22, 66 SAY MTAMOUNT PICTURE '999999999.99'
      WAIT WINDOW 'Press Enter To Continue'
      CLEAR
      DO CURBALPRO
      DO SAV1DATPRO
   ENDIF
   CLEAR
   SELECT 6
   ZAP
   MDATE = CTOD('  /  /    ')
   MC1 = 0
   MC2 = 0
   MC3 = 0
   MSAMOUNT = 0
   MNAMOUNT = 0
   MAMOUNT = 0
   MDOC_NO = SPACE(6)
   MDOC_TYPE = 0
   MCR_DR = SPACE(1)
   MLDGR_BAL = 0
   MSTATUS = SPACE(2)
   MI1 = 0
   MI2 = 0
   MI3 = 0
   MQTY = 0
   MTQTY = 0
   MTAMOUNT = 0
   MTNAMOUNT = 0
   MCAMOUNT = 0
   MSR_NO = 1
   MLINE = 1
   MANS = SPACE(1)
   MOPT = 0
ENDDO

PROCEDURE DSPHEDPRO
@ 1, 2 SAY 'DATE'
@ 1, 50 SAY 'DOC #'
@ 2, 2 SAY 'PARTY CODE'
@ 3, 0 SAY REPLICATE('-',78)
@ 4, 2 SAY 'ITEM CODE'
@ 4, 48 SAY 'QTY'
@ 4, 53 SAY 'AMOUNT'
@ 4, 66 SAY 'AMOUNT'
@ 5, 0 SAY REPLICATE('-',78)

PROCEDURE SAVDATPRO
SELECT 6
IF MANS='A'
   APPEND BLANK
   REPLACE SR_NO WITH MSR_NO
ENDIF
REPLACE DATE WITH MDATE
REPLACE C1 WITH MC1
REPLACE C2 WITH MC2
REPLACE C3 WITH MC3
REPLACE AMOUNT WITH MAMOUNT
REPLACE DOC_TYPE WITH MDOC_TYPE
REPLACE DOC_NO WITH MDOC_NO
REPLACE I1 WITH MI1
REPLACE I2 WITH MI2
REPLACE I3 WITH MI3
REPLACE QTY WITH MQTY
REPLACE SR_NO WITH MSR_NO
REPLACE NAMOUNT WITH MNAMOUNT
FLUSH

PROCEDURE SAV1DATPRO
SELECT 6
INDEX ON SR_NO TAG SR_NO
SET ORDER TO Sr_No
SELECT ITRAN
DELETE ALL FOR DOC_TYPE=MDOC_TYPE .AND. DOC_NO=MDOC_NO
APPEND FROM (TMP)
FLUSH
SELECT TRAN
REPLACE DATE WITH MDATE
REPLACE C1 WITH MC1
REPLACE C2 WITH MC2
REPLACE C3 WITH MC3
REPLACE AMOUNT WITH MTAMOUNT
REPLACE DOC_TYPE WITH MDOC_TYPE
REPLACE DOC_NO WITH MDOC_NO
REPLACE CR_DR WITH 'DR'
REPLACE DISC WITH 'SALE INVOICE'
FLUSH
SELECT LDGRCOD
SET ORDER TO C123
SEEK STR(MC1,2)+STR(MC2,2)+STR(MC3,3)
IF STATUS='  '
   MLDGR_BAL = MTAMOUNT
   MSTATUS = 'DR'
ENDIF
IF STATUS='DR'
   MLDGR_BAL = LDGR_BAL+MTAMOUNT
   MSTATUS = 'DR'
ENDIF
IF STATUS='CR'
   MLDGR_BAL = LDGR_BAL-MTAMOUNT
   IF MLDGR_BAL>0
      MSTATUS = 'CR'
   ELSE
      MSTATUS = 'DR'
   ENDIF
ENDIF
REPLACE LDGR_BAL WITH ABS(MLDGR_BAL)
REPLACE STATUS WITH MSTATUS
FLUSH

PROCEDURE CURBALPRO
SELECT LDGRCOD
SET ORDER TO C123
SEEK STR(MC1,2)+STR(MC2,2)+STR(MC3,3)
IF STATUS='DR'
   MLDGR_BAL = LDGR_BAL-MCAMOUNT
   IF MLDGR_BAL>0
      MSTATUS = 'DR'
   ELSE
      MSTATUS = 'CR'
   ENDIF
ENDIF
IF STATUS='CR'
   MLDGR_BAL = LDGR_BAL+MCAMOUNT
   MSTATUS = 'CR'
ENDIF
REPLACE LDGR_BAL WITH ABS(MLDGR_BAL)
REPLACE STATUS WITH MSTATUS
FLUSH

PROCEDURE EDTDATPRO
DO WHILE .T.
   SELECT ITEM
   SET ORDER TO Item
   @ 22, 1 CLEAR TO 22, 62
   @ 22, 26 SAY 'Press F1 to see Item Code List' COLOR GR+/N 
   ON KEY LABEL F1 DO ShwItmPro In Proc1
   @ MLINE, 2 SAY '  -  -    '
   @ MLINE, 2 GET MI1 PICTURE '@2K 99' VALID MI1<>0 ERROR 'Item Code Can Not Be Blank'
   @ MLINE, 5 GET MI2 PICTURE '@2K 99' VALID MI2<>0 ERROR 'Item Code Can Not Be Blank'
   @ MLINE, 8 GET MI3 PICTURE '@4K 9999' VALID MI3<>0 ERROR 'Item Code Can Not Be Blank'
   READ
   SET ORDER TO I123
   SEEK STR(MI1,2)+STR(MI2,2)+STR(MI3,4)
   IF  .NOT. FOUND()
      WAIT WINDOW 'Item Code Not Exist'
      MI1 = 0
      MI2 = 0
      MI3 = 0
      LOOP
   ELSE
      @ MLINE, 15 SAY ITEM
   ENDIF
   @ MLINE, 48 GET MQTY PICTURE '@4K 9999'
   READ
   MSAMOUNT = MQTY*ITEM.RATE
   MNAMOUNT = MQTY*ITEM.RATE
   MAMOUNT = MSAMOUNT+ROUND((MSAMOUNT*ITEM.STAX/100),2)
   @ MLINE, 53 SAY MNAMOUNT PICTURE '999999999.99'
   @ MLINE, 53 GET MNAMOUNT PICTURE '999999999.99'
   @ MLINE, 66 SAY MAMOUNT PICTURE '999999999.99'
   @ MLINE, 66 GET MAMOUNT PICTURE '999999999.99'
   READ
   EXIT
ENDDO
* 
* 
* M-TRAN.FXP 
* ---------- 
*
SELECT 1
USE SHARED Tran ALIAS TRAN
SELECT 2
USE SHARED LdgrCod ALIAS LDGRCOD
SELECT 3
USE SHARED ITran ALIAS ITRAN
SELECT 4
USE SHARED DType ALIAS DTYPE
DEFINE WINDOW MTRAN FROM INT((SROWS()-25)/1), INT((SCOLS()-80)/1) TO INT((SROWS()-25)/1)+24, INT((SCOLS()-80)/1)+79 NOFLOAT NOCLOSE SHADOW TITLE ' MODIFICATION DAILY TRANSACTION ' NOMINIMIZE PANEL COLOR SCHEME 1
ACTIVATE WINDOW SAME MTRAN
MDATE = CTOD('  /  /    ')
MC1 = 0
MC2 = 0
MC3 = 0
MDISC = SPACE(30)
MAMOUNT = 0
MDOC_NO = SPACE(6)
MDOC_TYPE = 0
MCR_DR = SPACE(1)
MLDGR_BAL = 0
MSTATUS = SPACE(2)
MLINE = 3
MANS = SPACE(1)
DO DSPHEDPRO
DO WHILE .T.
   DO WHILE .T.
      @ 22, 1 CLEAR TO 22, 78
      @ 22, 22 SAY 'Press F1 to see Document Type Code List' COLOR GR+/N 
      ON KEY LABEL F1 DO ShwDtyPro In Proc1
      @ MLINE, 13 GET MDOC_TYPE PICTURE '9'
      READ
      IF READKEY()=12 .OR. READKEY()=268
         CLOSE DATABASES
         RELEASE WINDOW MTRAN
         RETURN
         EXIT
      ENDIF
      SELECT DTYPE
      SET ORDER TO Doc_Type
      SEEK MDOC_TYPE
      IF  .NOT. FOUND()
         WAIT WINDOW 'Data Type Not Exist'
         MDOC_TYPE = 0
         LOOP
      ENDIF
      @ MLINE, 15 GET MDOC_NO PICTURE '@!' VALID MDOC_NO<>SPACE(6) ERROR 'Document Number Can Not Be Blank'
      READ
      SELECT TRAN
      SET ORDER TO Type_No
      SEEK STR(MDOC_TYPE,1)+MDOC_NO
      IF  .NOT. FOUND()
         WAIT WINDOW 'Document Number Not Exist'
         MDOC_TYPE = 0
         MDOC_NO = SPACE(6)
         LOOP
      ENDIF
      SELECT ITRAN
      SET ORDER TO Type_No
      SEEK STR(MDOC_TYPE,1)+MDOC_NO
      IF FOUND()
         WAIT WINDOW 'Document Number Exist In Sale File'
         MDOC_TYPE = 0
         MDOC_NO = SPACE(6)
         LOOP
      ENDIF
      EXIT
   ENDDO
   SELECT TRAN
   @ MLINE, 2 SAY DATE
   @ MLINE, 22 SAY '  -  -   '
   @ MLINE, 22 SAY C1
   @ MLINE, 23 SAY C2
   @ MLINE, 28 SAY C3
   @ MLINE, 32 SAY DISC
   @ MLINE, 63 SAY CR_DR
   @ MLINE, 67 SAY AMOUNT PICTURE '99999999.99'
   @ MLINE, 0 GET MANS PICTURE '@!' VALID MANS='D' .OR. MANS='C' .OR. MANS='N' ERROR 'D=Delete  C=Change  N=Next'
   READ
   IF MANS='N'
      MDOC_TYPE = 0
      MDOC_NO = SPACE(6)
      MLINE = MLINE+2
      LOOP
   ENDIF
   MC1 = C1
   MC2 = C2
   MC3 = C3
   MCR_DR = CR_DR
   MAMOUNT = AMOUNT
   SELECT LDGRCOD
   SET ORDER TO C123
   SEEK STR(MC1,2)+STR(MC2,2)+STR(MC3,3)
   IF FOUND()
      IF STATUS='DR'
         IF MCR_DR='DR'
            MLDGR_BAL = LDGR_BAL-MAMOUNT
            IF MLDGR_BAL>0
               MSTATUS = 'DR'
            ELSE
               MSTATUS = 'CR'
            ENDIF
         ELSE
            MLDGR_BAL = LDGR_BAL+MAMOUNT
            MSTATUS = 'DR'
         ENDIF
      ENDIF
      IF STATUS='CR'
         IF MCR_DR='CR'
            MLDGR_BAL = LDGR_BAL-MAMOUNT
            IF MLDGR_BAL>0
               MSTATUS = 'CR'
            ELSE
               MSTATUS = 'DR'
            ENDIF
         ELSE
            MLDGR_BAL = LDGR_BAL+MAMOUNT
            MSTATUS = 'CR'
         ENDIF
      ENDIF
   ENDIF
   REPLACE LDGR_BAL WITH ABS(MLDGR_BAL)
   REPLACE STATUS WITH MSTATUS
   FLUSH
   IF MANS='D'
      SELECT TRAN
      DELETE
      MDOC_NO = SPACE(6)
      MLINE = MLINE+2
      LOOP
   ELSE
      SELECT TRAN
      MDATE = DATE
      MC1 = C1
      MC2 = C2
      MC3 = C3
      MDISC = DISC
      MAMOUNT = AMOUNT
      MCR_DR = CR_DR
      MLDGR_BAL = 0
      MSTATUS = SPACE(2)
      DO EDTDATPRO
      DO SAVDATPRO
   ENDIF
   SELECT TRAN
   MC1 = 0
   MC2 = 0
   MC3 = 0
   MDISC = SPACE(30)
   MAMOUNT = 0
   MDOC_NO = SPACE(6)
   MDOC_TYPE = 0
   MCR_DR = SPACE(1)
   MANS = SPACE(1)
   MLDGR_BAL = 0
   MSTATUS = SPACE(2)
   MLINE = MLINE+2
   IF MLINE>19
      @ 3, 0 CLEAR TO 21, 78
      MLINE = 3
   ENDIF
ENDDO

PROCEDURE DSPHEDPRO
@ 1, 2 SAY 'DATE'
@ 1, 14 SAY 'DOC #'
@ 1, 22 SAY 'PARTY CODE'
@ 1, 33 SAY 'DISCRIPTION'
@ 1, 61 SAY 'C/D'
@ 1, 66 SAY 'AMOUNT'

PROCEDURE SAVDATPRO
SELECT TRAN
REPLACE DATE WITH MDATE
REPLACE C1 WITH MC1
REPLACE C2 WITH MC2
REPLACE C3 WITH MC3
REPLACE DOC_NO WITH MDOC_NO
REPLACE DOC_TYPE WITH MDOC_TYPE
REPLACE CR_DR WITH LEFT(MCR_DR,1)+'R'
REPLACE AMOUNT WITH MAMOUNT
REPLACE DISC WITH MDISC
FLUSH
SELECT LDGRCOD
IF STATUS='  '
   IF MCR_DR='D'
      MLDGR_BAL = MAMOUNT
      MSTATUS = 'DR'
   ELSE
      MLDGR_BAL = MAMOUNT
      MSTATUS = 'CR'
   ENDIF
ENDIF
IF STATUS='DR'
   IF MCR_DR='D'
      MLDGR_BAL = LDGR_BAL+MAMOUNT
      MSTATUS = 'DR'
   ELSE
      MLDGR_BAL = LDGR_BAL-MAMOUNT
      IF MLDGR_BAL>0
         MSTATUS = 'DR'
      ELSE
         MSTATUS = 'CR'
      ENDIF
   ENDIF
ENDIF
IF STATUS='CR'
   IF MCR_DR='C'
      MLDGR_BAL = LDGR_BAL+MAMOUNT
      MSTATUS = 'CR'
   ELSE
      MLDGR_BAL = LDGR_BAL-MAMOUNT
      IF MLDGR_BAL>0
         MSTATUS = 'CR'
      ELSE
         MSTATUS = 'DR'
      ENDIF
   ENDIF
ENDIF
REPLACE LDGR_BAL WITH ABS(MLDGR_BAL)
REPLACE STATUS WITH MSTATUS

PROCEDURE EDTDATPRO
@ MLINE, 2 GET MDATE PICTURE ('99/99/9999')
READ
DO WHILE .T.
   SELECT LDGRCOD
   SET ORDER TO Title
   @ 22, 1 CLEAR TO 22, 62
   @ 22, 27 SAY 'Press F1 to see Party Code List' COLOR GR+/N 
   ON KEY LABEL F1 DO ShwLdgPro In Proc1
   @ MLINE, 22 SAY '  -  -   '
   @ MLINE, 22 GET MC1 PICTURE '@2K 99' VALID MC1<>0 ERROR 'Ledger Head Code Can Not Be Blank - Press Esc To Exit'
   @ MLINE, 25 GET MC2 PICTURE '@2K 99' VALID MC2<>0 ERROR 'Ledger Head Code Can Not Be Blank - Press Esc To Exit'
   @ MLINE, 28 GET MC3 PICTURE '@3K 999' VALID MC3<>0 ERROR 'Ledger Head Code Can Not Be Blank - Press Esc To Exit'
   READ
   SET ORDER TO C123
   SEEK STR(MC1,2)+STR(MC2,2)+STR(MC3,3)
   IF  .NOT. FOUND()
      WAIT WINDOW 'Party Code Not Exist'
      MC1 = 0
      MC2 = 0
      MC3 = 0
      LOOP
   ELSE
      EXIT
   ENDIF
ENDDO
@ MLINE, 32 GET MDISC PICTURE '@!'
@ MLINE, 63 GET MCR_DR PICTURE '@!' VALID MCR_DR='C' .OR. MCR_DR='D' ERROR 'C=Credit Or D=Debit'
@ MLINE, 67 GET MAMOUNT PICTURE '99999999.99'
READ
* 
* 
* MAIN.FXP 
* -------- 
*
PUBLIC BACKGRND
CLEAR
CLEAR ALL
CLOSE ALL
SET DATE BRIT
SET CENTURY ON
SET SCOREBOARD OFF
SET BELL OFF
SET SAFETY OFF
SET TALK OFF
SET CONFIRM OFF
SET STATUS OFF
SET STEP OFF
SET ECHO OFF
SET DOHISTORY OFF
SET EXCLUSIVE OFF
SET SYSMENU OFF
SET DELETED ON
CLEAR MACROS
MCOMP = 'NIAZ (PVT) LTD'
DO BACKGRND
DO C-File
ON KEY LABEL Rightarrow ?? CHR(7)
ON KEY LABEL Leftarrow ?? CHR(7)
ON KEY LABEL Escape ?? CHR(7)
SAVE SCREEN TO BACKGRND
DEFINE POPUP MAINMENU FROM 1, 0 TO 15, 29 COLOR SCHEME 1
DEFINE BAR 1 OF MAINMENU PROMPT '²²²²²²²  Main Menu   ²²²²²²²' SKIP
DEFINE BAR 2 OF MAINMENU PROMPT '\-'
DEFINE BAR 3 OF MAINMENU PROMPT ' \<Daily Transactions' MESSAGE 'Entry All Types Of Invoices'
DEFINE BAR 4 OF MAINMENU PROMPT '\-'
DEFINE BAR 5 OF MAINMENU PROMPT ' \<Code Files' MESSAGE 'Maintain The Party & Item Codes '
DEFINE BAR 6 OF MAINMENU PROMPT '\-'
DEFINE BAR 7 OF MAINMENU PROMPT ' \<Reports' MESSAGE 'Display Or Print All Types Of Report'
DEFINE BAR 8 OF MAINMENU PROMPT '\-'
DEFINE BAR 9 OF MAINMENU PROMPT ' System \<Maintenance' MESSAGE 'Progrmme Files Arrangement'
DEFINE BAR 10 OF MAINMENU PROMPT '\-'
DEFINE BAR 11 OF MAINMENU PROMPT ' \<System Security' MESSAGE 'Arranging Security Passwards'
DEFINE BAR 12 OF MAINMENU PROMPT '\-'
DEFINE BAR 13 OF MAINMENU PROMPT ' \<Quit' MESSAGE 'Exit From This Programe'
ON SELECTION POPUP MAINMENU DO mmchoice
DEFINE POPUP COMENU FROM 3, 25 TO 15, 51 COLOR SCHEME 10
DEFINE BAR 1 OF COMENU PROMPT '°°°°°° Code  Files °°°°°°' SKIP
DEFINE BAR 2 OF COMENU PROMPT '\-'
DEFINE BAR 3 OF COMENU PROMPT ' \<Party Code File' MESSAGE 'Party Code (Entry, Modification & Printing/Display)'
DEFINE BAR 4 OF COMENU PROMPT '\-'
DEFINE BAR 5 OF COMENU PROMPT ' \<Item Code File' MESSAGE 'Item Code (Entry, Modification & Printing/Display)'
DEFINE BAR 6 OF COMENU PROMPT '\-'
DEFINE BAR 7 OF COMENU PROMPT ' \<Document Type File' MESSAGE 'Document Type (Entry, Modification & Printing/Display)'
DEFINE BAR 8 OF COMENU PROMPT '\-'
DEFINE BAR 9 OF COMENU PROMPT ' \<City Code File' MESSAGE 'City Code (Entry, Modification & Printing/Display)'
DEFINE BAR 10 OF COMENU PROMPT '\-'
DEFINE BAR 11 OF COMENU PROMPT ' \<Exit' MESSAGE 'Return To Previous Menu'
ON SELECTION POPUP COMENU DO coMenu
DEFINE POPUP CPMENU FROM 6, 47 TO 16, 73 COLOR SCHEME 10
DEFINE BAR 1 OF CPMENU PROMPT '°°°°°° Party Files °°°°°°' SKIP
DEFINE BAR 2 OF CPMENU PROMPT '\-'
DEFINE BAR 3 OF CPMENU PROMPT ' \<New Entry' MESSAGE 'Only New Party Code Entry'
DEFINE BAR 4 OF CPMENU PROMPT '\-'
DEFINE BAR 5 OF CPMENU PROMPT ' \<Modification' MESSAGE 'Party Code Correction, Delection'
DEFINE BAR 6 OF CPMENU PROMPT '\-'
DEFINE BAR 7 OF CPMENU PROMPT ' \<Printing/Display' MESSAGE 'Report Print & Screen'
DEFINE BAR 8 OF CPMENU PROMPT '\-'
DEFINE BAR 9 OF CPMENU PROMPT ' \<Exit' MESSAGE 'Return To Previous Menu'
ON SELECTION POPUP CPMENU DO cpMenu
DEFINE POPUP CIMENU FROM 8, 47 TO 18, 73 COLOR SCHEME 10
DEFINE BAR 1 OF CIMENU PROMPT '°°°°°° Item  Files °°°°°°' SKIP
DEFINE BAR 2 OF CIMENU PROMPT '\-'
DEFINE BAR 3 OF CIMENU PROMPT ' \<New Entry' MESSAGE 'Only New Item Code Entry'
DEFINE BAR 4 OF CIMENU PROMPT '\-'
DEFINE BAR 5 OF CIMENU PROMPT ' \<Modification' MESSAGE 'Item Code Correction, Delection'
DEFINE BAR 6 OF CIMENU PROMPT '\-'
DEFINE BAR 7 OF CIMENU PROMPT ' \<Printing/Display' MESSAGE 'Report Print & Screen'
DEFINE BAR 8 OF CIMENU PROMPT '\-'
DEFINE BAR 9 OF CIMENU PROMPT ' \<Exit' MESSAGE 'Return To Previous Menu'
ON SELECTION POPUP CIMENU DO ciMenu
DEFINE POPUP CDMENU FROM 10, 47 TO 20, 73 COLOR SCHEME 10
DEFINE BAR 1 OF CDMENU PROMPT '°° Document Type Files °°' SKIP
DEFINE BAR 2 OF CDMENU PROMPT '\-'
DEFINE BAR 3 OF CDMENU PROMPT ' \<New Entry' MESSAGE 'Only New Document Type Entry'
DEFINE BAR 4 OF CDMENU PROMPT '\-'
DEFINE BAR 5 OF CDMENU PROMPT ' \<Modification' MESSAGE 'Document Type Correction, Delection'
DEFINE BAR 6 OF CDMENU PROMPT '\-'
DEFINE BAR 7 OF CDMENU PROMPT ' \<Printing/Display' MESSAGE 'Report Print & Screen'
DEFINE BAR 8 OF CDMENU PROMPT '\-'
DEFINE BAR 9 OF CDMENU PROMPT ' \<Exit' MESSAGE 'Return To Previous Menu'
ON SELECTION POPUP CDMENU DO cdMenu
DEFINE POPUP CCMENU FROM 12, 47 TO 22, 73 COLOR SCHEME 10
DEFINE BAR 1 OF CCMENU PROMPT '°° City Code Files °°' SKIP
DEFINE BAR 2 OF CCMENU PROMPT '\-'
DEFINE BAR 3 OF CCMENU PROMPT ' \<New Entry' MESSAGE 'Only New City Code Entry'
DEFINE BAR 4 OF CCMENU PROMPT '\-'
DEFINE BAR 5 OF CCMENU PROMPT ' \<Modification' MESSAGE 'City Code Correction, Delection'
DEFINE BAR 6 OF CCMENU PROMPT '\-'
DEFINE BAR 7 OF CCMENU PROMPT ' \<Printing/Display' MESSAGE 'Report Print & Screen'
DEFINE BAR 8 OF CCMENU PROMPT '\-'
DEFINE BAR 9 OF CCMENU PROMPT ' \<Exit' MESSAGE 'Return To Previous Menu'
ON SELECTION POPUP CCMENU DO ccMenu
DEFINE POPUP REMENU FROM 3, 25 TO 23, 51 COLOR SCHEME 10
DEFINE BAR 1 OF REMENU PROMPT '°°°°     Reports     °°°°' SKIP
DEFINE BAR 2 OF REMENU PROMPT '\-'
DEFINE BAR 3 OF REMENU PROMPT ' \<Leadger Status' MESSAGE 'All Types Of Leadger Status Reports'
DEFINE BAR 4 OF REMENU PROMPT '\-'
DEFINE BAR 5 OF REMENU PROMPT ' \<Account Leadger' MESSAGE 'All Types Of Account Leadger Reports'
DEFINE BAR 6 OF REMENU PROMPT '\-'
DEFINE BAR 7 OF REMENU PROMPT ' \<Zone Wise Sale' MESSAGE 'Zone Wise Cartons & Amount Reports'
DEFINE BAR 8 OF REMENU PROMPT '\-'
DEFINE BAR 9 OF REMENU PROMPT ' ' MESSAGE 'Reports'
DEFINE BAR 10 OF REMENU PROMPT '\-'
DEFINE BAR 11 OF REMENU PROMPT ' ' MESSAGE 'Report'
DEFINE BAR 12 OF REMENU PROMPT '\-'
DEFINE BAR 13 OF REMENU PROMPT ' ' MESSAGE 'Report'
DEFINE BAR 14 OF REMENU PROMPT '\-'
DEFINE BAR 15 OF REMENU PROMPT ' ' MESSAGE ''
DEFINE BAR 16 OF REMENU PROMPT '\-'
DEFINE BAR 17 OF REMENU PROMPT ' ' MESSAGE ''
DEFINE BAR 18 OF REMENU PROMPT '\-'
DEFINE BAR 19 OF REMENU PROMPT ' \<Exit' MESSAGE 'Return To Previous Menu'
ON SELECTION POPUP REMENU DO reMenu
DEFINE POPUP DTMENU FROM 7, 25 TO 15, 51 COLOR SCHEME 10
DEFINE BAR 1 OF DTMENU PROMPT '°°° Daily Transaction °°°' SKIP
DEFINE BAR 2 OF DTMENU PROMPT '\-'
DEFINE BAR 3 OF DTMENU PROMPT ' \<All Vouchers' MESSAGE 'All Vouchers Types (Entry, Modification & Printing/Display)'
DEFINE BAR 4 OF DTMENU PROMPT '\-'
DEFINE BAR 5 OF DTMENU PROMPT ' \<Sales Invoices' MESSAGE 'Sales Invoices (Entry, Modification & Printing/Display)'
DEFINE BAR 6 OF DTMENU PROMPT '\-'
DEFINE BAR 7 OF DTMENU PROMPT ' \<Exit' MESSAGE 'Return To Previous Menu'
ON SELECTION POPUP DTMENU DO dtMenu
DEFINE POPUP VMENU FROM 9, 47 TO 19, 73 COLOR SCHEME 10
DEFINE BAR 1 OF VMENU PROMPT '°°°°°°   Vouchers  °°°°°°' SKIP
DEFINE BAR 2 OF VMENU PROMPT '\-'
DEFINE BAR 3 OF VMENU PROMPT ' \<New Entry' MESSAGE 'Only New Voucher Entry'
DEFINE BAR 4 OF VMENU PROMPT '\-'
DEFINE BAR 5 OF VMENU PROMPT ' \<Modification' MESSAGE 'Voucher Correction, Delection'
DEFINE BAR 6 OF VMENU PROMPT '\-'
DEFINE BAR 7 OF VMENU PROMPT ' \<Printing/Display' MESSAGE 'Report Print & Screen'
DEFINE BAR 8 OF VMENU PROMPT '\-'
DEFINE BAR 9 OF VMENU PROMPT ' \<Exit' MESSAGE 'Return To Previous Menu'
ON SELECTION POPUP VMENU DO vMenu
DEFINE POPUP VRMENU FROM 15, 53 TO 23, 80 COLOR SCHEME 10
DEFINE BAR 1 OF VRMENU PROMPT '°°°°°° Report Menu °°°°°°' SKIP
DEFINE BAR 2 OF VRMENU PROMPT '\-'
DEFINE BAR 3 OF VRMENU PROMPT ' \<Document Type Wise' MESSAGE 'Report Document Type Wise'
DEFINE BAR 4 OF VRMENU PROMPT '\-'
DEFINE BAR 5 OF VRMENU PROMPT ' \<Date Wise' MESSAGE 'Report Voucher Date Wise'
DEFINE BAR 6 OF VRMENU PROMPT '\-'
DEFINE BAR 7 OF VRMENU PROMPT ' \<Exit' MESSAGE 'Return To Previous Menu'
ON SELECTION POPUP VRMENU DO vrMenu
DEFINE POPUP SMENU FROM 11, 47 TO 21, 73 COLOR SCHEME 10
DEFINE BAR 1 OF SMENU PROMPT '°°°°° Sale  Invoice °°°°°' SKIP
DEFINE BAR 2 OF SMENU PROMPT '\-'
DEFINE BAR 3 OF SMENU PROMPT ' \<New Entry' MESSAGE 'Only New Sale Invoice Entry'
DEFINE BAR 4 OF SMENU PROMPT '\-'
DEFINE BAR 5 OF SMENU PROMPT ' \<Modification' MESSAGE 'Sale Invoice Correction, Delection'
DEFINE BAR 6 OF SMENU PROMPT '\-'
DEFINE BAR 7 OF SMENU PROMPT ' \<Printing/Display' MESSAGE 'Report Print & Screen'
DEFINE BAR 8 OF SMENU PROMPT '\-'
DEFINE BAR 9 OF SMENU PROMPT ' \<Exit' MESSAGE 'Return To Previous Menu'
ON SELECTION POPUP SMENU DO sMenu
DEFINE POPUP SRMENU FROM 15, 53 TO 23, 80 COLOR SCHEME 10
DEFINE BAR 1 OF SRMENU PROMPT '°°°°°° Report Menu °°°°°°' SKIP
DEFINE BAR 2 OF SRMENU PROMPT '\-'
DEFINE BAR 3 OF SRMENU PROMPT ' \<Number Wise' MESSAGE 'Report Sale Invoice Number Wise'
DEFINE BAR 4 OF SRMENU PROMPT '\-'
DEFINE BAR 5 OF SRMENU PROMPT ' \<Date Wise' MESSAGE 'Report Sale Invoice Date Wise'
DEFINE BAR 6 OF SRMENU PROMPT '\-'
DEFINE BAR 7 OF SRMENU PROMPT ' \<Exit' MESSAGE 'Return To Previous Menu'
ON SELECTION POPUP SRMENU DO srMenu
DEFINE POPUP MANMENU FROM 11, 25 TO 17, 51 COLOR SCHEME 10
DEFINE BAR 1 OF MANMENU PROMPT '°°°°°° Maintenance °°°°°°' SKIP
DEFINE BAR 2 OF MANMENU PROMPT '\-'
DEFINE BAR 3 OF MANMENU PROMPT ' \<Re-Index Data Files' MESSAGE 'Arranging All The Records'
DEFINE BAR 4 OF MANMENU PROMPT '\-'
DEFINE BAR 5 OF MANMENU PROMPT ' \<Exit' MESSAGE 'Exit From This Menu'
ON SELECTION POPUP MANMENU DO manMenu
DEFINE POPUP SECMENU FROM 13, 25 TO 21, 51 COLOR SCHEME 10
DEFINE BAR 1 OF SECMENU PROMPT '°°°° System Security °°°°' SKIP
DEFINE BAR 2 OF SECMENU PROMPT '\-'
DEFINE BAR 3 OF SECMENU PROMPT ' \<Change Passwords' MESSAGE 'Changeing All The Menu Passwords'
DEFINE BAR 4 OF SECMENU PROMPT '\-'
DEFINE BAR 5 OF SECMENU PROMPT ' \<Update Balances' MESSAGE 'Update All Leadger Balances'
DEFINE BAR 6 OF SECMENU PROMPT '\-'
DEFINE BAR 7 OF SECMENU PROMPT ' \<Exit' MESSAGE 'Exit From This Menu'
ON SELECTION POPUP SECMENU DO secMenu
ACTIVATE POPUP MAINMENU

PROCEDURE MMCHOICE
DO CASE
   CASE BAR()=3
      MSRNO = 3
      DO PASS
      IF MPERMIT='OK'
         ACTIVATE POPUP DTMENU
      ENDIF
   CASE BAR()=5
      MSRNO = 1
      DO PASS
      IF MPERMIT='OK'
         ACTIVATE POPUP COMENU
      ENDIF
   CASE BAR()=7
      MSRNO = 2
      DO PASS
      IF MPERMIT='OK'
         ACTIVATE POPUP REMENU
      ENDIF
   CASE BAR()=9
      MSRNO = 4
      DO PASS
      IF MPERMIT='OK'
         ACTIVATE POPUP MANMENU
      ENDIF
   CASE BAR()=11
      MSRNO = 5
      DO PASS
      IF MPERMIT='OK'
         ACTIVATE POPUP SECMENU
      ENDIF
   CASE BAR()=13
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      CLOSE ALL
      CLEAR
      CANCEL
      CLEAR ALL
ENDCASE
RETURN

PROCEDURE COMENU
DO CASE
   CASE BAR()=3
      ACTIVATE POPUP CPMENU
   CASE BAR()=5
      ACTIVATE POPUP CIMENU
   CASE BAR()=7
      ACTIVATE POPUP CDMENU
   CASE BAR()=9
      ACTIVATE POPUP CCMENU
   CASE BAR()=11
      DEACTIVATE POPUP COMENU
   OTHERWISE
ENDCASE
RETURN

PROCEDURE CPMENU
DO CASE
   CASE BAR()=3
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      OPT = 'New'
      DO LDGRCOD
   CASE BAR()=5
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      OPT = 'Modi'
      DO LDGRCOD
   CASE BAR()=7
      DO R-Ldcod
   CASE BAR()=9
      DEACTIVATE POPUP CPMENU
   OTHERWISE
ENDCASE
ON KEY LABEL Escape ?? CHR(7)
ON KEY LABEL Rightarrow ?? CHR(7)
ON KEY LABEL Leftarrow ?? CHR(7)
RETURN

PROCEDURE CIMENU
DO CASE
   CASE BAR()=3
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      OPT = 'New'
      DO ITEM
   CASE BAR()=5
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      OPT = 'Modi'
      DO ITEM
   CASE BAR()=7
      DO R-Itmcod
   CASE BAR()=9
      DEACTIVATE POPUP CIMENU
   OTHERWISE
ENDCASE
ON KEY LABEL Escape ?? CHR(7)
ON KEY LABEL Rightarrow ?? CHR(7)
ON KEY LABEL Leftarrow ?? CHR(7)
RETURN

PROCEDURE CDMENU
DO CASE
   CASE BAR()=3
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      OPT = 'New'
      DO DTYPE
   CASE BAR()=5
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      OPT = 'Modi'
      DO DTYPE
   CASE BAR()=7
   CASE BAR()=9
      DEACTIVATE POPUP CDMENU
   OTHERWISE
ENDCASE
ON KEY LABEL Escape ?? CHR(7)
ON KEY LABEL Rightarrow ?? CHR(7)
ON KEY LABEL Leftarrow ?? CHR(7)
RETURN

PROCEDURE CCMENU
DO CASE
   CASE BAR()=3
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      OPT = 'New'
      DO CITY
   CASE BAR()=5
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      OPT = 'Modi'
      DO CITY
   CASE BAR()=7
      DO R-City
   CASE BAR()=9
      DEACTIVATE POPUP CCMENU
   OTHERWISE
ENDCASE
ON KEY LABEL Escape ?? CHR(7)
ON KEY LABEL Rightarrow ?? CHR(7)
ON KEY LABEL Leftarrow ?? CHR(7)
RETURN

PROCEDURE REMENU
DO CASE
   CASE BAR()=3
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      DO R-Lstat
   CASE BAR()=5
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      DO R-Led
   CASE BAR()=7
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      DO R-Zone
   CASE BAR()=9
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
   CASE BAR()=11
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
   CASE BAR()=13
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
   CASE BAR()=15
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
   CASE BAR()=17
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
   CASE BAR()=19
      DEACTIVATE POPUP REMENU
   OTHERWISE
ENDCASE
ON KEY LABEL Escape ?? CHR(7)
ON KEY LABEL Rightarrow ?? CHR(7)
ON KEY LABEL Leftarrow ?? CHR(7)
RETURN

PROCEDURE DTMENU
DO CASE
   CASE BAR()=3
      ACTIVATE POPUP VMENU
   CASE BAR()=5
      ACTIVATE POPUP SMENU
   CASE BAR()=7
      DEACTIVATE POPUP DTMENU
   OTHERWISE
ENDCASE
RETURN

PROCEDURE VMENU
DO CASE
   CASE BAR()=3
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      DO TRAN
   CASE BAR()=5
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      DO M-Tran
   CASE BAR()=7
      ACTIVATE POPUP VRMENU
   CASE BAR()=9
      DEACTIVATE POPUP VMENU
   OTHERWISE
ENDCASE
ON KEY LABEL Escape ?? CHR(7)
ON KEY LABEL Rightarrow ?? CHR(7)
ON KEY LABEL Leftarrow ?? CHR(7)
RETURN

PROCEDURE VRMENU
DO CASE
   CASE BAR()=3
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      DO RN-Tran
   CASE BAR()=5
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      DO RD-Tran
   CASE BAR()=7
      DEACTIVATE POPUP VRMENU
   OTHERWISE
ENDCASE
ON KEY LABEL Escape ?? CHR(7)
ON KEY LABEL Rightarrow ?? CHR(7)
ON KEY LABEL Leftarrow ?? CHR(7)
RETURN

PROCEDURE SMENU
DO CASE
   CASE BAR()=3
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      DO ITRAN
   CASE BAR()=5
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      DO M-ITran
   CASE BAR()=7
      ACTIVATE POPUP SRMENU
   CASE BAR()=9
      DEACTIVATE POPUP SMENU
   OTHERWISE
ENDCASE
ON KEY LABEL Escape ?? CHR(7)
ON KEY LABEL Rightarrow ?? CHR(7)
ON KEY LABEL Leftarrow ?? CHR(7)
RETURN

PROCEDURE SRMENU
DO CASE
   CASE BAR()=3
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      DO RN-Invo
   CASE BAR()=5
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      DO RD-Invo
   CASE BAR()=7
      DEACTIVATE POPUP SRMENU
   OTHERWISE
ENDCASE
ON KEY LABEL Escape ?? CHR(7)
ON KEY LABEL Rightarrow ?? CHR(7)
ON KEY LABEL Leftarrow ?? CHR(7)
RETURN

PROCEDURE MANMENU
DO CASE
   CASE BAR()=3
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      DO REINDEX
   CASE BAR()=5
      DEACTIVATE POPUP MANMENU
   OTHERWISE
ENDCASE
ON KEY LABEL Escape ?? CHR(7)
ON KEY LABEL Rightarrow ?? CHR(7)
ON KEY LABEL Leftarrow ?? CHR(7)
RETURN

PROCEDURE SECMENU
DO CASE
   CASE BAR()=3
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      DO C-Pass
   CASE BAR()=5
      ON KEY LABEL Escape 
      ON KEY LABEL Rightarrow 
      ON KEY LABEL Leftarrow 
      DO REINDEX
      DO UPDBAL
   CASE BAR()=7
      DEACTIVATE POPUP SECMENU
   OTHERWISE
ENDCASE
ON KEY LABEL Escape ?? CHR(7)
ON KEY LABEL Rightarrow ?? CHR(7)
ON KEY LABEL Leftarrow ?? CHR(7)
RETURN

PROCEDURE BACKGRND
@ 0, 0 SAY MCOMP COLOR SCHEME 1
@ 0, 61 SAY 'SALE PROGRAMME' COLOR SCHEME 1
@ 22, 0 SAY 'Designed & Developed by :' COLOR SCHEME 1
@ 23, 0 SAY 'MUHAMMAD USMAN' COLOR SCHEME 1
RETURN
* 
* 
* PASS.FXP 
* -------- 
*
PUBLIC MPERMIT, MPASS
CLOSE DATABASES
SELECT 1
USE SHARED Pass ALIAS PASS
MPASS = SPACE(6)
MPERMIT = SPACE(2)
DEFINE WINDOW PASS FROM INT((SROWS()-15)/1), INT((SCOLS()-68)/1) TO INT((SROWS()-15)/1)+6, INT((SCOLS()-68)/1)+50 NOFLOAT NOCLOSE SHADOW NOMINIMIZE PANEL COLOR R/BG 
ACTIVATE WINDOW SAME PASS
@ 2, 8 SAY 'Enter Your Password :'
SET COLOR TO W/N, N
@ 2, 30 GET MPASS FUNCTION '!'
READ
NCODE1 = SUBSTR(MPASS,1,1)
NCODE2 = SUBSTR(MPASS,2,1)
NCODE3 = SUBSTR(MPASS,3,1)
NCODE4 = SUBSTR(MPASS,4,1)
NCODE5 = SUBSTR(MPASS,5,1)
NCODE6 = SUBSTR(MPASS,6,1)
Mpass = chr(asc("&ncode1")+26)+chr(asc("&ncode2")+30)+chr(asc("&ncode3")+29)+chr(asc("&ncode4")+21)+chr(asc("&ncode5")+19)+chr(asc("&ncode6")+13)
SELECT PASS
SET ORDER TO Sr_No
SEEK MSRNO
IF MPASS=PASS
   MPERMIT = 'OK'
ELSE
   WAIT WINDOW 'Your Password Is Not Correct'
ENDIF
RELEASE WINDOW PASS
RETURN
* 
* 
* PROC1.FXP 
* --------- 
*

PROCEDURE SHWLDGPRO
PUSH KEY
DEFINE WINDOW SHWLDG FROM 5, 40 TO 20, 75 FOOTER '<Enter To Select / Esc To Exit>' DOUBLE
ACTIVATE WINDOW SHWLDG
SELECT LDGRCOD
ON KEY LABEL F1 
ON KEY LABEL ENTER DO SlcLdgPro
BROWSE FIELDS C1 :H = '  ', C2 :H = '  ', C3 :H = '   ', TITLE :H = 'Leadger Head Title' NOAPPEND NOEDIT NODELETE IN SHWLDG
DEACTIVATE WINDOW SHWLDG
ON KEY LABEL ENTER 
POP KEY
RETURN

PROCEDURE SLCLDGPRO
MC1 = C1
MC2 = C2
MC3 = C3
SHOW GETS
CLEAR GETS
DEACTIVATE WINDOW SHWLDG
ON KEY LABEL ENTER 
RETURN

PROCEDURE SHWITMPRO
PUSH KEY
DEFINE WINDOW SHWITM FROM 5, 40 TO 20, 75 FOOTER '<Enter To Select / Esc To Exit>' DOUBLE
ACTIVATE WINDOW SHWITM
SELECT ITEM
ON KEY LABEL F1 
ON KEY LABEL ENTER DO SlcItmPro
BROWSE FIELDS I1 :H = '  ', I2 :H = '  ', I3 :H = '    ', ITEM :H = 'Items Name' NOAPPEND NOEDIT NODELETE IN SHWITM
DEACTIVATE WINDOW SHWITM
ON KEY LABEL ENTER 
POP KEY
RETURN

PROCEDURE SLCITMPRO
MI1 = I1
MI2 = I2
MI3 = I3
SHOW GETS
CLEAR GETS
DEACTIVATE WINDOW SHWITM
ON KEY LABEL ENTER 
RETURN

PROCEDURE SHW1ITMPRO
PUSH KEY
DEFINE WINDOW SHW1ITM FROM 5, 40 TO 20, 75 FOOTER '<Enter To Select / Esc To Exit>' DOUBLE
ACTIVATE WINDOW SHW1ITM
SELECT ITEM
ON KEY LABEL F1 
ON KEY LABEL ENTER DO Slc1ItmPro
BROWSE FIELDS I1 :H = '  ', I2 :H = '  ', I3 :H = '    ', ITEM :H = 'Items Name' NOAPPEND NOEDIT NODELETE IN SHW1ITM
DEACTIVATE WINDOW SHW1ITM
ON KEY LABEL ENTER 
POP KEY
RETURN

PROCEDURE SLC1ITMPRO
MSI3 = I3
SHOW GETS
CLEAR GETS
DEACTIVATE WINDOW SHW1ITM
ON KEY LABEL ENTER 
RETURN

PROCEDURE SHWDTYPRO
PUSH KEY
DEFINE WINDOW SHWDTY FROM 5, 40 TO 20, 75 FOOTER '<Enter To Select / Esc To Exit>' DOUBLE
ACTIVATE WINDOW SHWDTY
SELECT DTYPE
ON KEY LABEL F1 
ON KEY LABEL ENTER DO SlcDtyPro
BROWSE FIELDS DOC_TYPE :H = '  ', TYPE1 :H = '  ', TYPE2 :H = 'Data Type' NOAPPEND NOEDIT NODELETE IN SHWDTY
DEACTIVATE WINDOW SHWDTY
ON KEY LABEL ENTER 
POP KEY
RETURN

PROCEDURE SLCDTYPRO
MDOC_TYPE = DOC_TYPE
SHOW GETS
CLEAR GETS
DEACTIVATE WINDOW SHWDTY
ON KEY LABEL ENTER 
RETURN

PROCEDURE LEDCODPRO
MCODLEN = LEN(LTRIM(RTRIM(MC1)))
MC1 = REPLICATE('0',2-MCODLEN)+LTRIM(RTRIM(MC1))
MCODLEN = LEN(LTRIM(RTRIM(MC2)))
MC2 = REPLICATE('0',2-MCODLEN)+LTRIM(RTRIM(MC2))
MCODLEN = LEN(LTRIM(RTRIM(MC3)))
MC3 = REPLICATE('0',3-MCODLEN)+LTRIM(RTRIM(MC3))

PROCEDURE LED1CODPRO
MCODLEN = LEN(LTRIM(RTRIM(MMC1)))
MMC1 = REPLICATE('0',2-MCODLEN)+LTRIM(RTRIM(MMC1))
MCODLEN = LEN(LTRIM(RTRIM(MMC2)))
MMC2 = REPLICATE('0',2-MCODLEN)+LTRIM(RTRIM(MMC2))
MCODLEN = LEN(LTRIM(RTRIM(MMC3)))
MMC3 = REPLICATE('0',3-MCODLEN)+LTRIM(RTRIM(MMC3))

PROCEDURE ITMCODPRO
MCODLEN = LEN(LTRIM(RTRIM(MI1)))
MI1 = REPLICATE('0',2-MCODLEN)+LTRIM(RTRIM(MI1))
MCODLEN = LEN(LTRIM(RTRIM(MI2)))
MI2 = REPLICATE('0',2-MCODLEN)+LTRIM(RTRIM(MI2))
MCODLEN = LEN(LTRIM(RTRIM(MI3)))
MI3 = REPLICATE('0',4-MCODLEN)+LTRIM(RTRIM(MI3))

PROCEDURE ITM1CODPRO
MCODLEN = LEN(LTRIM(RTRIM(MMI1)))
MMI1 = REPLICATE('0',2-MCODLEN)+LTRIM(RTRIM(MMI1))
MCODLEN = LEN(LTRIM(RTRIM(MMI2)))
MMI2 = REPLICATE('0',2-MCODLEN)+LTRIM(RTRIM(MMI2))
MCODLEN = LEN(LTRIM(RTRIM(MMI3)))
MMI3 = REPLICATE('0',4-MCODLEN)+LTRIM(RTRIM(MMI3))

PROCEDURE DSPSCRPRO
DEFINE WINDOW SCR FROM INT((SROWS()-23)/2), INT((SCOLS()-80)/2) TO INT((SROWS()-23)/2)+23, INT((SCOLS()-80)/2)+79 NOFLOAT NOCLOSE SHADOW NOMINIMIZE PANEL COLOR N/W 
ACTIVATE WINDOW SAME SCR

PROCEDURE SHW1LDGPRO
PUSH KEY
DEFINE WINDOW SHW1LDG FROM 5, 40 TO 20, 75 FOOTER '<Enter To Select / Esc To Exit>' DOUBLE
ACTIVATE WINDOW SHW1LDG
SELECT LDGRCOD
ON KEY LABEL F1 
ON KEY LABEL ENTER DO Slc1LdgPro
BROWSE FIELDS C1 :H = '  ', C2 :H = '  ', C3 :H = '   ', TITLE :H = 'Leadger Head Title' NOAPPEND NOEDIT NODELETE IN SHW1LDG
DEACTIVATE WINDOW SHW1LDG
ON KEY LABEL ENTER 
POP KEY
RETURN

PROCEDURE SLC1LDGPRO
MSC3 = C3
SHOW GETS
CLEAR GETS
DEACTIVATE WINDOW SHW1LDG
ON KEY LABEL ENTER 
RETURN

PROCEDURE LDGBALPRO
IF MMB_CR_DR='  '
   IF CR_DR='DR'
      MB_AMOUNT = AMOUNT
      MB_CR_DR = 'DR'
   ELSE
      MB_AMOUNT = AMOUNT
      MB_CR_DR = 'CR'
   ENDIF
ENDIF
IF MMB_CR_DR='DR'
   IF CR_DR='DR'
      MB_AMOUNT = MMB_AMOUNT+AMOUNT
      MB_CR_DR = 'DR'
   ELSE
      MB_AMOUNT = MMB_AMOUNT-AMOUNT
      IF MB_AMOUNT>0
         MB_CR_DR = 'DR'
      ELSE
         MB_CR_DR = 'CR'
      ENDIF
   ENDIF
ENDIF
IF MMB_CR_DR='CR'
   IF CR_DR='CR'
      MB_AMOUNT = MMB_AMOUNT+AMOUNT
      MB_CR_DR = 'CR'
   ELSE
      MB_AMOUNT = MMB_AMOUNT-AMOUNT
      IF MB_AMOUNT>0
         MB_CR_DR = 'CR'
      ELSE
         MB_CR_DR = 'DR'
      ENDIF
   ENDIF
ENDIF

PROCEDURE SHWCTYPRO
PUSH KEY
DEFINE WINDOW SHWCTY FROM 5, 40 TO 20, 75 FOOTER '<Enter To Select / Esc To Exit>' DOUBLE
ACTIVATE WINDOW SHWCTY
SELECT CITY
ON KEY LABEL F1 
ON KEY LABEL ENTER DO SlcCtyPro
BROWSE FIELDS C_CODE :H = '     ', NAME :H = 'City Name' NOAPPEND NOEDIT NODELETE IN SHWCTY
DEACTIVATE WINDOW SHWCTY
ON KEY LABEL ENTER 
POP KEY
RETURN

PROCEDURE SLCCTYPRO
MC_CODE = C_CODE
SHOW GETS
CLEAR GETS
DEACTIVATE WINDOW SHWCTY
ON KEY LABEL ENTER 
RETURN
* 
* 
* REINDEX.FXP 
* ----------- 
*
DEFINE WINDOW RINDEX FROM INT((SROWS()-15)/1), INT((SCOLS()-68)/1) TO INT((SROWS()-15)/1)+6, INT((SCOLS()-68)/1)+50 NOFLOAT NOCLOSE SHADOW TITLE 'RE-INDEX PROGRAMME' NOMINIMIZE PANEL COLOR SCHEME 1
CLOSE DATABASES
WAIT WINDOW 'Make Sure No Body Using This Program On Any Terminal'
WAIT WINDOW NOWAIT 'Re-Indexing in progress, Please Dont Distrub'
ACTIVATE WINDOW SAME RINDEX
SET EXCLUSIVE ON
DBF1 = ('Ldgrcod.Dbf')
DBF2 = ('Tran.Dbf')
DBF3 = ('Item.Dbf')
DBF4 = ('ITran.Dbf')
DBF5 = ('DType.Dbf')
DBF6 = ('Pass.Dbf')
DBF7 = ('City.Dbf')
@ 3, 4 SAY '²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²²'
USE &DBF1
@1,10 SAY FULLPATH('&DBF1')
PACK
REINDEX
READ TIMEOUT 0.10
@ 3, 4 SAY 'ÛÛÛÛÛÛÛÛ'
@ 1, 1 CLEAR TO 1, 65
USE &DBF2
@1,10 SAY FULLPATH('&DBF2')
PACK
REINDEX
READ TIMEOUT 0.20
@ 3, 12 SAY 'ÛÛÛÛÛÛÛÛ'
@ 1, 1 CLEAR TO 1, 65
USE &DBF3
@1,10 SAY FULLPATH('&DBF3')
PACK
REINDEX
READ TIMEOUT 0.30
@ 3, 20 SAY 'ÛÛÛÛÛÛÛÛ'
@ 1, 1 CLEAR TO 1, 65
USE &DBF4
@1,10 SAY FULLPATH('&DBF4')
PACK
REINDEX
READ TIMEOUT 0.40
@ 3, 28 SAY 'ÛÛÛÛÛÛÛÛ'
@ 1, 1 CLEAR TO 1, 65
USE &DBF5
PACK
REINDEX
USE &DBF6
@1,10 SAY FULLPATH('&DBF6')
PACK
REINDEX
READ TIMEOUT 0.40
@ 3, 36 SAY 'ÛÛÛÛÛÛÛÛ'
@ 1, 1 CLEAR TO 1, 65
USE &DBF7
@1,10 SAY FULLPATH('&DBF7')
PACK
REINDEX
RELEASE WINDOW RINDEX
WAIT WINDOW NOWAIT 'Reindex Process Completed'
SET EXCLUSIVE OFF
RETURN
* 
* 
* TRAN.FXP 
* -------- 
*
SELECT 1
USE SHARED Tran ALIAS TRAN
SELECT 2
USE SHARED LdgrCod ALIAS LDGRCOD
SELECT 3
USE SHARED ITran ALIAS ITRAN
SELECT 4
USE SHARED DType ALIAS DTYPE
DEFINE WINDOW TRAN FROM INT((SROWS()-25)/1), INT((SCOLS()-80)/1) TO INT((SROWS()-25)/1)+24, INT((SCOLS()-80)/1)+79 NOFLOAT NOCLOSE SHADOW TITLE ' DAILY TRANSACTION ' NOMINIMIZE PANEL COLOR SCHEME 1
ACTIVATE WINDOW SAME TRAN
MDATE = CTOD('  /  /    ')
MC1 = 0
MC2 = 0
MC3 = 0
MDISC = SPACE(30)
MAMOUNT = 0
MDOC_NO = SPACE(6)
MDOC_TYPE = 0
MCR_DR = SPACE(1)
MLDGR_BAL = 0
MSTATUS = SPACE(2)
MLINE = 3
MANS = SPACE(1)
DO WHILE .T.
   DO DSPHEDPRO
   @ MLINE, 2 GET MDATE PICTURE ('99/99/9999')
   READ
   IF READKEY()=12 .OR. READKEY()=268
      CLOSE DATABASES
      RELEASE WINDOW TRAN
      RETURN
      EXIT
   ENDIF
   @ 22, 1 CLEAR TO 22, 78
   @ 22, 22 SAY 'Press F1 to see Document Type Code List' COLOR GR+/N 
   ON KEY LABEL F1 DO ShwDtyPro In Proc1
   @ MLINE, 13 GET MDOC_TYPE PICTURE '9'
   READ
   IF READKEY()=12 .OR. READKEY()=268
      LOOP
   ENDIF
   SELECT DTYPE
   SET ORDER TO Doc_Type
   SEEK MDOC_TYPE
   IF  .NOT. FOUND()
      WAIT WINDOW 'Data Type Not Exist'
      MDOC_TYPE = 0
      LOOP
   ENDIF
   @ MLINE, 15 GET MDOC_NO PICTURE '@!' VALID MDOC_NO<>SPACE(6) ERROR 'Document Number Can Not Be Blank'
   READ
   IF READKEY()=12 .OR. READKEY()=268
      LOOP
   ENDIF
   SELECT TRAN
   SET ORDER TO Type_No
   SEEK STR(MDOC_TYPE,1)+MDOC_NO
   IF FOUND()
      WAIT WINDOW 'Document Number Already Exist'
      MDOC_TYPE = 0
      MDOC_NO = SPACE(6)
      LOOP
   ENDIF
   DO WHILE .T.
      SELECT LDGRCOD
      SET ORDER TO Title
      @ 22, 1 CLEAR TO 22, 62
      @ 22, 27 SAY 'Press F1 to see Party Code List' COLOR GR+/N 
      ON KEY LABEL F1 DO ShwLdgPro In Proc1
      @ MLINE, 22 SAY '  -  -   '
      @ MLINE, 22 GET MC1 PICTURE '@2K 99' VALID MC1<>0 ERROR 'Ledger Head Code Can Not Be Blank - Press Esc To Exit'
      @ MLINE, 25 GET MC2 PICTURE '@2K 99' VALID MC2<>0 ERROR 'Ledger Head Code Can Not Be Blank - Press Esc To Exit'
      @ MLINE, 28 GET MC3 PICTURE '@3K 999' VALID MC3<>0 ERROR 'Ledger Head Code Can Not Be Blank - Press Esc To Exit'
      READ
      SET ORDER TO C123
      SEEK STR(MC1,2)+STR(MC2,2)+STR(MC3,3)
      IF  .NOT. FOUND()
         WAIT WINDOW 'Leadger Code Not Exist'
         MC1 = 0
         MC2 = 0
         MC3 = 0
         LOOP
      ELSE
         @ MLINE+1, 22 SAY TITLE
         EXIT
      ENDIF
   ENDDO
   IF READKEY()=12 .OR. READKEY()=268
      MDATE = CTOD('  /  /    ')
      MC1 = 0
      MC2 = 0
      MC3 = 0
      MDOC_NO = SPACE(6)
      MDOC_TYPE = 0
      LOOP
   ENDIF
   @ MLINE, 32 GET MDISC PICTURE '@!'
   @ MLINE, 63 GET MCR_DR PICTURE '@!' VALID MCR_DR='C' .OR. MCR_DR='D' ERROR 'C=Credit Or D=Debit'
   @ MLINE, 67 GET MAMOUNT PICTURE '99999999.99'
   READ
   MANS = 'N'
   @ MLINE, 0 GET MANS PICTURE '@!' VALID MANS='N' .OR. MANS='C' ERROR 'N=Next  C=Change'
   READ
   IF MANS='C'
      LOOP
   ELSE
      DO SAVDATPRO
      SELECT TRAN
      MC1 = 0
      MC2 = 0
      MC3 = 0
      MDISC = SPACE(30)
      MAMOUNT = 0
      MDOC_NO = SPACE(6)
      MDOC_TYPE = 0
      MCR_DR = SPACE(1)
      MLDGR_BAL = 0
      MSTATUS = SPACE(2)
      MANS = SPACE(1)
   ENDIF
   MLINE = MLINE+2
   IF MLINE>19
      @ 3, 0 CLEAR TO 21, 78
      MLINE = 3
   ENDIF
ENDDO

PROCEDURE DSPHEDPRO
@ 1, 2 SAY 'DATE'
@ 1, 14 SAY 'DOC #'
@ 1, 22 SAY 'PARTY CODE'
@ 1, 33 SAY 'DISCRIPTION'
@ 1, 61 SAY 'C/D'
@ 1, 66 SAY 'AMOUNT'

PROCEDURE SAVDATPRO
SELECT TRAN
APPEND BLANK
REPLACE DATE WITH MDATE
REPLACE C1 WITH MC1
REPLACE C2 WITH MC2
REPLACE C3 WITH MC3
REPLACE DOC_NO WITH MDOC_NO
REPLACE DOC_TYPE WITH MDOC_TYPE
REPLACE CR_DR WITH MCR_DR+'R'
REPLACE AMOUNT WITH MAMOUNT
REPLACE DISC WITH MDISC
FLUSH
SELECT LDGRCOD
IF STATUS='  '
   IF MCR_DR='D'
      MLDGR_BAL = MAMOUNT
      MSTATUS = 'DR'
   ELSE
      MLDGR_BAL = MAMOUNT
      MSTATUS = 'CR'
   ENDIF
ENDIF
IF STATUS='DR'
   IF MCR_DR='D'
      MLDGR_BAL = LDGR_BAL+MAMOUNT
      MSTATUS = 'DR'
   ELSE
      MLDGR_BAL = LDGR_BAL-MAMOUNT
      IF MLDGR_BAL>0
         MSTATUS = 'DR'
      ELSE
         MSTATUS = 'CR'
      ENDIF
   ENDIF
ENDIF
IF STATUS='CR'
   IF MCR_DR='C'
      MLDGR_BAL = LDGR_BAL+MAMOUNT
      MSTATUS = 'CR'
   ELSE
      MLDGR_BAL = LDGR_BAL-MAMOUNT
      IF MLDGR_BAL>0
         MSTATUS = 'CR'
      ELSE
         MSTATUS = 'DR'
      ENDIF
   ENDIF
ENDIF
REPLACE LDGR_BAL WITH ABS(MLDGR_BAL)
REPLACE STATUS WITH MSTATUS
FLUSH
* 
* 
* R-LDCOD.FXP 
* ----------- 
*
CLOSE DATABASES
SELECT 1
USE SHARED Ldgrcod ALIAS LDGRCOD
SELECT 2
USE SHARED City ALIAS CITY
SET ORDER TO C_Code
MC1 = SPACE(2)
MC2 = SPACE(2)
MC3 = SPACE(3)
MTITL = SPACE(40)
MCN = SPACE(1)
MPS = SPACE(1)
MPAGE = 1
MLINE = 0
MCQ = SPACE(1)
MSR_NO = 0
DEFINE WINDOW RLDCOD FROM INT((SROWS()-17)/1), INT((SCOLS()-68)/1) TO INT((SROWS()-17)/1)+9, INT((SCOLS()-68)/1)+50 NOFLOAT NOCLOSE SHADOW NOMINIMIZE PANEL COLOR R/G 
ACTIVATE WINDOW SAME RLDCOD
SELECT LDGRCOD
CLEAR
@ 4, 5 SAY 'Party Code Wise / Party Name Wise' COLOR W/N 
@ 4, 40 GET MCN PICTURE '@!' VALID MCN='C' .OR. MCN='N' ERROR 'Code / Name (C/N)' COLOR W/N 
READ
CLEAR
@ 3, 13 SAY 'Report in Processing'
@ 5, 13 SAY "Please Don't Distrub"
IF MCN='C'
   SET ORDER TO C123
   MTITLE = 'Code Wise List Of All Parties'
ELSE
   SET ORDER TO Title
   MTITLE = 'Name Wise List Of All Parties'
ENDIF
GOTO TOP
CLEAR
@ 4, 5 SAY 'Report To Printer Or Screen (P/S)' COLOR W/N 
@ 4, 40 GET MPS PICTURE '@!' VALID MPS='P' .OR. MPS='S' ERROR 'Printer Or Screen (P/S)' COLOR W/N 
READ
SET RELATION TO C_CODE INTO CITY ADDITIVE
IF MPS='P'
   DO REPPRTPRO
ELSE
   DO REPSCRPRO
ENDIF
RELEASE WINDOW RLDCOD
SET PRINTER OFF
SET DEVICE TO SCREEN
CLOSE DATABASES
RETURN

PROCEDURE REPPRTPRO
SET PRINTER ON
SET DEVICE TO PRINTER
MLINE = 6
@ 1, 1 SAY MCOMP
@ 1, 67 SAY 'Page: '+STR(MPAGE,2)
@ 2, 1 SAY MTITLE
@ 2, 62 SAY 'Date: '+DTOC(DATE())
@ 3, 0 SAY REPLICATE('-',80)
@ 4, 0 SAY 'SERIAL    CODE          NAME                          CURRENT     CITY'
@ 5, 0 SAY 'NUMBER                                                BALANCE'
@ 6, 0 SAY REPLICATE('-',80)
DO WHILE  .NOT. EOF()
   MLINE = MLINE+1
   MSR_NO = MSR_NO+1
   IF MCN='C'
      IF STR(C1,2)<>MC1
         MLINE = MLINE+1
      ENDIF
   ENDIF
   MC1 = STR(C1,2)
   MC2 = STR(C2,2)
   MC3 = STR(C3,3)
   DO LEDCODPRO IN Proc1
   @ MLINE, 0 SAY STR(MSR_NO,4)+' '+MC1+'-'+MC2+'-'+MC3+' '+TITLE
   @ MLINE, 47 SAY LDGR_BAL PICTURE '999,999,999.99'
   @ MLINE, 62 SAY STATUS
   @ MLINE, 65 SAY C_CODE+' '+LEFT(CITY.NAME,8)
   SKIP
   IF MLINE>58
      EJECT
      MPAGE = MPAGE+1
      MLINE = 6
      @ 1, 1 SAY MCOMP
      @ 1, 67 SAY 'Page: '+STR(MPAGE,2)
      @ 2, 1 SAY MTITLE
      @ 2, 62 SAY 'Date: '+DTOC(DATE())
      @ 3, 0 SAY REPLICATE('-',80)
      @ 4, 0 SAY 'SERIAL    CODE          NAME                          CURRENT     CITY'
      @ 5, 0 SAY 'NUMBER                                                BALANCE'
      @ 6, 0 SAY REPLICATE('-',80)
   ENDIF
ENDDO
MLINE = MLINE+1
@ MLINE, 0 SAY REPLICATE('-',77)
MLINE = MLINE+1
@ MLINE, 65 SAY 'End Of Report'
EJECT
RETURN

PROCEDURE REPSCRPRO
DO DSPSCRPRO IN Proc1
MLINE = 6
@ 1, 1 SAY MCOMP
@ 2, 1 SAY MTITLE
@ 2, 62 SAY 'Date: '+DTOC(DATE())
@ 3, 0 SAY REPLICATE('-',78)
@ 4, 0 SAY 'SERIAL    CODE          NAME                          CURRENT     CITY'
@ 5, 0 SAY 'NUMBER                                                BALANCE'
@ 6, 0 SAY REPLICATE('-',78)
DO WHILE  .NOT. EOF()
   MLINE = MLINE+1
   MSR_NO = MSR_NO+1
   IF MCN='C'
      IF STR(C1,2)<>MC1
         MLINE = MLINE+1
      ENDIF
   ENDIF
   MC1 = STR(C1,2)
   MC2 = STR(C2,2)
   MC3 = STR(C3,3)
   DO LEDCODPRO IN Proc1
   @ MLINE, 0 SAY STR(MSR_NO,4)+' '+MC1+'-'+MC2+'-'+MC3+' '+TITLE
   @ MLINE, 47 SAY LDGR_BAL PICTURE '999,999,999.99'
   @ MLINE, 62 SAY STATUS
   @ MLINE, 65 SAY C_CODE+' '+LEFT(CITY.NAME,8)
   SKIP
   IF MLINE>18
      @ 21, 28 SAY 'Continue Or Quit C/Q'
      @ 21, 50 GET MCQ PICTURE '@!' VALID MCQ='C' .OR. MCQ='Q' ERROR 'Continue Or Quit (C/Q)'
      READ
      IF MCQ='Q'
         RELEASE WINDOW SCR
         RETURN
      ENDIF
      @ 7, 0 CLEAR TO 21, 78
      MLINE = 6
   ENDIF
ENDDO
WAIT WINDOW 'End of Report.....'
RELEASE WINDOW SCR
RETURN
* 
* 
* R-ITMCOD.FXP 
* ------------ 
*
CLOSE DATABASES
SELECT 1
USE SHARED Item ALIAS ITEM
MI1 = SPACE(2)
MI2 = SPACE(2)
MI3 = SPACE(4)
MCN = SPACE(1)
MPS = SPACE(1)
MPAGE = 1
MLINE = 0
MCQ = SPACE(1)
MSR_NO = 0
DEFINE WINDOW RITMCOD FROM INT((SROWS()-17)/1), INT((SCOLS()-68)/1) TO INT((SROWS()-17)/1)+9, INT((SCOLS()-68)/1)+50 NOFLOAT NOCLOSE SHADOW NOMINIMIZE PANEL COLOR R/G 
ACTIVATE WINDOW SAME RITMCOD
SELECT ITEM
CLEAR
@ 4, 5 SAY 'Item Code Wise / Item Name Wise' COLOR W/N 
@ 4, 40 GET MCN PICTURE '@!' VALID MCN='C' .OR. MCN='N' ERROR 'Code / Name (C/N)' COLOR W/N 
READ
CLEAR
@ 3, 13 SAY 'Report in Processing'
@ 5, 13 SAY "Please Don't Distrub"
IF MCN='C'
   SET ORDER TO I123
   MTITLE = 'Code Wise List Of All Items'
ELSE
   SET ORDER TO Item
   MTITLE = 'Name Wise List Of All Items'
ENDIF
GOTO TOP
CLEAR
@ 4, 5 SAY 'Report To Printer Or Screen (P/S)' COLOR W/N 
@ 4, 40 GET MPS PICTURE '@!' VALID MPS='P' .OR. MPS='S' ERROR 'Printer Or Screen (P/S)' COLOR W/N 
READ
IF MPS='P'
   DO REPPRTPRO
ELSE
   DO REPSCRPRO
ENDIF
RELEASE WINDOW RITMCOD
SET PRINTER OFF
SET DEVICE TO SCREEN
CLOSE DATABASES
RETURN

PROCEDURE REPPRTPRO
SET PRINTER ON
SET DEVICE TO PRINTER
MLINE = 5
@ 1, 1 SAY MCOMP
@ 1, 67 SAY 'Page: '+STR(MPAGE,2)
@ 2, 1 SAY MTITLE
@ 2, 62 SAY 'Date: '+DTOC(DATE())
@ 3, 0 SAY REPLICATE('-',78)
@ 4, 0 SAY 'S.R#    CODE         NAME                             RATE  SALES TAX %'
@ 5, 0 SAY REPLICATE('-',78)
DO WHILE  .NOT. EOF()
   MLINE = MLINE+1
   MSR_NO = MSR_NO+1
   IF MCN='C'
      IF STR(I1,2)<>MI1
         MLINE = MLINE+1
      ENDIF
   ENDIF
   MI1 = STR(I1,2)
   MI2 = STR(I2,2)
   MI3 = STR(I3,4)
   DO ITMCODPRO IN Proc1
   @ MLINE, 0 SAY STR(MSR_NO,4)+'  '+MI1+'-'+MI2+'-'+MI3+' '+ITEM+'     '+STR(RATE,4)+'   '+STR(STAX,2)
   SKIP
   IF MLINE>58
      EJECT
      MPAGE = MPAGE+1
      MLINE = 5
      @ 1, 1 SAY MCOMP
      @ 1, 67 SAY 'Page: '+STR(MPAGE,2)
      @ 2, 1 SAY MTITLE
      @ 2, 62 SAY 'Date: '+DTOC(DATE())
      @ 3, 0 SAY REPLICATE('-',78)
      @ 4, 0 SAY 'S.R#    CODE         NAME                             RATE  SALES TAX %'
      @ 5, 0 SAY REPLICATE('-',78)
   ENDIF
ENDDO
MLINE = MLINE+1
@ MLINE, 0 SAY REPLICATE('-',78)
MLINE = MLINE+1
@ MLINE, 65 SAY 'End Of Report'
EJECT
RETURN

PROCEDURE REPSCRPRO
DO DSPSCRPRO IN Proc1
MLINE = 5
@ 1, 1 SAY MCOMP
@ 2, 1 SAY MTITLE
@ 2, 62 SAY 'Date: '+DTOC(DATE())
@ 3, 0 SAY REPLICATE('-',78)
@ 4, 0 SAY 'S.R#    CODE         NAME                             RATE  SALES TAX %'
@ 5, 0 SAY REPLICATE('-',78)
DO WHILE  .NOT. EOF()
   MLINE = MLINE+1
   MSR_NO = MSR_NO+1
   IF MCN='C'
      IF STR(I1,2)<>MI1
         MLINE = MLINE+1
      ENDIF
   ENDIF
   MI1 = STR(I1,2)
   MI2 = STR(I2,2)
   MI3 = STR(I3,4)
   DO ITMCODPRO IN Proc1
   @ MLINE, 0 SAY STR(MSR_NO,4)+'  '+MI1+'-'+MI2+'-'+MI3+' '+ITEM+'     '+STR(RATE,6,2)+'   '+STR(STAX,2)
   SKIP
   IF MLINE>18
      @ 21, 28 SAY 'Continue Or Quit C/Q'
      @ 21, 50 GET MCQ PICTURE '@!' VALID MCQ='C' .OR. MCQ='Q' ERROR 'Continue Or Quit (C/Q)'
      READ
      IF MCQ='Q'
         RELEASE WINDOW SCR
         RETURN
      ENDIF
      @ 7, 0 CLEAR TO 21, 78
      MLINE = 6
   ENDIF
ENDDO
WAIT WINDOW 'End of Report.....'
RELEASE WINDOW SCR
RETURN
* 
* 
* R-LSTAT.FXP 
* ----------- 
*
CLOSE DATABASES
SELECT 1
USE SHARED Ldgrcod ALIAS LDGRCOD
SELECT 2
USE SHARED Tran ALIAS TRAN
MC1 = 0
MC2 = 0
MC3 = 0
MSC3 = 0
MMC1 = 0
MMC2 = 0
MMC3 = 0
MDATE = CTOD('  /  /    ')
MDTOT = 0
MCTOT = 0
MPAGE = 0
MLINE = 0
MPS = SPACE(1)
MCQ = SPACE(1)
MOPT = 0
DEFINE WINDOW RLSTAT FROM INT((SROWS()-17)/1), INT((SCOLS()-76)/1) TO INT((SROWS()-17)/1)+5, INT((SCOLS()-76)/1)+71 NOFLOAT NOCLOSE SHADOW NOMINIMIZE PANEL COLOR R/G 
ACTIVATE WINDOW SAME RLSTAT
SELECT LDGRCOD
SET ORDER TO C123
CLEAR
DO WHILE .T.
   @ 1, 1 GET MOPT SIZE 1, 12 FUNCTION '*H \<All;\<First Level;\<Second Level;\<Third Level;\<Cancel' COLOR SCHEME 19
   READ
   IF READKEY()=15 .OR. READKEY()=271
      EXIT
   ENDIF
ENDDO
DO CASE
   CASE MOPT=1
      SET FILTER TO LDGR_BAL>0
   CASE MOPT=2
      CLEAR
      @ 3, 17 SAY 'Press F1 to see Leadger Code List' COLOR GR+/N 
      ON KEY LABEL F1 DO ShwLdgPro In Proc1
      DO WHILE .T.
         @ 1, 15 SAY 'Enter First Level Code'
         @ 1, 47 GET MC1 PICTURE '@2K 99' VALID MC1<>0 ERROR 'Ledger Head Code Can Not Be Blank'
         READ
         SEEK STR(MC1,2)
         IF  .NOT. FOUND()
            WAIT WINDOW 'Leadger Code Not Exist'
            MC1 = 0
            LOOP
         ELSE
            EXIT
         ENDIF
      ENDDO
      SET FILTER TO C1=MC1 .AND. LDGR_BAL>0
   CASE MOPT=3
      CLEAR
      @ 3, 17 SAY 'Press F1 to see Leadger Code List' COLOR GR+/N 
      ON KEY LABEL F1 DO ShwLdgPro In Proc1
      DO WHILE .T.
         @ 1, 15 SAY 'Enter First & Second Level Code'
         @ 1, 47 GET MC1 PICTURE '@2K 99' VALID MC1<>0 ERROR 'Ledger Head Code Can Not Be Blank'
         @ 1, 49 SAY '-'
         @ 1, 50 GET MC2 PICTURE '@2K 99' VALID MC2<>0 ERROR 'Ledger Head Code Can Not Be Blank'
         READ
         SEEK STR(MC1,2)+STR(MC2,2)
         IF  .NOT. FOUND()
            WAIT WINDOW 'Leadger Code Not Exist'
            MC1 = 0
            MC2 = 0
            LOOP
         ELSE
            EXIT
         ENDIF
      ENDDO
      SET FILTER TO C1=MC1 .AND. C2=MC2 .AND. LDGR_BAL>0
   CASE MOPT=4
      CLEAR
      @ 3, 17 SAY 'Press F1 to see Leadger Code List' COLOR GR+/N 
      ON KEY LABEL F1 DO ShwLdgPro In Proc1
      DO WHILE .T.
         @ 1, 15 SAY 'Enter Leadger Code'
         @ 1, 47 SAY '  -  -   '
         @ 1, 47 GET MC1 PICTURE '@2K 99' VALID MC1<>0 ERROR 'Ledger Head Code Can Not Be Blank'
         @ 1, 50 GET MC2 PICTURE '@2K 99' VALID MC2<>0 ERROR 'Ledger Head Code Can Not Be Blank'
         @ 1, 53 GET MC3 PICTURE '@3K 999' VALID MC3<>0 ERROR 'Ledger Head Code Can Not Be Blank'
         READ
         SEEK STR(MC1,2)+STR(MC2,2)+STR(MC3,3)
         IF  .NOT. FOUND()
            WAIT WINDOW 'Leadger Code Not Exist'
            MC1 = 0
            MC2 = 0
            MC3 = 0
            LOOP
         ENDIF
         SET FILTER TO C1=MC1 .AND. C2=MC2
         DO WHILE .T.
            @ 3, 17 SAY 'Press F1 to see Leadger Code List' COLOR GR+/N 
            ON KEY LABEL F1 DO Shw1LdgPro In Proc1
            @ 2, 47 SAY '  -  -   '
            @ 2, 47 SAY MC1 PICTURE '@2K 99'
            @ 2, 50 SAY MC2 PICTURE '@2K 99'
            @ 2, 53 GET MSC3 PICTURE '@3K 999' VALID MC3<>0 ERROR 'Ledger Head Code Can Not Be Blank'
            READ
            SEEK STR(MC1,2)+STR(MC2,2)+STR(MSC3,3)
            IF  .NOT. FOUND()
               WAIT WINDOW 'Leadger Code Not Exist'
               MSC3 = 0
               LOOP
            ELSE
               EXIT
            ENDIF
         ENDDO
         EXIT
      ENDDO
      SET FILTER TO C1=MC1 .AND. C2=MC2 .AND. (C3>=MC3 .AND. C3<=MSC3) .AND. LDGR_BAL>0
   CASE MOPT=5
      CLOSE DATABASES
      RELEASE WINDOW RPSTAT
      RETURN
ENDCASE
CLEAR
@ 2, 12 SAY 'Report To Printer Or Screen (P/S)' COLOR W/N 
@ 2, 48 GET MPS PICTURE '@!' VALID MPS='P' .OR. MPS='S' ERROR 'Printer Or Screen (P/S)' COLOR W/N 
READ
CLEAR
@ 1, 25 SAY 'Report in Processing'
@ 3, 25 SAY "Please Don't Distrub"
SELECT TRAN
SET ORDER TO Date
GOTO BOTTOM
MDATE = DATE
SELECT LDGRCOD
SET ORDER TO C123
GOTO TOP
MTITLE = 'PRESENT LEDGER STATUS'
IF MPS='P'
   DO REPPRTPRO
ELSE
   DO REPSCRPRO
ENDIF
RELEASE WINDOW RLSTAT
SET PRINTER OFF
SET DEVICE TO SCREEN
CLOSE DATABASES
RETURN

PROCEDURE REPPRTPRO
SET PRINTER ON
SET DEVICE TO PRINTER
MPAGE = MPAGE+1
@ 0, 0 SAY CHR(18)
@ 0, 0 SAY CHR(14)
@ 0, 1 SAY MCOMP
@ 1, 0 SAY CHR(18)
@ 1, 0 SAY CHR(14)
@ 1, 1 SAY MTITLE
@ 2, 0 SAY CHR(18)
@ 2, 1 SAY 'As On  : '+DTOC(MDATE)
@ 2, 68 SAY 'Page # '+STR(MPAGE,4)
@ 3, 0 SAY REPLICATE('-',80)
@ 4, 0 SAY 'Party Code   Description                         Dr               Cr'
@ 5, 0 SAY REPLICATE('-',80)
MLINE = 6
SUM FOR STATUS='CR' LDGR_BAL TO MCTOT
SUM FOR STATUS='DR' LDGR_BAL TO MDTOT
@ MLINE, 0 SAY REPLICATE('-',80)
MLINE = MLINE+1
@ MLINE, 20 SAY 'Total'
@ MLINE, 44 SAY MDTOT PICTURE '999,999,999.99'
@ MLINE, 59 SAY MCTOT PICTURE '999,999,999.99'
MLINE = MLINE+1
@ MLINE, 0 SAY REPLICATE('-',80)
MLINE = MLINE+1
GOTO TOP
DO WHILE  .NOT. EOF()
   MMC1 = STR(C1,2)
   MMC2 = STR(C2,2)
   MMC3 = STR(C3,3)
   DO LED1CODPRO IN Proc1
   @ MLINE, 0 SAY MMC1+'-'+MMC2+'-'+MMC3+'  '+TITLE
   @ MLINE, 44 SAY IIF(STATUS='DR',(LDGR_BAL),'') PICTURE '999,999,999.99'
   @ MLINE, 59 SAY IIF(STATUS='CR',(LDGR_BAL),'') PICTURE '999,999,999.99'
   @ MLINE, 0 SAY REPLICATE('_',80)
   MLINE = MLINE+1
   SKIP
   IF MLINE>58
      EJECT
      MPAGE = MPAGE+1
      MLINE = 6
      @ 0, 0 SAY CHR(18)
      @ 0, 0 SAY CHR(14)
      @ 0, 1 SAY MCOMP
      @ 1, 0 SAY CHR(18)
      @ 1, 0 SAY CHR(14)
      @ 1, 1 SAY MTITLE
      @ 2, 0 SAY CHR(18)
      @ 2, 1 SAY 'As On  : '+DTOC(MDATE)
      @ 2, 68 SAY 'Page # '+STR(MPAGE,4)
      @ 3, 0 SAY REPLICATE('-',80)
      @ 4, 0 SAY 'Party Code   Description                         Dr               Cr'
      @ 5, 0 SAY REPLICATE('-',80)
   ENDIF
ENDDO
EJECT
RETURN

PROCEDURE REPSCRPRO
DO DSPSCRPRO IN Proc1
MLINE = 6
@ 0, 1 SAY MCOMP
@ 1, 1 SAY MTITLE
@ 2, 1 SAY 'As On :  '+DTOC(MDATE)
@ 3, 0 SAY REPLICATE('-',78)
@ 4, 0 SAY 'Party Code   Description                         Dr               Cr'
@ 5, 0 SAY REPLICATE('-',78)
SUM FOR STATUS='CR' LDGR_BAL TO MCTOT
SUM FOR STATUS='DR' LDGR_BAL TO MDTOT
@ MLINE, 0 SAY REPLICATE('-',78)
MLINE = MLINE+1
@ MLINE, 20 SAY 'Total'
@ MLINE, 44 SAY MDTOT PICTURE '999,999,999.99'
@ MLINE, 59 SAY MCTOT PICTURE '999,999,999.99'
MLINE = MLINE+1
@ MLINE, 0 SAY REPLICATE('-',78)
MLINE = MLINE+1
GOTO TOP
DO WHILE  .NOT. EOF()
   MMC1 = STR(C1,2)
   MMC2 = STR(C2,2)
   MMC3 = STR(C3,3)
   DO LED1CODPRO IN Proc1
   @ MLINE, 0 SAY MMC1+'-'+MMC2+'-'+MMC3+'  '+TITLE
   @ MLINE, 44 SAY IIF(STATUS='DR',(LDGR_BAL),'') PICTURE '999,999,999.99'
   @ MLINE, 59 SAY IIF(STATUS='CR',(LDGR_BAL),'') PICTURE '999,999,999.99'
   MLINE = MLINE+1
   SKIP
   IF MLINE>18
      @ 21, 28 SAY 'Continue Or Quit C/Q'
      @ 21, 50 GET MCQ PICTURE '@!' VALID MCQ='C' .OR. MCQ='Q' ERROR 'Continue Or Quit (C/Q)'
      READ
      IF MCQ='Q'
         RELEASE WINDOW SCR
         RETURN
      ENDIF
      @ 6, 0 CLEAR TO 21, 78
      MLINE = 6
   ENDIF
ENDDO
MLINE = MLINE+1
@ MLINE, 0 SAY REPLICATE('-',78)
@ 21, 28 SAY 'Quit Only (Q)'
@ 21, 50 GET MCQ PICTURE '@!' VALID MCQ='Q' ERROR 'Quit Only (Q)'
READ
RELEASE WINDOW SCR
RETURN
* 
* 
* R-LED.FXP 
* --------- 
*
CLOSE DATABASES
SELECT 1
USE SHARED Tran ALIAS TRAN
SELECT 2
USE SHARED LdgrCod ALIAS LDGRCOD
TMP = SYS(3)
CREATE DBF (TMP) ( C1 N ( 2 ), C2 N ( 2 ), C3 N ( 3 ), DATE D ( 8 ), DOC_TYPE N ( 1 ), DOC_NO C ( 6 ), CR_DR C ( 2 ), AMOUNT N ( 12, 2 ), DISC C ( 30 ), B_AMOUNT N ( 12, 2 ), B_CR_DR C ( 2 ) )
SELECT 3
USE EXCLUSIVE (TMP) ALIAS TMP
SELECT 4
USE SHARED DType ALIAS DTYPE
SET ORDER TO Doc_Type
MPAGE = 0
MLINE = 0
MDATE = CTOD('  /  /    ')
MSDATE = CTOD('  /  /    ')
MEDATE = CTOD('  /  /    ')
MC1 = 0
MC2 = 0
MC3 = 0
MB_AMOUNT = 0
MB_CR_DR = SPACE(2)
MOPBAL = 0
MOCR_DR = SPACE(2)
MDTOT = 0
MCTOT = 0
MMB_AMOUNT = 0
MMB_CR_DR = SPACE(2)
MPS = SPACE(1)
MCQ = SPACE(1)
MOBQ = SPACE(1)
DEFINE WINDOW RLED FROM INT((SROWS()-17)/1), INT((SCOLS()-68)/1) TO INT((SROWS()-17)/1)+9, INT((SCOLS()-68)/1)+50 NOFLOAT NOCLOSE SHADOW NOMINIMIZE PANEL COLOR R/G 
ACTIVATE WINDOW SAME RLED
CLEAR
DO WHILE .T.
   @ 1, 5 SAY 'Date From:' COLOR W/N 
   @ 3, 5 SAY 'Date To:' COLOR W/N 
   @ 5, 5 SAY 'Leadger Code:' COLOR W/N 
   @ 1, 30 GET MSDATE PICTURE ('99/99/9999')
   @ 3, 30 GET MEDATE PICTURE ('99/99/9999')
   READ
   IF READKEY()=12 .OR. READKEY()=268
      CLOSE DATABASES
      RELEASE WINDOW RLED
      DELETE FILE TMP+'.Dbf'
      DELETE FILE TMP+'.Cdx'
      RETURN
      EXIT
   ENDIF
   SELECT TRAN
   SET ORDER TO Date
   SEEK MSDATE
   IF  .NOT. FOUND()
      WAIT WINDOW 'Date Not Exist'
      MSDATE = CTOD('  /  /    ')
      LOOP
   ENDIF
   SELECT LDGRCOD
   SET ORDER TO Title
   @ 7, 8 SAY 'Press F1 to see Party Code List' COLOR GR+/N 
   ON KEY LABEL F1 DO ShwLdgPro In Proc1
   @ 5, 30 SAY '  -  -   '
   @ 5, 30 GET MC1 PICTURE '@2K 99' VALID MC1<>0 ERROR 'Ledger Head Code Can Not Be Blank - Press Esc To Exit'
   @ 5, 33 GET MC2 PICTURE '@2K 99' VALID MC2<>0 ERROR 'Ledger Head Code Can Not Be Blank - Press Esc To Exit'
   @ 5, 36 GET MC3 PICTURE '@3K 999' VALID MC3<>0 ERROR 'Ledger Head Code Can Not Be Blank - Press Esc To Exit'
   READ
   SET ORDER TO C123
   SEEK STR(MC1,2)+STR(MC2,2)+STR(MC3,3)
   IF  .NOT. FOUND()
      WAIT WINDOW 'Leadger Code Not Exist'
      MC1 = 0
      MC2 = 0
      MC3 = 0
      LOOP
   ELSE
      EXIT
   ENDIF
ENDDO
CLEAR
@ 4, 5 SAY 'Report To Printer Or Screen (P/S)' COLOR W/N 
@ 4, 40 GET MPS PICTURE '@!' VALID MPS='P' .OR. MPS='S' ERROR 'Printer Or Screen (P/S)' COLOR W/N 
READ
MOBQ = 'Y'
CLEAR
@ 3, 13 SAY 'Report in Processing'
@ 5, 13 SAY "Please Don't Distrub"
SELECT TMP
APPEND FROM Tran FOR C1=MC1 .AND. C2=MC2 .AND. C3=MC3
INDEX ON DTOS(DATE)+STR(DOC_TYPE,1)+DOC_NO TAG DDD_NO
SET ORDER TO DDD_No
GOTO TOP
DO WHILE  .NOT. EOF()
   DO LDGBALPRO IN Proc1
   REPLACE B_AMOUNT WITH ABS(MB_AMOUNT)
   REPLACE B_CR_DR WITH MB_CR_DR
   FLUSH
   MMB_CR_DR = B_CR_DR
   MMB_AMOUNT = B_AMOUNT
   MB_AMOUNT = 0
   SKIP
ENDDO
SET ORDER TO DDD_No
GOTO TOP
IF DATE>=MSDATE
   IF DOC_TYPE=0
      REPLACE AMOUNT WITH 0
      REPLACE CR_DR WITH '  '
   ENDIF
   MOBQ = 'N'
ENDIF
SET ORDER TO DDD_No
GOTO TOP
IF MSDATE>DATE
   MDATE = MSDATE
   DO WHILE MDATE>DATE
      IF EOF()
         EXIT
      ENDIF
      SKIP
   ENDDO
   SKIP -1
   MOPBAL = B_AMOUNT
   MOCR_DR = B_CR_DR
ENDIF
GOTO TOP
SET FILTER TO DATE>=MSDATE .AND. DATE<=MEDATE
SET RELATION TO DOC_TYPE INTO DTYPE ADDITIVE
GOTO TOP
IF MPS='P'
   DO REPPRTPRO
ELSE
   DO REPSCRPRO
ENDIF
RELEASE WINDOW RLED
SET PRINTER OFF
SET DEVICE TO SCREEN
CLOSE DATABASES
DELETE FILE TMP+'.Dbf'
DELETE FILE TMP+'.Cdx'
RETURN

PROCEDURE REPPRTPRO
SET PRINTER ON
SET DEVICE TO PRINTER
MPAGE = MPAGE+1
@ 0, 0 SAY CHR(18)
@ 0, 0 SAY CHR(14)
@ 0, 1 SAY MCOMP
@ 1, 0 SAY CHR(18)
@ 1, 1 SAY 'LEDGER FROM: '+DTOC(MSDATE)+'  TO  '+DTOC(MEDATE)
@ 2, 0 SAY CHR(18)
@ 2, 1 SAY 'Date :'+DTOC(DATE())+'           '+'Page# '+STR(MPAGE,4)
MMC1 = STR(C1,2)
MMC2 = STR(C2,2)
MMC3 = STR(C3,3)
DO LED1CODPRO IN Proc1
@ 3, 0 SAY 'ACCOUNT CODE : '+MMC1+'-'+MMC2+'-'+MMC3+'  '+'TITLE OF ACCOUNT : '+LDGRCOD.TITLE
@ 4, 0 SAY CHR(15)
@ 4, 0 SAY REPLICATE('-',137)
@ 5, 0 SAY 'DATE     NO            DESCRIPTION                               DEBIT             CREDIT            BALANCE'
@ 6, 0 SAY REPLICATE('-',137)
MLINE = 8
IF MOBQ='Y'
   @ MLINE, 23 SAY 'Opening Balance'
   @ MLINE, 95 SAY MOPBAL PICTURE '999,999,999.99'
   @ MLINE, 110 SAY MOCR_DR
   MLINE = MLINE+1
ENDIF
DO WHILE  .NOT. EOF()
   @ MLINE, 0 SAY DTOC(DATE)+'   '+DTYPE.TYPE1+'-'+DOC_NO+'   '+DISC
   @ MLINE, 59 SAY IIF(CR_DR='DR',(AMOUNT),'') PICTURE '999,999,999.99'
   @ MLINE, 77 SAY IIF(CR_DR='CR',(AMOUNT),'') PICTURE '999,999,999.99'
   @ MLINE, 95 SAY B_AMOUNT PICTURE '999,999,999.99'
   @ MLINE, 110 SAY B_CR_DR
   MLINE = MLINE+1
   IF CR_DR='CR'
      MCTOT = MCTOT+AMOUNT
   ELSE
      MDTOT = MDTOT+AMOUNT
   ENDIF
   MMB_AMOUNT = B_AMOUNT
   MMB_CR_DR = B_CR_DR
   SKIP
   IF MLINE>59
      EJECT
      MPAGE = MPAGE+1
      @ 0, 0 SAY CHR(18)
      @ 0, 0 SAY CHR(14)
      @ 0, 1 SAY MCOMP
      @ 1, 0 SAY CHR(18)
      @ 1, 1 SAY 'LEDGER FROM: '+DTOC(MSDATE)+'  TO  '+DTOC(MEDATE)
      @ 2, 0 SAY CHR(18)
      @ 2, 1 SAY 'Date :'+DTOC(DATE())+'           '+'Page# '+STR(MPAGE,4)
      MMC1 = STR(C1,2)
      MMC2 = STR(C2,2)
      MMC3 = STR(C3,3)
      DO LED1CODPRO IN Proc1
      @ 3, 0 SAY 'ACCOUNT CODE : '+MMC1+'-'+MMC2+'-'+MMC3+'  '+'TITLE OF ACCOUNT : '+LDGRCOD.TITLE
      @ 4, 0 SAY CHR(15)
      @ 4, 0 SAY REPLICATE('-',137)
      @ 5, 0 SAY 'DATE     NO            DESCRIPTION                               DEBIT             CREDIT            BALANCE'
      @ 6, 0 SAY REPLICATE('-',137)
      MLINE = 8
   ENDIF
ENDDO
MLINE = MLINE+1
@ MLINE, 45 SAY REPLICATE('-',92)
MLINE = MLINE+1
@ MLINE, 48 SAY 'Total'
@ MLINE, 59 SAY MDTOT PICTURE '999,999,999.99'
@ MLINE, 77 SAY MCTOT PICTURE '999,999,999.99'
@ MLINE, 95 SAY MMB_AMOUNT PICTURE '999,999,999.99'
@ MLINE, 110 SAY MMB_CR_DR
MLINE = MLINE+1
@ MLINE, 45 SAY REPLICATE('-',92)
EJECT
RETURN

PROCEDURE REPSCRPRO
DO DSPSCRPRO IN Proc1
MLINE = 8
MMB_AMOUNT = 0
MMB_CR_DR = SPACE(2)
@ 0, 1 SAY MCOMP
@ 1, 1 SAY 'LEDGER FROM: '+DTOC(MSDATE)+'  TO  '+DTOC(MEDATE)
MMC1 = STR(C1,2)
MMC2 = STR(C2,2)
MMC3 = STR(C3,3)
DO LED1CODPRO IN Proc1
@ 3, 1 SAY 'ACCOUNT CODE : '+MMC1+'-'+MMC2+'-'+MMC3+'  '+'TITLE OF ACCOUNT : '+LDGRCOD.TITLE
@ 4, 0 SAY REPLICATE('-',78)
@ 5, 0 SAY 'DATE         NO        DESCRIPTION           DEBIT        CREDIT       BALANCE'
@ 6, 0 SAY REPLICATE('-',78)
IF MOBQ='Y'
   @ MLINE, 19 SAY 'Opening Balance'
   @ MLINE, 63 SAY MOPBAL PICTURE '9,999,999.99'
   @ MLINE, 76 SAY MOCR_DR
   MLINE = MLINE+1
ENDIF
DO WHILE  .NOT. EOF()
   @ MLINE, 0 SAY DTOC(DATE)+' '+DTYPE.TYPE1+'-'+DOC_NO+' '+LEFT(DISC,17)
   @ MLINE, 37 SAY IIF(CR_DR='DR',(AMOUNT),'') PICTURE '9,999,999.99'
   @ MLINE, 51 SAY IIF(CR_DR='CR',AMOUNT,' ') PICTURE '9,999,999.99'
   @ MLINE, 63 SAY B_AMOUNT PICTURE '9,999,999.99'
   @ MLINE, 76 SAY B_CR_DR
   MLINE = MLINE+1
   IF CR_DR='CR'
      MCTOT = MCTOT+AMOUNT
   ELSE
      MDTOT = MDTOT+AMOUNT
   ENDIF
   MMB_AMOUNT = B_AMOUNT
   MMB_CR_DR = B_CR_DR
   SKIP
   IF MLINE>18
      @ 21, 28 SAY 'Continue Or Quit C/Q'
      @ 21, 50 GET MCQ PICTURE '@!' VALID MCQ='C' .OR. MCQ='Q' ERROR 'Continue Or Quit (C/Q)'
      READ
      IF MCQ='Q'
         RELEASE WINDOW SCR
         RETURN
      ENDIF
      @ 8, 0 CLEAR TO 21, 78
      MLINE = 8
   ENDIF
ENDDO
MLINE = MLINE+1
@ MLINE, 26 SAY REPLICATE('-',52)
MLINE = MLINE+1
@ MLINE, 28 SAY 'Total'
@ MLINE, 37 SAY MDTOT PICTURE '9,999,999.99'
@ MLINE, 51 SAY MCTOT PICTURE '9,999,999.99'
@ MLINE, 63 SAY MMB_AMOUNT PICTURE '9,999,999.99'
@ MLINE, 76 SAY MMB_CR_DR
MLINE = MLINE+1
@ MLINE, 26 SAY REPLICATE('-',52)
@ 21, 28 SAY 'Quit Only (Q)'
@ 21, 50 GET MCQ PICTURE '@!' VALID MCQ='Q' ERROR 'Quit Only (Q)'
READ
RELEASE WINDOW SCR
RETURN
* 
* 
* RD-INVO.FXP 
* ----------- 
*
CLOSE DATABASES
SELECT 1
USE SHARED ITran ALIAS ITRAN
SELECT 2
USE SHARED LdgrCod ALIAS LDGRCOD
SET ORDER TO C123
SELECT 3
USE SHARED Item ALIAS ITEM
SET ORDER TO I123
SELECT 4
USE SHARED DType ALIAS DTYPE
SET ORDER TO Doc_Type
MDOC_TYPE = 0
MDOC_NO = SPACE(6)
MAMOUNT = 0
MPAGE = 0
MLINE = 0
MSDATE = CTOD('  /  /    ')
MEDATE = CTOD('  /  /    ')
MPS = SPACE(1)
MCQ = SPACE(1)
DEFINE WINDOW RDINVOIC FROM INT((SROWS()-17)/1), INT((SCOLS()-68)/1) TO INT((SROWS()-17)/1)+9, INT((SCOLS()-68)/1)+50 NOFLOAT NOCLOSE SHADOW NOMINIMIZE PANEL COLOR R/G 
ACTIVATE WINDOW SAME RDINVOIC
CLEAR
DO WHILE .T.
   @ 2, 5 SAY 'Date From:' COLOR W/N 
   @ 4, 5 SAY 'Date To:' COLOR W/N 
   @ 2, 30 GET MSDATE PICTURE ('99/99/9999')
   @ 4, 30 GET MEDATE PICTURE ('99/99/9999')
   READ
   IF READKEY()=12 .OR. READKEY()=268
      CLOSE DATABASES
      RELEASE WINDOW RDINVOIC
      RETURN
      EXIT
   ENDIF
   SELECT ITRAN
   SET ORDER TO Date
   SEEK MSDATE
   IF  .NOT. FOUND()
      WAIT WINDOW 'Date Not Exist'
      MSDATE = CTOD('  /  /    ')
      LOOP
   ELSE
      EXIT
   ENDIF
ENDDO
CLEAR
@ 4, 5 SAY 'Report To Printer Or Screen (P/S)' COLOR W/N 
@ 4, 40 GET MPS PICTURE '@!' VALID MPS='P' .OR. MPS='S' ERROR 'Printer Or Screen (P/S)' COLOR W/N 
READ
CLEAR
@ 3, 13 SAY 'Report in Processing'
@ 5, 13 SAY "Please Don't Distrub"
SELECT ITRAN
SET FILTER TO DATE>=MSDATE .AND. DATE<=MEDATE
SET ORDER TO Date
GOTO BOTTOM
MEDATE = DATE
GOTO TOP
MSDATE = DATE
SET RELATION TO STR(C1,2)+STR(C2,2)+STR(C3,3) INTO LDGRCOD ADDITIVE
SET RELATION TO STR(I1,2)+STR(I2,2)+STR(I3,4) INTO ITEM ADDITIVE
SET RELATION TO DOC_TYPE INTO DTYPE ADDITIVE
MTITLE = 'SALE INVOICES'
GOTO TOP
IF MPS='P'
   DO REPPRTPRO
ELSE
   DO REPSCRPRO
ENDIF
RELEASE WINDOW RDINVOIC
SET PRINTER OFF
SET DEVICE TO SCREEN
CLOSE DATABASES
RETURN

PROCEDURE REPPRTPRO
SET PRINTER ON
SET DEVICE TO PRINTER
MPAGE = MPAGE+1
@ 0, 0 SAY CHR(18)
@ 0, 0 SAY CHR(14)
@ 0, 1 SAY MCOMP
@ 0, 0 SAY CHR(18)
@ 1, 1 SAY MTITLE
@ 2, 1 SAY 'From Date :   '+DTOC(MSDATE)
@ 3, 1 SAY 'To   Date :   '+DTOC(MEDATE)
@ 3, 50 SAY 'Page# '+STR(MPAGE,4)
@ 4, 0 SAY REPLICATE('-',80)
@ 5, 0 SAY 'Date       DOC #            Item                        Qty    Rate    Total'
@ 6, 0 SAY '                                                                     Amount'
@ 7, 0 SAY REPLICATE('-',80)
MLINE = 8
DO WHILE  .NOT. EOF()
   MDOC_TYPE = 0
   MDOC_NO = SPACE(6)
   MDOC_TYPE = DOC_TYPE
   MDOC_NO = DOC_NO
   @ MLINE, 5 SAY LDGRCOD.TITLE
   MLINE = MLINE+1
   DO WHILE MDOC_TYPE=DOC_TYPE .AND. DOC_NO=MDOC_NO
      @ MLINE, 0 SAY DTOC(DATE)+'  '+DTYPE.TYPE1+'-'+DOC_NO+'  '+ITEM.ITEM+'  '+STR(QTY,4)+'   '+STR(ITEM.RATE,4)
      @ MLINE, 65 SAY AMOUNT PICTURE '999,999,999.99'
      MLINE = MLINE+1
      MAMOUNT = MAMOUNT+AMOUNT
      SKIP
      IF MLINE>59
         EJECT
         MPAGE = MPAGE+1
         MLINE = 8
         @ 0, 0 SAY CHR(18)
         @ 0, 0 SAY CHR(14)
         @ 0, 1 SAY MCOMP
         @ 0, 0 SAY CHR(18)
         @ 1, 1 SAY MTITLE
         @ 2, 1 SAY 'From Date :   '+DTOC(MSDATE)
         @ 3, 1 SAY 'To   Date :   '+DTOC(MEDATE)
         @ 3, 50 SAY 'Page# '+STR(MPAGE,4)
         @ 4, 0 SAY REPLICATE('-',80)
         @ 5, 0 SAY 'Date       DOC #            Item                        Qty    Rate    Total'
         @ 6, 0 SAY '                                                                     Amount'
         @ 7, 0 SAY REPLICATE('-',80)
      ENDIF
   ENDDO
   MLINE = MLINE+1
ENDDO
@ MLINE, 0 SAY REPLICATE('-',80)
MLINE = MLINE+1
@ MLINE, 20 SAY 'Total'
@ MLINE, 65 SAY MAMOUNT PICTURE '999,999,999.99'
EJECT
RETURN

PROCEDURE REPSCRPRO
DO DSPSCRPRO IN Proc1
MLINE = 8
@ 0, 1 SAY MCOMP
@ 1, 1 SAY MTITLE
@ 2, 1 SAY 'From Date :'+DTOC(MEDATE)
@ 3, 1 SAY 'To   Date :'+DTOC(MSDATE)
@ 4, 0 SAY REPLICATE('-',78)
@ 5, 0 SAY 'Date       DOC #            Item                        Qty    Rate    Total'
@ 6, 0 SAY '                                                                     Amount'
@ 7, 0 SAY REPLICATE('-',78)
DO WHILE  .NOT. EOF()
   MDOC_TYPE = 0
   MDOC_NO = SPACE(6)
   MDOC_TYPE = DOC_TYPE
   MDOC_NO = DOC_NO
   @ MLINE, 5 SAY LDGRCOD.TITLE
   MLINE = MLINE+1
   DO WHILE MDOC_TYPE=DOC_TYPE .AND. DOC_NO=MDOC_NO
      @ MLINE, 0 SAY DTOC(DATE)+'  '+DTYPE.TYPE1+'-'+DOC_NO+'  '+ITEM.ITEM+'  '+STR(QTY,4)+'   '+STR(ITEM.RATE,4)
      @ MLINE, 64 SAY AMOUNT PICTURE '999,999,999.99'
      MLINE = MLINE+1
      MAMOUNT = MAMOUNT+AMOUNT
      SKIP
      IF MLINE>18
         @ 21, 28 SAY 'Continue Or Quit C/Q'
         @ 21, 50 GET MCQ PICTURE '@!' VALID MCQ='C' .OR. MCQ='Q' ERROR 'Continue Or Quit (C/Q)'
         READ
         IF MCQ='Q'
            RELEASE WINDOW SCR
            RETURN
         ENDIF
         @ 8, 0 CLEAR TO 21, 78
         MLINE = 8
      ENDIF
   ENDDO
   MLINE = MLINE+1
ENDDO
@ MLINE, 0 SAY REPLICATE('-',78)
MLINE = MLINE+1
@ MLINE, 20 SAY 'Total'
@ MLINE, 64 SAY MAMOUNT PICTURE '999,999,999.99'
@ 21, 28 SAY 'Quit Only (Q)'
@ 21, 50 GET MCQ PICTURE '@!' VALID MCQ='Q' ERROR 'Quit Only (Q)'
READ
RELEASE WINDOW SCR
RETURN
* 
* 
* RD-TRAN.FXP 
* ----------- 
*
CLOSE DATABASES
SELECT 1
USE SHARED Tran ALIAS TRAN
SELECT 2
USE SHARED LdgrCod ALIAS LDGRCOD
SET ORDER TO C123
SELECT 3
USE SHARED DType ALIAS DTYPE
SET ORDER TO Doc_Type
MDAMOUNT = 0
MCAMOUNT = 0
MPAGE = 0
MLINE = 0
MSDATE = CTOD('  /  /    ')
MEDATE = CTOD('  /  /    ')
MPS = SPACE(1)
MCQ = SPACE(1)
DEFINE WINDOW RDTRAN FROM INT((SROWS()-17)/1), INT((SCOLS()-68)/1) TO INT((SROWS()-17)/1)+9, INT((SCOLS()-68)/1)+50 NOFLOAT NOCLOSE SHADOW NOMINIMIZE PANEL COLOR R/G 
ACTIVATE WINDOW SAME RDTRAN
CLEAR
DO WHILE .T.
   @ 2, 5 SAY 'Date From:' COLOR W/N 
   @ 4, 5 SAY 'Date To:' COLOR W/N 
   @ 2, 30 GET MSDATE PICTURE ('99/99/9999')
   @ 4, 30 GET MEDATE PICTURE ('99/99/9999')
   READ
   IF READKEY()=12 .OR. READKEY()=268
      CLOSE DATABASES
      RELEASE WINDOW RDTRAN
      RETURN
      EXIT
   ENDIF
   SELECT TRAN
   SET ORDER TO Date
   SEEK MSDATE
   IF  .NOT. FOUND()
      WAIT WINDOW 'Date Not Exist'
      MSDATE = CTOD('  /  /    ')
      LOOP
   ELSE
      EXIT
   ENDIF
ENDDO
CLEAR
@ 4, 5 SAY 'Report To Printer Or Screen (P/S)' COLOR W/N 
@ 4, 40 GET MPS PICTURE '@!' VALID MPS='P' .OR. MPS='S' ERROR 'Printer Or Screen (P/S)' COLOR W/N 
READ
CLEAR
@ 3, 13 SAY 'Report in Processing'
@ 5, 13 SAY "Please Don't Distrub"
SELECT TRAN
SET FILTER TO DATE>=MSDATE .AND. DATE<=MEDATE
SET ORDER TO Date
GOTO BOTTOM
MEDATE = DATE
GOTO TOP
MSDATE = DATE
SET RELATION TO STR(C1,2)+STR(C2,2)+STR(C3,3) INTO LDGRCOD ADDITIVE
SET RELATION TO DOC_TYPE INTO DTYPE ADDITIVE
MTITLE = 'DAILY VOUCHERS'
GOTO TOP
IF MPS='P'
   DO REPPRTPRO
ELSE
   DO REPSCRPRO
ENDIF
RELEASE WINDOW RDTRAN
SET PRINTER OFF
SET DEVICE TO SCREEN
CLOSE DATABASES
RETURN

PROCEDURE REPPRTPRO
SET PRINTER ON
SET DEVICE TO PRINTER
MPAGE = MPAGE+1
@ 0, 0 SAY CHR(18)
@ 0, 0 SAY CHR(14)
@ 0, 1 SAY MCOMP
@ 0, 0 SAY CHR(18)
@ 1, 1 SAY MTITLE
@ 2, 1 SAY 'From Date :   '+DTOC(MSDATE)
@ 3, 1 SAY 'To   Date :   '+DTOC(MEDATE)
@ 3, 50 SAY 'Page# '+STR(MPAGE,4)
@ 4, 0 SAY CHR(15)
@ 4, 0 SAY REPLICATE('-',137)
@ 5, 0 SAY ' DATE         DOC #     CODE       TITLE                         DESCRIPTION                   DR          CR'
@ 6, 0 SAY REPLICATE('-',137)
MLINE = 7
DO WHILE  .NOT. EOF()
   MMC1 = STR(C1,2)
   MMC2 = STR(C2,2)
   MMC3 = STR(C3,3)
   DO LED1CODPRO IN Proc1
   @ MLINE, 0 SAY DTOC(DATE)+' '+DTYPE.TYPE1+'-'+DOC_NO+' '+MMC1+'-'+MMC2+'-'+MMC3+' '+LDGRCOD.TITLE+' '+DISC
   @ MLINE, 89 SAY IIF(CR_DR='DR',(AMOUNT),'') PICTURE '999,999,999.99'
   @ MLINE, 104 SAY IIF(CR_DR='CR',(AMOUNT),'') PICTURE '999,999,999.99'
   IF CR_DR='DR'
      MDAMOUNT = MDAMOUNT+AMOUNT
   ELSE
      MCAMOUNT = MCAMOUNT+AMOUNT
   ENDIF
   SKIP
   MLINE = MLINE+1
   IF MLINE>59
      EJECT
      MPAGE = MPAGE+1
      MLINE = 7
      @ 0, 0 SAY CHR(18)
      @ 0, 0 SAY CHR(14)
      @ 0, 1 SAY MCOMP
      @ 0, 0 SAY CHR(18)
      @ 1, 1 SAY MTITLE
      @ 2, 1 SAY 'From Date :   '+DTOC(MSDATE)
      @ 3, 1 SAY 'To   Date :   '+DTOC(MEDATE)
      @ 3, 50 SAY 'Page# '+STR(MPAGE,4)
      @ 4, 0 SAY CHR(15)
      @ 4, 0 SAY REPLICATE('-',137)
      @ 5, 0 SAY ' DATE         DOC #     CODE       TITLE                         DESCRIPTION                   DR          CR'
      @ 6, 0 SAY REPLICATE('-',137)
   ENDIF
   MLINE = MLINE+1
ENDDO
@ MLINE, 0 SAY REPLICATE('-',137)
MLINE = MLINE+1
@ MLINE, 50 SAY 'Total'
@ MLINE, 89 SAY MDAMOUNT PICTURE '999,999,999.99'
@ MLINE, 104 SAY MCAMOUNT PICTURE '999,999,999.99'
EJECT
RETURN

PROCEDURE REPSCRPRO
DO DSPSCRPRO IN Proc1
MLINE = 7
@ 0, 1 SAY MCOMP
@ 1, 1 SAY MTITLE
@ 2, 1 SAY 'From Date :'+DTOC(MEDATE)
@ 3, 1 SAY 'To   Date :'+DTOC(MSDATE)
@ 4, 0 SAY REPLICATE('-',78)
@ 5, 0 SAY 'DATE       DOC #        TITLE          DESCRIPTION         DR          CR'
@ 6, 0 SAY REPLICATE('-',78)
DO WHILE  .NOT. EOF()
   @ MLINE, 0 SAY DTOC(DATE)+' '+DTYPE.TYPE1+'-'+DOC_NO+' '+LEFT(LDGRCOD.TITLE,15)+' '+LEFT(DISC,15)
   @ MLINE, 50 SAY IIF(CR_DR='DR',(AMOUNT),'') PICTURE '999,999,999.99'
   @ MLINE, 64 SAY IIF(CR_DR='CR',(AMOUNT),'') PICTURE '999,999,999.99'
   IF CR_DR='DR'
      MDAMOUNT = MDAMOUNT+AMOUNT
   ELSE
      MCAMOUNT = MCAMOUNT+AMOUNT
   ENDIF
   SKIP
   MLINE = MLINE+1
   IF MLINE>18
      @ 21, 28 SAY 'Continue Or Quit C/Q'
      @ 21, 50 GET MCQ PICTURE '@!' VALID MCQ='C' .OR. MCQ='Q' ERROR 'Continue Or Quit (C/Q)'
      READ
      IF MCQ='Q'
         RELEASE WINDOW SCR
         RETURN
      ENDIF
      @ 7, 0 CLEAR TO 21, 78
      MLINE = 7
   ENDIF
ENDDO
@ MLINE, 0 SAY REPLICATE('-',78)
MLINE = MLINE+1
@ MLINE, 20 SAY 'Total'
@ MLINE, 50 SAY MDAMOUNT PICTURE '999,999,999.99'
@ MLINE, 64 SAY MCAMOUNT PICTURE '999,999,999.99'
@ 21, 28 SAY 'Quit Only (Q)'
@ 21, 50 GET MCQ PICTURE '@!' VALID MCQ='Q' ERROR 'Quit Only (Q)'
READ
RELEASE WINDOW SCR
RETURN
* 
* 
* RN-INVO.FXP 
* ----------- 
*
CLOSE DATABASES
SELECT 1
USE SHARED ITran ALIAS ITRAN
SELECT 2
USE SHARED LdgrCod ALIAS LDGRCOD
SET ORDER TO C123
SELECT 3
USE SHARED Item ALIAS ITEM
SET ORDER TO I123
SELECT 4
USE SHARED DType ALIAS DTYPE
SET ORDER TO Doc_Type
MDOC_TYPE = 0
MDOC_NO = SPACE(6)
MAMOUNT = 0
MPAGE = 0
MLINE = 0
MSDOC_NO = SPACE(6)
MEDOC_NO = SPACE(6)
MPS = SPACE(1)
MCQ = SPACE(1)
DEFINE WINDOW RNINVOIC FROM INT((SROWS()-17)/1), INT((SCOLS()-68)/1) TO INT((SROWS()-17)/1)+9, INT((SCOLS()-68)/1)+50 NOFLOAT NOCLOSE SHADOW NOMINIMIZE PANEL COLOR R/G 
ACTIVATE WINDOW SAME RNINVOIC
CLEAR
DO WHILE .T.
   @ 2, 5 SAY 'Document No From:' COLOR W/N 
   @ 4, 5 SAY 'Document No To:' COLOR W/N 
   @ 2, 30 GET MSDOC_NO PICTURE '@!'
   @ 4, 30 GET MEDOC_NO PICTURE '@!'
   READ
   IF READKEY()=12 .OR. READKEY()=268
      CLOSE DATABASES
      RELEASE WINDOW RNINVOIC
      RETURN
      EXIT
   ENDIF
   SELECT ITRAN
   SET ORDER TO Doc_No
   SEEK MSDOC_NO
   IF  .NOT. FOUND()
      WAIT WINDOW 'Document No Not Exist'
      MSDOC_NO = SPACE(6)
      LOOP
   ELSE
      EXIT
   ENDIF
ENDDO
CLEAR
@ 4, 5 SAY 'Report To Printer Or Screen (P/S)' COLOR W/N 
@ 4, 40 GET MPS PICTURE '@!' VALID MPS='P' .OR. MPS='S' ERROR 'Printer Or Screen (P/S)' COLOR W/N 
READ
CLEAR
@ 3, 13 SAY 'Report in Processing'
@ 5, 13 SAY "Please Don't Distrub"
SELECT ITRAN
SET FILTER TO DOC_NO>=MSDOC_NO .AND. DOC_NO<=MEDOC_NO
SET ORDER TO Doc_No
SET RELATION TO STR(C1,2)+STR(C2,2)+STR(C3,3) INTO LDGRCOD ADDITIVE
SET RELATION TO STR(I1,2)+STR(I2,2)+STR(I3,4) INTO ITEM ADDITIVE
SET RELATION TO DOC_TYPE INTO DTYPE ADDITIVE
MTITLE = 'SALE INVOICES'
GOTO TOP
IF MPS='P'
   DO REPPRTPRO
ELSE
   DO REPSCRPRO
ENDIF
RELEASE WINDOW RNINVOIC
SET PRINTER OFF
SET DEVICE TO SCREEN
CLOSE DATABASES
RETURN

PROCEDURE REPPRTPRO
SET PRINTER ON
SET DEVICE TO PRINTER
MPAGE = MPAGE+1
@ 0, 0 SAY CHR(18)
@ 0, 0 SAY CHR(14)
@ 0, 1 SAY MCOMP
@ 0, 0 SAY CHR(18)
@ 1, 1 SAY MTITLE
@ 2, 1 SAY 'From Document No : '+MSDOC_NO
@ 3, 1 SAY 'To Document No   : '+MEDOC_NO
@ 3, 50 SAY 'Page# '+STR(MPAGE,4)
@ 4, 0 SAY REPLICATE('-',80)
@ 5, 0 SAY 'Date       DOC #            Item                        Qty    Rate    Total'
@ 6, 0 SAY '                                                                     Amount'
@ 7, 0 SAY REPLICATE('-',80)
MLINE = 8
DO WHILE  .NOT. EOF()
   MDOC_TYPE = 0
   MDOC_NO = SPACE(6)
   MDOC_TYPE = DOC_TYPE
   MDOC_NO = DOC_NO
   @ MLINE, 5 SAY LDGRCOD.TITLE
   MLINE = MLINE+1
   DO WHILE MDOC_TYPE=DOC_TYPE .AND. DOC_NO=MDOC_NO
      @ MLINE, 0 SAY DTOC(DATE)+'  '+DTYPE.TYPE1+'-'+DOC_NO+'  '+ITEM.ITEM+'  '+STR(QTY,4)+'   '+STR(ITEM.RATE,4)
      @ MLINE, 65 SAY AMOUNT PICTURE '999,999,999.99'
      MLINE = MLINE+1
      MAMOUNT = MAMOUNT+AMOUNT
      SKIP
      IF MLINE>59
         EJECT
         MPAGE = MPAGE+1
         MLINE = 8
         @ 0, 0 SAY CHR(18)
         @ 0, 0 SAY CHR(14)
         @ 0, 1 SAY MCOMP
         @ 0, 0 SAY CHR(18)
         @ 1, 1 SAY MTITLE
         @ 2, 1 SAY 'From Document No : '+MSDOC_NO
         @ 3, 1 SAY 'To Document No   : '+MEDOC_NO
         @ 3, 50 SAY 'Page# '+STR(MPAGE,4)
         @ 4, 0 SAY REPLICATE('-',80)
         @ 5, 0 SAY 'Date       DOC #            Item                        Qty    Rate    Total'
         @ 6, 0 SAY '                                                                     Amount'
         @ 7, 0 SAY REPLICATE('-',80)
      ENDIF
   ENDDO
   MLINE = MLINE+1
ENDDO
@ MLINE, 0 SAY REPLICATE('-',80)
MLINE = MLINE+1
@ MLINE, 20 SAY 'Total'
@ MLINE, 65 SAY MAMOUNT PICTURE '999,999,999.99'
EJECT
RETURN

PROCEDURE REPSCRPRO
DO DSPSCRPRO IN Proc1
MLINE = 8
@ 0, 1 SAY MCOMP
@ 1, 1 SAY MTITLE
@ 2, 1 SAY 'From Document No : '+MSDOC_NO
@ 3, 1 SAY 'To Document No   : '+MEDOC_NO
@ 4, 0 SAY REPLICATE('-',78)
@ 5, 0 SAY 'Date       DOC #            Item                        Qty    Rate    Total'
@ 6, 0 SAY '                                                                     Amount'
@ 7, 0 SAY REPLICATE('-',78)
DO WHILE  .NOT. EOF()
   MDOC_TYPE = 0
   MDOC_NO = SPACE(6)
   MDOC_TYPE = DOC_TYPE
   MDOC_NO = DOC_NO
   @ MLINE, 5 SAY LDGRCOD.TITLE
   MLINE = MLINE+1
   DO WHILE MDOC_TYPE=DOC_TYPE .AND. DOC_NO=MDOC_NO
      @ MLINE, 0 SAY DTOC(DATE)+'  '+DTYPE.TYPE1+'-'+DOC_NO+'  '+ITEM.ITEM+'  '+STR(QTY,4)+'   '+STR(ITEM.RATE,4)
      @ MLINE, 64 SAY AMOUNT PICTURE '999,999,999.99'
      MLINE = MLINE+1
      MAMOUNT = MAMOUNT+AMOUNT
      SKIP
      IF MLINE>18
         @ 21, 28 SAY 'Continue Or Quit C/Q'
         @ 21, 50 GET MCQ PICTURE '@!' VALID MCQ='C' .OR. MCQ='Q' ERROR 'Continue Or Quit (C/Q)'
         READ
         IF MCQ='Q'
            RELEASE WINDOW SCR
            RETURN
         ENDIF
         @ 8, 0 CLEAR TO 21, 78
         MLINE = 8
      ENDIF
   ENDDO
   MLINE = MLINE+1
ENDDO
@ MLINE, 0 SAY REPLICATE('-',78)
MLINE = MLINE+1
@ MLINE, 20 SAY 'Total'
@ MLINE, 64 SAY MAMOUNT PICTURE '999,999,999.99'
@ 21, 28 SAY 'Quit Only (Q)'
@ 21, 50 GET MCQ PICTURE '@!' VALID MCQ='Q' ERROR 'Quit Only (Q)'
READ
RELEASE WINDOW SCR
RETURN
* 
* 
* RN-TRAN.FXP 
* ----------- 
*
CLOSE DATABASES
SELECT 1
USE SHARED Tran ALIAS TRAN
SELECT 2
USE SHARED LdgrCod ALIAS LDGRCOD
SET ORDER TO C123
SELECT 3
USE SHARED DType ALIAS DTYPE
SET ORDER TO Doc_Type
MDOC_TYPE = 0
MDAMOUNT = 0
MCAMOUNT = 0
MPAGE = 0
MLINE = 0
MSDATE = CTOD('  /  /    ')
MEDATE = CTOD('  /  /    ')
MPS = SPACE(1)
MCQ = SPACE(1)
DEFINE WINDOW RNTRAN FROM INT((SROWS()-17)/1), INT((SCOLS()-68)/1) TO INT((SROWS()-17)/1)+9, INT((SCOLS()-68)/1)+50 NOFLOAT NOCLOSE SHADOW NOMINIMIZE PANEL COLOR R/G 
ACTIVATE WINDOW SAME RNTRAN
CLEAR
DO WHILE .T.
   @ 1, 5 SAY 'Document Type:' COLOR W/N 
   @ 3, 5 SAY 'Date From:' COLOR W/N 
   @ 5, 5 SAY 'Date To:' COLOR W/N 
   @ 1, 30 GET MDOC_TYPE PICTURE '9'
   READ
   IF READKEY()=12 .OR. READKEY()=268
      CLOSE DATABASES
      RELEASE WINDOW RNTRAN
      RETURN
      EXIT
   ENDIF
   SELECT DTYPE
   SET ORDER TO Doc_Type
   SEEK MDOC_TYPE
   IF  .NOT. FOUND()
      WAIT WINDOW 'Data Type Not Exist'
      MDOC_TYPE = 0
      LOOP
   ENDIF
   @ 3, 30 GET MSDATE PICTURE ('99/99/9999')
   @ 5, 30 GET MEDATE PICTURE ('99/99/9999')
   READ
   EXIT
ENDDO
CLEAR
@ 4, 5 SAY 'Report To Printer Or Screen (P/S)' COLOR W/N 
@ 4, 40 GET MPS PICTURE '@!' VALID MPS='P' .OR. MPS='S' ERROR 'Printer Or Screen (P/S)' COLOR W/N 
READ
CLEAR
@ 3, 13 SAY 'Report in Processing'
@ 5, 13 SAY "Please Don't Distrub"
SELECT TRAN
SET FILTER TO DATE>=MSDATE .AND. DATE<=MEDATE .AND. DOC_TYPE=MDOC_TYPE
SET ORDER TO Date
GOTO BOTTOM
MEDATE = DATE
GOTO TOP
MSDATE = DATE
SET RELATION TO STR(C1,2)+STR(C2,2)+STR(C3,3) INTO LDGRCOD ADDITIVE
SET RELATION TO DOC_TYPE INTO DTYPE ADDITIVE
MTITLE = 'DAILY VOUCHERS'
GOTO TOP
IF MPS='P'
   DO REPPRTPRO
ELSE
   DO REPSCRPRO
ENDIF
RELEASE WINDOW RNTRAN
SET PRINTER OFF
SET DEVICE TO SCREEN
CLOSE DATABASES
RETURN

PROCEDURE REPPRTPRO
SET PRINTER ON
SET DEVICE TO PRINTER
MPAGE = MPAGE+1
@ 0, 0 SAY CHR(18)
@ 0, 0 SAY CHR(14)
@ 0, 1 SAY MCOMP
@ 0, 0 SAY CHR(18)
@ 1, 1 SAY MTITLE
@ 2, 1 SAY 'From Date :   '+DTOC(MSDATE)
@ 3, 1 SAY 'To   Date :   '+DTOC(MEDATE)
@ 3, 50 SAY 'Page# '+STR(MPAGE,4)
@ 4, 0 SAY CHR(15)
@ 4, 0 SAY REPLICATE('-',137)
@ 5, 0 SAY ' DATE         DOC #     CODE       TITLE                         DESCRIPTION                   DR          CR'
@ 6, 0 SAY REPLICATE('-',137)
MLINE = 7
DO WHILE  .NOT. EOF()
   MMC1 = STR(C1,2)
   MMC2 = STR(C2,2)
   MMC3 = STR(C3,3)
   DO LED1CODPRO IN Proc1
   @ MLINE, 0 SAY DTOC(DATE)+' '+DTYPE.TYPE1+'-'+DOC_NO+' '+MMC1+'-'+MMC2+'-'+MMC3+' '+LDGRCOD.TITLE+' '+DISC
   @ MLINE, 89 SAY IIF(CR_DR='DR',(AMOUNT),'') PICTURE '999,999,999.99'
   @ MLINE, 104 SAY IIF(CR_DR='CR',(AMOUNT),'') PICTURE '999,999,999.99'
   IF CR_DR='DR'
      MDAMOUNT = MDAMOUNT+AMOUNT
   ELSE
      MCAMOUNT = MCAMOUNT+AMOUNT
   ENDIF
   SKIP
   MLINE = MLINE+1
   IF MLINE>59
      EJECT
      MPAGE = MPAGE+1
      MLINE = 7
      @ 0, 0 SAY CHR(18)
      @ 0, 0 SAY CHR(14)
      @ 0, 1 SAY MCOMP
      @ 0, 0 SAY CHR(18)
      @ 1, 1 SAY MTITLE
      @ 2, 1 SAY 'From Date :   '+DTOC(MSDATE)
      @ 3, 1 SAY 'To   Date :   '+DTOC(MEDATE)
      @ 3, 50 SAY 'Page# '+STR(MPAGE,4)
      @ 4, 0 SAY CHR(15)
      @ 4, 0 SAY REPLICATE('-',137)
      @ 5, 0 SAY ' DATE         DOC #     CODE       TITLE                         DESCRIPTION                   DR          CR'
      @ 6, 0 SAY REPLICATE('-',137)
   ENDIF
   MLINE = MLINE+1
ENDDO
@ MLINE, 0 SAY REPLICATE('-',137)
MLINE = MLINE+1
@ MLINE, 50 SAY 'Total'
@ MLINE, 89 SAY MDAMOUNT PICTURE '999,999,999.99'
@ MLINE, 104 SAY MCAMOUNT PICTURE '999,999,999.99'
EJECT
RETURN

PROCEDURE REPSCRPRO
DO DSPSCRPRO IN Proc1
MLINE = 7
@ 0, 1 SAY MCOMP
@ 1, 1 SAY MTITLE
@ 2, 1 SAY 'From Date :'+DTOC(MEDATE)
@ 3, 1 SAY 'To   Date :'+DTOC(MSDATE)
@ 4, 0 SAY REPLICATE('-',78)
@ 5, 0 SAY 'DATE       DOC #        TITLE          DESCRIPTION         DR          CR'
@ 6, 0 SAY REPLICATE('-',78)
DO WHILE  .NOT. EOF()
   @ MLINE, 0 SAY DTOC(DATE)+' '+DTYPE.TYPE1+'-'+DOC_NO+' '+LEFT(LDGRCOD.TITLE,15)+' '+LEFT(DISC,15)
   @ MLINE, 50 SAY IIF(CR_DR='DR',(AMOUNT),'') PICTURE '999,999,999.99'
   @ MLINE, 64 SAY IIF(CR_DR='CR',(AMOUNT),'') PICTURE '999,999,999.99'
   IF CR_DR='DR'
      MDAMOUNT = MDAMOUNT+AMOUNT
   ELSE
      MCAMOUNT = MCAMOUNT+AMOUNT
   ENDIF
   SKIP
   MLINE = MLINE+1
   IF MLINE>18
      @ 21, 28 SAY 'Continue Or Quit C/Q'
      @ 21, 50 GET MCQ PICTURE '@!' VALID MCQ='C' .OR. MCQ='Q' ERROR 'Continue Or Quit (C/Q)'
      READ
      IF MCQ='Q'
         RELEASE WINDOW SCR
         RETURN
      ENDIF
      @ 7, 0 CLEAR TO 21, 78
      MLINE = 7
   ENDIF
ENDDO
@ MLINE, 0 SAY REPLICATE('-',78)
MLINE = MLINE+1
@ MLINE, 20 SAY 'Total'
@ MLINE, 50 SAY MDAMOUNT PICTURE '999,999,999.99'
@ MLINE, 64 SAY MCAMOUNT PICTURE '999,999,999.99'
@ 21, 28 SAY 'Quit Only (Q)'
@ 21, 50 GET MCQ PICTURE '@!' VALID MCQ='Q' ERROR 'Quit Only (Q)'
READ
RELEASE WINDOW SCR
RETURN
* 
* 
* UPDBAL.FXP 
* ---------- 
*
DEFINE WINDOW UPDBAL FROM INT((SROWS()-15)/1), INT((SCOLS()-68)/1) TO INT((SROWS()-15)/1)+6, INT((SCOLS()-68)/1)+50 NOFLOAT NOCLOSE SHADOW TITLE 'UPDATE BALANCES' NOMINIMIZE PANEL COLOR SCHEME 1
CLOSE DATABASES
ACTIVATE WINDOW SAME UPDBAL
@ 1, 6 SAY 'Dont Use This Program On Any Terminal'
@ 2, 4 SAY 'Updating in progress, Please Dont Distrub'
SELECT 1
USE SHARED ITran ALIAS ITRAN
SELECT 2
USE SHARED Tran ALIAS TRAN
SELECT 3
USE SHARED LdgrCod ALIAS LDGRCOD
MDOC_NO = SPACE(6)
MDOC_TYPE = 0
MAMOUNT = 0
MDATE = CTOD('  /  /    ')
MC1 = 0
MC2 = 0
MC3 = 0
MCR_DR = SPACE(2)
SELECT ITRAN
SET ORDER TO Type_No
GOTO TOP
DO WHILE  .NOT. EOF()
   MDOC_NO = DOC_NO
   MDOC_TYPE = DOC_TYPE
   MDATE = DATE
   MC1 = C1
   MC2 = C2
   MC3 = C3
   DO WHILE DOC_TYPE=MDOC_TYPE .AND. DOC_NO=MDOC_NO
      MAMOUNT = MAMOUNT+AMOUNT
      SKIP
   ENDDO
   SELECT TRAN
   SET ORDER TO Type_No
   SEEK STR(MDOC_TYPE,1)+MDOC_NO
   IF  .NOT. FOUND()
      APPEND BLANK
      REPLACE DATE WITH MDATE
      REPLACE C1 WITH MC1
      REPLACE C2 WITH MC2
      REPLACE C3 WITH MC3
      REPLACE AMOUNT WITH MAMOUNT
      REPLACE DOC_TYPE WITH MDOC_TYPE
      REPLACE DOC_NO WITH MDOC_NO
      REPLACE CR_DR WITH 'DR'
      REPLACE DISC WITH 'SALE INVOICE'
   ELSE
      REPLACE AMOUNT WITH MAMOUNT
      REPLACE CR_DR WITH 'DR'
      REPLACE DISC WITH 'SALE INVOICE'
   ENDIF
   FLUSH
   MDOC_NO = SPACE(6)
   MDOC_TYPE = 0
   MAMOUNT = 0
   MDATE = CTOD('  /  /    ')
   MC1 = 0
   MC2 = 0
   MC3 = 0
   SELECT ITRAN
ENDDO
SELECT LDGRCOD
REPLACE LDGR_BAL WITH 0 ALL
REPLACE STATUS WITH '  ' ALL
SELECT TRAN
SET ORDER TO DDD_No
GOTO TOP
MC1 = 0
MC2 = 0
MC3 = 0
MAMOUNT = 0
MCR_DR = SPACE(2)
DO WHILE  .NOT. EOF()
   MC1 = C1
   MC2 = C2
   MC3 = C3
   MAMOUNT = AMOUNT
   MCR_DR = CR_DR
   SELECT LDGRCOD
   SET ORDER TO C123
   SEEK STR(MC1,2)+STR(MC2,2)+STR(MC3,3)
   IF STATUS='  '
      IF MCR_DR='DR'
         MLDGR_BAL = MAMOUNT
         MSTATUS = 'DR'
      ELSE
         MLDGR_BAL = MAMOUNT
         MSTATUS = 'CR'
      ENDIF
   ENDIF
   IF STATUS='DR'
      IF MCR_DR='DR'
         MLDGR_BAL = LDGR_BAL+MAMOUNT
         MSTATUS = 'DR'
      ELSE
         MLDGR_BAL = LDGR_BAL-MAMOUNT
         IF MLDGR_BAL>0
            MSTATUS = 'DR'
         ELSE
            MSTATUS = 'CR'
         ENDIF
      ENDIF
   ENDIF
   IF STATUS='CR'
      IF MCR_DR='CR'
         MLDGR_BAL = LDGR_BAL+MAMOUNT
         MSTATUS = 'CR'
      ELSE
         MLDGR_BAL = LDGR_BAL-MAMOUNT
         IF MLDGR_BAL>0
            MSTATUS = 'CR'
         ELSE
            MSTATUS = 'DR'
         ENDIF
      ENDIF
   ENDIF
   REPLACE LDGR_BAL WITH ABS(MLDGR_BAL)
   REPLACE STATUS WITH MSTATUS
   FLUSH
   MC1 = 0
   MC2 = 0
   MC3 = 0
   MAMOUNT = 0
   MCR_DR = SPACE(2)
   SELECT TRAN
   SKIP
ENDDO
RELEASE WINDOW UPDBAL
WAIT WINDOW NOWAIT 'Updating Process Completed'
RETURN
* 
* 
* R-ZONE.FXP 
* ---------- 
*
CLOSE DATABASES
SELECT 1
USE SHARED ITran ALIAS ITRAN
SELECT 2
USE SHARED LdgrCod ALIAS LDGRCOD
SET ORDER TO C123
SELECT 3
USE SHARED City ALIAS CITY
SET ORDER TO C_Code
TMP = SYS(3)
CREATE DBF (TMP) ( ZONE C ( 4 ), TS N ( 5 ), TC N ( 5 ), RS N ( 5 ), RC N ( 5 ), BS N ( 5 ), BC N ( 5 ), PC N ( 5 ), PH N ( 5 ), AMOUNT N ( 11, 2 ) )
SELECT 4
USE EXCLUSIVE (TMP) ALIAS TMP
INDEX ON ZONE TAG ZONE
MSDATE = CTOD('  /  /    ')
MEDATE = CTOD('  /  /    ')
MI3 = 0
MZONE = SPACE(4)
MQTY = 0
MAMOUNT = 0
MTS = 0
MTC = 0
MRS = 0
MRC = 0
MBS = 0
MBC = 0
MPC = 0
MPH = 0
MPAGE = 0
MLINE = 0
MPS = SPACE(1)
MCQ = SPACE(1)
MSR_NO = 0
DEFINE WINDOW RZONE FROM INT((SROWS()-17)/1), INT((SCOLS()-68)/1) TO INT((SROWS()-17)/1)+9, INT((SCOLS()-68)/1)+50 NOFLOAT NOCLOSE SHADOW NOMINIMIZE PANEL COLOR R/G 
ACTIVATE WINDOW SAME RZONE
CLEAR
@ 2, 5 SAY 'Date From:' COLOR W/N 
@ 4, 5 SAY 'Date To:' COLOR W/N 
@ 2, 30 GET MSDATE PICTURE ('99/99/9999')
@ 4, 30 GET MEDATE PICTURE ('99/99/9999')
READ
IF READKEY()=12 .OR. READKEY()=268
   CLOSE DATABASES
   DELETE FILE TMP+'.Dbf'
   DELETE FILE TMP+'.Cdx'
   RELEASE WINDOW RZONE
   RETURN
   EXIT
ENDIF
CLEAR
@ 4, 5 SAY 'Report To Printer Or Screen (P/S)' COLOR W/N 
@ 4, 40 GET MPS PICTURE '@!' VALID MPS='P' .OR. MPS='S' ERROR 'Printer Or Screen (P/S)' COLOR W/N 
READ
CLEAR
@ 3, 13 SAY 'Report in Processing'
@ 5, 13 SAY "Please Don't Distrub"
SELECT ITRAN
SET RELATION TO STR(C1,2)+STR(C2,2)+STR(C3,3) INTO LDGRCOD ADDITIVE
SET FILTER TO DATE>=MSDATE .AND. DATE<=MEDATE
SET ORDER TO C123
GOTO TOP
DO WHILE  .NOT. EOF()
   MI3 = 0
   MQTY = 0
   MAMOUNT = 0
   MZONE = SPACE(4)
   MI3 = I3
   MQTY = QTY
   MZONE = LDGRCOD.C_CODE
   MAMOUNT = NAMOUNT
   SELECT TMP
   SET ORDER TO Zone
   SEEK MZONE
   IF  .NOT. FOUND()
      APPEND BLANK
      REPLACE ZONE WITH MZONE
   ENDIF
   IF MI3=401 .OR. MI3=701
      REPLACE TS WITH TS+MQTY
   ENDIF
   IF MI3=402 .OR. MI3=702
      REPLACE TC WITH TC+MQTY
   ENDIF
   IF MI3=411 .OR. MI3=711
      REPLACE RS WITH RS+MQTY
   ENDIF
   IF MI3=412 .OR. MI3=712
      REPLACE RC WITH RC+MQTY
   ENDIF
   IF MI3=421 .OR. MI3=721
      REPLACE BS WITH BS+MQTY
   ENDIF
   IF MI3=422 .OR. MI3=722
      REPLACE BC WITH BC+MQTY
   ENDIF
   IF MI3=431 .OR. MI3=731
      REPLACE PC WITH PC+MQTY
   ENDIF
   IF MI3=432 .OR. MI3=732
      REPLACE PH WITH PH+MQTY
   ENDIF
   REPLACE AMOUNT WITH AMOUNT+MAMOUNT
   SELECT ITRAN
   SKIP
ENDDO
SELECT TMP
SET RELATION TO ZONE INTO CITY ADDITIVE
IF MPS='P'
   DO REPPRTPRO
ELSE
   DO REPSCRPRO
ENDIF
RELEASE WINDOW RZONE
SET PRINTER OFF
SET DEVICE TO SCREEN
CLOSE DATABASES
DELETE FILE TMP+'.Dbf'
DELETE FILE TMP+'.Cdx'
RETURN

PROCEDURE REPPRTPRO
SET PRINTER ON
SET DEVICE TO PRINTER
MPAGE = MPAGE+1
@ 0, 0 SAY CHR(18)
@ 0, 0 SAY CHR(14)
@ 0, 1 SAY MCOMP
@ 1, 0 SAY CHR(18)
@ 1, 1 SAY 'REPORT FROM: '+DTOC(MSDATE)+'  TO  '+DTOC(MEDATE)
@ 2, 0 SAY CHR(18)
@ 2, 1 SAY 'Date :'+DTOC(DATE())+'           '+'Page# '+STR(MPAGE,4)
@ 4, 0 SAY CHR(15)
@ 4, 0 SAY REPLICATE('-',137)
@ 5, 0 SAY 'CODE             CITY                AMOUNT          TIKKI          REGUALR         BIG BAG        PARTY PUF      TOTAL'
@ 6, 0 SAY '                                                  SPICY   CHCKN   SPICY   CHCKN   SPICY   CHCKN   CHEES    HOT    CARTNS'
@ 7, 0 SAY REPLICATE('-',137)
MLINE = 13
MAMOUNT = 0
MTS = 0
MTC = 0
MRS = 0
MRC = 0
MBS = 0
MBC = 0
MPC = 0
MPH = 0
SUM AMOUNT, TS, TC, RS, RC, BS, BC, PC, PH TO MAMOUNT, MTS, MTC, MRS, MRC, MBS, MBC, MPC, MPH
@ 8, 0 SAY 'TOTAL SUMMARY                       '+STR(MAMOUNT,11,2)+'   '+STR(MTS,5)+'   '+STR(MTC,5)+'   '+STR(MRS,5)+'   '+STR(MRC,5)+'   '+STR(MBS,5)+'   '+STR(MBC,5)+'   '+STR(MPC,5)+'   '+STR(MPH,5)+'   '+STR(MTS+MTC+MRS+MRC+MBS+MBC+MPC+MPH,5)
@ 9, 0 SAY REPLICATE('-',137)
MAMOUNT = 0
MTS = 0
MTC = 0
MRS = 0
MRC = 0
MBS = 0
MBC = 0
MPC = 0
MPH = 0
SUM FOR ZONE='N' AMOUNT, TS, TC, RS, RC, BS, BC, PC, PH TO MAMOUNT, MTS, MTC, MRS, MRC, MBS, MBC, MPC, MPH
@ 10, 0 SAY 'TOTAL NORTH                         '+STR(MAMOUNT,11,2)+'   '+STR(MTS,5)+'   '+STR(MTC,5)+'   '+STR(MRS,5)+'   '+STR(MRC,5)+'   '+STR(MBS,5)+'   '+STR(MBC,5)+'   '+STR(MPC,5)+'   '+STR(MPH,5)+'   '+STR(MTS+MTC+MRS+MRC+MBS+MBC+MPC+MPH,5)
MAMOUNT = 0
MTS = 0
MTC = 0
MRS = 0
MRC = 0
MBS = 0
MBC = 0
MPC = 0
MPH = 0
SUM FOR ZONE='S' AMOUNT, TS, TC, RS, RC, BS, BC, PC, PH TO MAMOUNT, MTS, MTC, MRS, MRC, MBS, MBC, MPC, MPH
@ 11, 0 SAY 'TOTAL SOUTH                         '+STR(MAMOUNT,11,2)+'   '+STR(MTS,5)+'   '+STR(MTC,5)+'   '+STR(MRS,5)+'   '+STR(MRC,5)+'   '+STR(MBS,5)+'   '+STR(MBC,5)+'   '+STR(MPC,5)+'   '+STR(MPH,5)+'   '+STR(MTS+MTC+MRS+MRC+MBS+MBC+MPC+MPH,5)
@ 12, 0 SAY REPLICATE('-',137)
SET ORDER TO Zone
GOTO TOP
DO WHILE  .NOT. EOF()
   @ MLINE, 0 SAY ZONE+' '+CITY.NAME+' '+STR(AMOUNT,11,2)+'   '+STR(TS,5)+'   '+STR(TC,5)+'   '+STR(RS,5)+'   '+STR(RC,5)+'   '+STR(BS,5)+'   '+STR(BC,5)+'   '+STR(PC,5)+'   '+STR(PH,5)+'   '+STR(TS+TC+RS+RC+BS+BC+PC+PH,5)
   SKIP
   MLINE = MLINE+1
   IF MLINE>59
      EJECT
      MPAGE = MPAGE+1
      @ 0, 0 SAY CHR(18)
      @ 0, 0 SAY CHR(14)
      @ 0, 1 SAY MCOMP
      @ 1, 0 SAY CHR(18)
      @ 1, 1 SAY 'REPORT FROM: '+DTOC(MSDATE)+'  TO  '+DTOC(MEDATE)
      @ 2, 0 SAY CHR(18)
      @ 2, 1 SAY 'Date :'+DTOC(DATE())+'           '+'Page# '+STR(MPAGE,4)
      @ 4, 0 SAY CHR(15)
      @ 4, 0 SAY REPLICATE('-',137)
      @ 5, 0 SAY 'CODE             CITY                AMOUNT          TIKKI          REGUALR         BIG BAG        PARTY PUF      TOTAL'
      @ 6, 0 SAY '                                                  SPICY   CHCKN   SPICY   CHCKN   SPICY   CHCKN   CHEES    HOT    CARTNS'
      @ 7, 0 SAY REPLICATE('-',137)
      MLINE = 8
   ENDIF
ENDDO
MLINE = MLINE+1
@ MLINE, 0 SAY REPLICATE('-',137)
EJECT
RETURN

PROCEDURE REPSCRPRO
DO DSPSCRPRO IN Proc1
MLINE = 13
@ 0, 1 SAY MCOMP
@ 1, 1 SAY 'REPORT FROM: '+DTOC(MSDATE)+'  TO  '+DTOC(MEDATE)
@ 2, 1 SAY 'DATE  '+DTOC(DATE())
@ 4, 0 SAY REPLICATE('-',78)
@ 5, 0 SAY 'CODE CITY       AMOUNT      TIKKI      REGUALR     BIG BAG    PARTY PUF TOTAL'
@ 6, 0 SAY '                         SPICY CHCKN SPICY CHCKN SPICY CHCKN CHEES  HOT CARTNS'
@ 7, 0 SAY REPLICATE('-',78)
MAMOUNT = 0
MTS = 0
MTC = 0
MRS = 0
MRC = 0
MBS = 0
MBC = 0
MPC = 0
MPH = 0
SUM AMOUNT, TS, TC, RS, RC, BS, BC, PC, PH TO MAMOUNT, MTS, MTC, MRS, MRC, MBS, MBC, MPC, MPH
@ 8, 0 SAY 'TOTAL SUMMARY'+STR(MAMOUNT,11,2)+' '+STR(MTS,5)+' '+STR(MTC,5)+' '+STR(MRS,5)+' '+STR(MRC,5)+' '+STR(MBS,5)+' '+STR(MBC,5)+' '+STR(MPC,5)+' '+STR(MPH,5)+' '+STR(MTS+MTC+MRS+MRC+MBS+MBC+MPC+MPH,5)
@ 9, 0 SAY REPLICATE('-',78)
MAMOUNT = 0
MTS = 0
MTC = 0
MRS = 0
MRC = 0
MBS = 0
MBC = 0
MPC = 0
MPH = 0
SUM FOR ZONE='N' AMOUNT, TS, TC, RS, RC, BS, BC, PC, PH TO MAMOUNT, MTS, MTC, MRS, MRC, MBS, MBC, MPC, MPH
@ 10, 0 SAY 'TOTAL NORTH  '+STR(MAMOUNT,11,2)+' '+STR(MTS,5)+' '+STR(MTC,5)+' '+STR(MRS,5)+' '+STR(MRC,5)+' '+STR(MBS,5)+' '+STR(MBC,5)+' '+STR(MPC,5)+' '+STR(MPH,5)+' '+STR(MTS+MTC+MRS+MRC+MBS+MBC+MPC+MPH,5)
MAMOUNT = 0
MTS = 0
MTC = 0
MRS = 0
MRC = 0
MBS = 0
MBC = 0
MPC = 0
MPH = 0
SUM FOR ZONE='S' AMOUNT, TS, TC, RS, RC, BS, BC, PC, PH TO MAMOUNT, MTS, MTC, MRS, MRC, MBS, MBC, MPC, MPH
@ 11, 0 SAY 'TOTAL SOUTH  '+STR(MAMOUNT,11,2)+' '+STR(MTS,5)+' '+STR(MTC,5)+' '+STR(MRS,5)+' '+STR(MRC,5)+' '+STR(MBS,5)+' '+STR(MBC,5)+' '+STR(MPC,5)+' '+STR(MPH,5)+' '+STR(MTS+MTC+MRS+MRC+MBS+MBC+MPC+MPH,5)
@ 12, 0 SAY REPLICATE('-',78)
SET ORDER TO Zone
GOTO TOP
DO WHILE  .NOT. EOF()
   @ MLINE, 0 SAY ZONE+' '+LEFT(CITY.NAME,7)+' '+STR(AMOUNT,11,2)+' '+STR(TS,5)+' '+STR(TC,5)+' '+STR(RS,5)+' '+STR(RC,5)+' '+STR(BS,5)+' '+STR(BC,5)+' '+STR(PC,5)+' '+STR(PH,5)+' '+STR(TS+TC+RS+RC+BS+BC+PC+PH,5)
   SKIP
   MLINE = MLINE+1
   IF MLINE>18
      @ 21, 28 SAY 'Continue Or Quit C/Q'
      @ 21, 50 GET MCQ PICTURE '@!' VALID MCQ='C' .OR. MCQ='Q' ERROR 'Continue Or Quit (C/Q)'
      READ
      IF MCQ='Q'
         RELEASE WINDOW SCR
         RETURN
      ENDIF
      @ 8, 0 CLEAR TO 21, 78
      MLINE = 8
   ENDIF
ENDDO
@ 21, 28 SAY 'Quit Only (Q)'
@ 21, 50 GET MCQ PICTURE '@!' VALID MCQ='Q' ERROR 'Quit Only (Q)'
READ
RELEASE WINDOW SCR
RETURN
* 
* 
* CITY.FXP 
* -------- 
*
CLOSE DATABASES
SELECT 1
USE SHARED City ALIAS CITY
SELECT 2
USE SHARED Ldgrcod ALIAS LDGRCOD
MC_CODE = SPACE(4)
MNAME = SPACE(30)
MOPT = 0
DEFINE WINDOW CITY FROM INT((SROWS()-16)/2), INT((SCOLS()-69)/2) TO INT((SROWS()-16)/2)+15, INT((SCOLS()-69)/2)+68 NOFLOAT NOCLOSE SHADOW TITLE ' CITY HEAD MAINTENANCE ' NOMINIMIZE PANEL COLOR SCHEME 1
ACTIVATE WINDOW SAME CITY
DO WHILE .T.
   CLEAR
   DO DSPHEDPRO
   @ 13, 18 SAY 'Press F1 to see City Code List' COLOR GR+/N 
   ON KEY LABEL F1 DO ShwCtyPro In Proc1
   @ 3, 30 GET MC_CODE PICTURE '@!' VALID MC_CODE<>SPACE(4) ERROR 'City Code Can Not Be Blank'
   READ
   IF READKEY()=12 .OR. READKEY()=268
      CLOSE DATABASES
      RELEASE WINDOW CITY
      RETURN
      EXIT
   ENDIF
   SELECT CITY
   SET ORDER TO C_Code
   SEEK MC_CODE
   IF OPT='New'
      IF FOUND()
         WAIT WINDOW 'City Code Already Exist'
         MC_CODE = SPACE(4)
         LOOP
      ENDIF
   ENDIF
   IF OPT='Modi'
      IF  .NOT. FOUND()
         WAIT WINDOW 'City Code Does Not Exist'
         MC_CODE = SPACE(4)
         LOOP
      ENDIF
      @ 13, 1 CLEAR TO 13, 62
      DO WHILE .T.
         @ 13, 18 GET MOPT SIZE 1, 10 FUNCTION '*H \<Cancel;\<Modify;\<Delete' COLOR SCHEME 19
         READ
         IF READKEY()=15 .OR. READKEY()=271
            EXIT
         ENDIF
      ENDDO
      DO CASE
         CASE MOPT=1
            OPTFLAG = 'C'
         CASE MOPT=2
            OPTFLAG = 'M'
         CASE MOPT=3
            OPTFLAG = 'D'
      ENDCASE
      @ 13, 1 CLEAR TO 13, 62
      IF OPTFLAG='C'
         MC_CODE = SPACE(4)
         LOOP
      ENDIF
      IF OPTFLAG='M'
         SELECT CITY
         MNAME = NAME
      ENDIF
      IF OPTFLAG='D'
         SELECT LDGRCOD
         SET ORDER TO C_Code
         SEEK MC_CODE
         IF FOUND()
            WAIT WINDOW 'This Code Already Exist In Ledger Head Maintenance'
         ELSE
            SELECT CITY
            DELETE
         ENDIF
         MC_CODE = SPACE(4)
         LOOP
      ENDIF
   ENDIF
   @ 8, 30 GET MNAME PICTURE '@!' VALID MNAME<>SPACE(30) ERROR 'City Name Can Not Be Blank'
   READ
   IF READKEY()=12 .OR. READKEY()=268
      LOOP
   ENDIF
   DO SAVDATPRO
   MC_CODE = SPACE(4)
   MNAME = SPACE(30)
ENDDO
RELEASE WINDOW CITY
RETURN

PROCEDURE DSPHEDPRO
@ 3, 5 SAY 'City Code'
@ 8, 5 SAY 'City Name'

PROCEDURE SAVDATPRO
SELECT CITY
SET ORDER TO C_Code
SEEK MC_CODE
IF  .NOT. FOUND()
   APPEND BLANK
ENDIF
REPLACE C_CODE WITH MC_CODE
REPLACE NAME WITH MNAME
FLUSH
* 
* 
* R-CITY.FXP 
* ---------- 
*
CLOSE DATABASES
SELECT 1
USE SHARED City ALIAS CITY
MTITL = SPACE(40)
MCN = SPACE(1)
MPS = SPACE(1)
MPAGE = 1
MLINE = 0
MCQ = SPACE(1)
MSR_NO = 0
DEFINE WINDOW RCITY FROM INT((SROWS()-17)/1), INT((SCOLS()-68)/1) TO INT((SROWS()-17)/1)+9, INT((SCOLS()-68)/1)+50 NOFLOAT NOCLOSE SHADOW NOMINIMIZE PANEL COLOR R/G 
ACTIVATE WINDOW SAME RCITY
SELECT CITY
CLEAR
@ 4, 5 SAY 'City Code Wise / City Name Wise' COLOR W/N 
@ 4, 40 GET MCN PICTURE '@!' VALID MCN='C' .OR. MCN='N' ERROR 'Code / Name (C/N)' COLOR W/N 
READ
CLEAR
@ 3, 13 SAY 'Report in Processing'
@ 5, 13 SAY "Please Don't Distrub"
IF MCN='C'
   SET ORDER TO C_Code
   MTITLE = 'Code Wise List Of All Cities'
ELSE
   SET ORDER TO Name
   MTITLE = 'Name Wise List Of All Cities'
ENDIF
GOTO TOP
CLEAR
@ 4, 5 SAY 'Report To Printer Or Screen (P/S)' COLOR W/N 
@ 4, 40 GET MPS PICTURE '@!' VALID MPS='P' .OR. MPS='S' ERROR 'Printer Or Screen (P/S)' COLOR W/N 
READ
IF MPS='P'
   DO REPPRTPRO
ELSE
   DO REPSCRPRO
ENDIF
RELEASE WINDOW RCITY
SET PRINTER OFF
SET DEVICE TO SCREEN
CLOSE DATABASES
RETURN

PROCEDURE REPPRTPRO
SET PRINTER ON
SET DEVICE TO PRINTER
MLINE = 6
@ 1, 1 SAY MCOMP
@ 1, 67 SAY 'Page: '+STR(MPAGE,2)
@ 2, 1 SAY MTITLE
@ 2, 62 SAY 'Date: '+DTOC(DATE())
@ 3, 0 SAY REPLICATE('-',80)
@ 4, 0 SAY 'SERIAL      CODE              NAME'
@ 5, 0 SAY 'NUMBER'
@ 6, 0 SAY REPLICATE('-',80)
DO WHILE  .NOT. EOF()
   MLINE = MLINE+1
   MSR_NO = MSR_NO+1
   @ MLINE, 0 SAY STR(MSR_NO,4)+'        '+C_CODE+'         '+NAME
   SKIP
   IF MLINE>58
      EJECT
      MPAGE = MPAGE+1
      MLINE = 6
      @ 1, 1 SAY MCOMP
      @ 1, 67 SAY 'Page: '+STR(MPAGE,2)
      @ 2, 1 SAY MTITLE
      @ 2, 62 SAY 'Date: '+DTOC(DATE())
      @ 3, 0 SAY REPLICATE('-',77)
      @ 4, 0 SAY 'SERIAL      CODE              NAME'
      @ 5, 0 SAY 'NUMBER'
      @ 6, 0 SAY REPLICATE('-',77)
   ENDIF
ENDDO
MLINE = MLINE+1
@ MLINE, 0 SAY REPLICATE('-',77)
MLINE = MLINE+1
@ MLINE, 65 SAY 'End Of Report'
EJECT
RETURN

PROCEDURE REPSCRPRO
DO DSPSCRPRO IN Proc1
MLINE = 6
@ 1, 1 SAY MCOMP
@ 2, 1 SAY MTITLE
@ 2, 62 SAY 'Date: '+DTOC(DATE())
@ 3, 0 SAY REPLICATE('-',78)
@ 4, 0 SAY 'SERIAL      CODE              NAME'
@ 5, 0 SAY 'NUMBER'
@ 6, 0 SAY REPLICATE('-',78)
DO WHILE  .NOT. EOF()
   MLINE = MLINE+1
   MSR_NO = MSR_NO+1
   @ MLINE, 0 SAY STR(MSR_NO,4)+'        '+C_CODE+'         '+NAME
   SKIP
   IF MLINE>18
      @ 21, 28 SAY 'Continue Or Quit C/Q'
      @ 21, 50 GET MCQ PICTURE '@!' VALID MCQ='C' .OR. MCQ='Q' ERROR 'Continue Or Quit (C/Q)'
      READ
      IF MCQ='Q'
         RELEASE WINDOW SCR
         RETURN
      ENDIF
      @ 7, 0 CLEAR TO 21, 78
      MLINE = 6
   ENDIF
ENDDO
WAIT WINDOW 'End of Report.....'
RELEASE WINDOW SCR
RETURN
*
